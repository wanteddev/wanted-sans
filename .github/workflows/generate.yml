name: Generate Assets

on:
  push:
    branches:
      - main

jobs:
  wanted-sans:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'release:')
    strategy:
      matrix:
        shard: ["1/6", "2/6", "3/6", "4/6", "5/6", "6/6"]
        include:
          - shard: "1/6"
            branch: "ori-1"
          - shard: "2/6"
            branch: "ori-2"
          - shard: "3/6"
            branch: "ori-3"
          - shard: "4/6"
            branch: "ori-4"
          - shard: "5/6"
            branch: "ori-5"
          - shard: "6/6"
            branch: "ori-6"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - uses: ./.github/actions/setup-pip
      - uses: ./.github/actions/setup-yarn
      - uses: ./.github/actions/subset-push
        with:
          workspace: wanted-sans
          shard: ${{ matrix.shard }}
          branch: ${{ matrix.branch }}

  wanted-sans-std:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'release:')
    strategy:
      matrix:
        shard: ["1/1"]
        include:
          - shard: "1/1"
            branch: "std-1"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - uses: ./.github/actions/setup-pip
      - uses: ./.github/actions/setup-yarn
      - uses: ./.github/actions/subset-push
        with:
          workspace: wanted-sans-std
          shard: ${{ matrix.shard }}
          branch: ${{ matrix.branch }}

  auto-update:
    needs: [wanted-sans, wanted-sans-std]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Commit Build File
        shell: bash
        run: |
          # From ../actions/auto-commit
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          LAST_COMMIT_NAME="$(git log -n 1 --pretty=format:%an)"
          LAST_COMMIT_EMAIL="$(git log -n 1 --pretty=format:%ae)"
          LAST_COMMIT_AUTHOR="Co-authored-by: ${LAST_COMMIT_NAME} <${LAST_COMMIT_EMAIL}>"

          BRANCHES=("ori-1" "ori-2" "ori-3" "ori-4" "ori-5" "ori-6" "std-1")
          for BRANCH in "${BRANCHES[@]}"; do
            if [[ "$(git rev-parse --verify origin/${BRANCH} 2>/dev/null)" ]]; then
              echo "${BRANCH}"
              git rebase "origin/${BRANCH}"
              git push origin --delete "${BRANCH}"
            fi
          done

          LOG="fix: Auto-generate assets"
          while [[ "$(git log -2 --pretty=%s | tail -1)" == "${LOG}" ]]; do
            TWO_LOG="$(git log -2 --pretty=%s)"
            if [[ "$(echo ${TWO_LOG} | head -1)" ==  "$(echo ${TWO_LOG} | tail -1)" ]]; then
              git reset --soft "HEAD~1"
              git commit --amend -m "${LOG}" -m "${LAST_COMMIT_AUTHOR}"
            fi
          done

          if [[ "$(git log @{push}..)" != "" ]]; then
            git push
          fi

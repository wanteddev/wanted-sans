{
.appVersion = "3220";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abrevedotbelow Acaron Acircumflex Acircumflexdotbelow Adieresis Adotbelow Agrave Amacron Aogonek Aring Atilde AE B Bdotbelow C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Dcaron Dcircumflexbelow Dcroat Ddotbelow Dmacronbelow Dtail Eth E Eacute Ecaron Ecedilla Ecircumflex Ecircumflexdotbelow Edieresis Edotaccent Edotbelow Egrave Emacron Eogonek Ereversed Etilde F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gmacron H Hbrevebelow Hcircumflex Hdotbelow I IJ Iacute Icaron Icircumflex Idieresis Idotaccent Idotbelow Igrave Imacron Iogonek Itilde J Jacute Jcircumflex K Kcaron Kcommaaccent Kmacronbelow L Lacute Lcaron Lcircumflexbelow Lcommaaccent Ldotbelow Ldotbelowmacron Lmacronbelow Lslash M Macute Mdotaccent Mdotbelow N Nacute Ncaron Ncircumflexbelow Ncommaaccent Ndotaccent Ndotbelow Nmacronbelow Ntilde O Oacute Ocaron Ocircumflex Ocircumflexdotbelow Odieresis Odotbelow Ograve Ohungarumlaut Omacron Oopen Oslash Oslashacute Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent Rdotbelowmacron Rmacronbelow S Sacute Scaron Scedilla Scircumflex Scommaaccent Sdotbelow T Tcaron Tcedilla Tcircumflexbelow Tcommaaccent Tdotbelow Tmacronbelow U Uacute Ubreve Ucaron Ucircumflex Udieresis Udotbelow Ugrave Uhungarumlaut Umacron Uogonek Uring Utilde V Vturned W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotaccent Ydotbelow Ygrave Ymacron Ytilde Z Zacute Zcaron Zdotaccent Zdotbelow Zmacronbelow J.cv05 Jacute.cv05 Jcircumflex.cv05 Q.cv06 I.cv18 IJ.cv18 Iacute.cv18 Icaron.cv18 Icircumflex.cv18 Idieresis.cv18 Idotaccent.cv18 Idotbelow.cv18 Igrave.cv18 Imacron.cv18 Iogonek.cv18 Itilde.cv18 Cacute.loclPLK Nacute.loclPLK Oacute.loclPLK Sacute.loclPLK Zacute.loclPLK";
name = Uppercase;
},
{
automatic = 1;
code = "a aacute abreve abrevedotbelow acaron acircumflex acircumflexdotbelow adblgrave adieresis adotaccent adotbelow agrave alpha-latin alphaturned-latin amacron aogonek aring atilde aturned ae b bdotbelow c cacute ccaron ccedilla ccircumflex cdotaccent d dcaron dcircumflexbelow dcroat ddotbelow dmacronbelow eth e eacute ecaron ecedilla ecircumflex ecircumflexdotbelow edieresis edotaccent edotbelow egrave emacron eogonek ereversed etilde eturned schwa f g gbreve gcaron gcircumflex gcommaaccent gdotaccent gmacron gsingle h hbar hbrevebelow hcircumflex hdotbelow hmacronbelow i idotless iacute icaron icircumflex idieresis idotaccent idotbelow igrave imacron iogonek istroke itilde ij j jdotless jacute jcircumflex k kcaron kcommaaccent kmacronbelow kturned l lacute lcaron lcircumflexbelow lcommaaccent ldotbelow ldotbelowmacron lmacronbelow lslash m macute mdotaccent mdotbelow mturned n nacute ncaron ncircumflexbelow ncommaaccent ndotaccent ndotbelow nmacronbelow ntilde o oacute ocaron ocircumflex ocircumflexdotbelow odieresis odotbelow ograve ohungarumlaut omacron oopen oslash oslashacute otilde oe p thorn q r racute rcaron rcommaaccent rdotbelowmacron rmacronbelow rturned s sacute scaron scedilla scircumflex scommaaccent sdotbelow germandbls t tcaron tcedilla tcircumflexbelow tcommaaccent tdieresis tdotbelow tmacronbelow u uacute ubreve ucaron ucircumflex udieresis udotbelow ugrave uhungarumlaut umacron uogonek uring utilde v vturned w wacute wcircumflex wdieresis wgrave wturned x y yacute ycircumflex ydieresis ydotaccent ydotbelow ygrave ymacron ytilde yturned z zacute zcaron zdotaccent zdotbelow zmacronbelow j.cv01 jdotless.cv01 jacute.cv01 jcircumflex.cv01 t.cv02 tcaron.cv02 tcedilla.cv02 tcircumflexbelow.cv02 tcommaaccent.cv02 tdieresis.cv02 tdotbelow.cv02 tmacronbelow.cv02 a.cv03 aacute.cv03 abreve.cv03 abrevedotbelow.cv03 acaron.cv03 acircumflex.cv03 acircumflexdotbelow.cv03 adblgrave.cv03 adieresis.cv03 adotaccent.cv03 adotbelow.cv03 agrave.cv03 amacron.cv03 aogonek.cv03 aring.cv03 atilde.cv03 aturned.cv03 u.cv04 uacute.cv04 ubreve.cv04 ucaron.cv04 ucircumflex.cv04 udieresis.cv04 udotbelow.cv04 ugrave.cv04 uhungarumlaut.cv04 umacron.cv04 uogonek.cv04 uring.cv04 utilde.cv04 r.cv15 racute.cv15 rcaron.cv15 rcommaaccent.cv15 rdotbelowmacron.cv15 rmacronbelow.cv15 rturned.cv15 l.cv16 lacute.cv16 lcaron.cv16 lcircumflexbelow.cv16 lcommaaccent.cv16 ldotbelow.cv16 ldotbelowmacron.cv16 lmacronbelow.cv16 lslash.cv16 f.cv19 g.cv20 gbreve.cv20 gcaron.cv20 gcircumflex.cv20 gcommaaccent.cv20 gdotaccent.cv20 gmacron.cv20 gsingle.cv20 a.cv21 aacute.cv21 abreve.cv21 abrevedotbelow.cv21 acaron.cv21 acircumflex.cv21 acircumflexdotbelow.cv21 adblgrave.cv21 adieresis.cv21 adotaccent.cv21 adotbelow.cv21 agrave.cv21 amacron.cv21 aogonek.cv21 aring.cv21 atilde.cv21 aturned.cv21 e.cv22 eacute.cv22 ecaron.cv22 ecedilla.cv22 ecircumflex.cv22 ecircumflexdotbelow.cv22 edieresis.cv22 edotaccent.cv22 edotbelow.cv22 egrave.cv22 emacron.cv22 eogonek.cv22 ereversed.cv22 etilde.cv22 eturned.cv22 schwa.cv22 aacute.loclPLK cacute.loclPLK nacute.loclPLK oacute.loclPLK sacute.loclPLK zacute.loclPLK b.ss04 bdotbelow.ss04 d.ss04 dcaron.ss04 dcircumflexbelow.ss04 dcroat.ss04 ddotbelow.ss04 dmacronbelow.ss04 h.ss04 hbar.ss04 hbrevebelow.ss04 hcircumflex.ss04 hdotbelow.ss04 hmacronbelow.ss04 k.ss04 kcaron.ss04 kcommaaccent.ss04 kmacronbelow.ss04 l.ss04 lacute.ss04 lcaron.ss04 lcircumflexbelow.ss04 lcommaaccent.ss04 ldotbelow.ss04 ldotbelowmacron.ss04 lmacronbelow.ss04 lslash.ss04 aacute.loclPLK.cv03 l.ss04.cv16 lacute.ss04.cv16 lcaron.ss04.cv16 lcircumflexbelow.ss04.cv16 lcommaaccent.ss04.cv16 ldotbelow.ss04.cv16 ldotbelowmacron.ss04.cv16 lmacronbelow.ss04.cv16 lslash.ss04.cv16 aacute.loclPLK.cv21 a.dnom b.dnom c.dnom d.dnom e.dnom f.dnom g.dnom h.dnom i.dnom j.dnom k.dnom l.dnom m.dnom n.dnom o.dnom p.dnom q.dnom r.dnom s.dnom t.dnom u.dnom v.dnom w.dnom x.dnom y.dnom z.dnom a.numr b.numr c.numr d.numr e.numr f.numr g.numr h.numr i.numr j.numr k.numr l.numr m.numr n.numr o.numr p.numr q.numr r.numr s.numr t.numr u.numr v.numr w.numr x.numr y.numr z.numr j.dnom.cv01 j.numr.cv01 t.dnom.cv02 t.numr.cv02 a.dnom.cv03 a.numr.cv03 u.dnom.cv04 u.numr.cv04 r.dnom.cv15 r.numr.cv15 l.dnom.cv16 l.numr.cv16 f.dnom.cv19 f.numr.cv19 g.dnom.cv20 g.numr.cv20 a.dnom.cv21 a.numr.cv21 e.dnom.cv22 e.numr.cv22 f_f f_f_i f_f_l f_i f_l fi fl f_f.cv19 f_f_i.cv19 f_f_l.cv19 f_i.cv19 f_l.cv19 fi.cv19 fl.cv19";
name = Lowercase;
},
{
code = "$[subCategory == \"Currency\"]
at
ampersand
question
percent
perthousand
pertenthousand
";
name = Uniquecase;
},
{
code = "$[subCategory == \"Decimal Digit\"]
";
name = Numeral;
},
{
code = "$[script == \"hangul\"]
";
name = Hangeul;
},
{
code = "@Uppercase
@Numeral
@Uniquecase
@Hangeul";
name = Case;
},
{
code = "$[category == \"Separator\"]
";
name = Separator;
},
{
code = "$[colorIndex == 0 and note contains \"$CASE\"] 
";
name = CASE_L;
},
{
code = "$[colorIndex == 1 and note contains \"$CASE\"] 
";
name = CASE_R;
},
{
code = "$[colorIndex == 0 and note contains \"$EXTRA_STEM_LOWERCASE\"] 
";
name = EXTRA_STEM_LOWERCASE_L;
},
{
code = "$[colorIndex == 1 and note contains \"$EXTRA_STEM_LOWERCASE\"] 
";
name = EXTRA_STEM_LOWERCASE_R;
},
{
code = "$[note contains \"$SYMBOL_SMALL\"]
";
name = SYMBOL_SMALL;
},
{
code = "$[note contains \"$SYMBOL_MEDIUM\"]
";
name = SYMBOL_MEDIUM;
},
{
code = "$[note contains \"$SYMBOL_LARGE\"]
";
name = SYMBOL_LARGE;
},
{
code = "$[note contains \"$SYMBOL_LETTER\" and note contains \"$SYMBOL_FILL\" and note contains \"$SYMBOL_CIRCLE\"]
";
name = SYMBOL_LETTER_FILL_CIRCLE;
},
{
code = "$[note contains \"$SYMBOL_LETTER\" and note contains \"$SYMBOL_FILL\" and note contains \"$SYMBOL_SQUARE\"]
";
name = SYMBOL_LETTER_FILL_SQUARE;
},
{
code = "$[note contains \"$SYMBOL_LETTER\" and note contains \"$SYMBOL_OUTLINE\" and note contains \"$SYMBOL_CIRCLE\"]
";
name = SYMBOL_LETTER_OUTLINE_CIRCLE;
},
{
code = "$[note contains \"$SYMBOL_LETTER\" and note contains \"$SYMBOL_OUTLINE\" and note contains \"$SYMBOL_SQUARE\"]
";
name = SYMBOL_LETTER_OUTLINE_SQUARE;
},
{
code = "$[note contains \"$SYMBOL_ICON\" and note contains \"$SYMBOL_FILL\"]
";
name = SYMBOL_ICON_FILL;
},
{
code = "$[note contains \"$SYMBOL_ICON\" and note contains \"$SYMBOL_OUTLINE\"]
";
name = SYMBOL_ICON_OUTLINE;
},
{
code = "$[note contains \"$SYMBOL_ICON\" and note contains \"$SYMBOL_CIRCLE\"]
";
name = SYMBOL_ICON_CIRCLE;
},
{
code = "$[note contains \"$SYMBOL_ICON\" and note contains \"$SYMBOL_SQUARE\"]
";
name = SYMBOL_ICON_SQUARE;
}
);
customParameters = (
{
name = fsType;
value = (
);
},
{
name = ROS;
value = "Adobe-Identity-0";
},
{
name = codePageRanges;
value = (
"1252",
"949"
);
}
);
date = "2023-10-11 15:00:21 +0000";
familyName = "Wanted Sans";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn PLK;
languagesystem latn CAT;
languagesystem latn NLD;

languagesystem hang dflt;
";
name = Languagesystems;
},
{
code = "lookup LOOKUP_CALT_1 {
# Ignore aligning lowercase-based glyphs: l_l
ignore sub @CASE_L' @Lowercase;
ignore sub @Lowercase @CASE_L';

# Cut two more uppercase based glyphs
ignore sub @CASE_L' @CASE_L;
ignore sub @CASE_L @CASE_L';
ignore sub @CASE_L' @Separator @CASE_L;
ignore sub @CASE_L @Separator @CASE_L';

# Align lowercase-based glyphs with uppercase: U-U
sub @Case @CASE_L' by @CASE_R;
sub @CASE_L' @Case by @CASE_R;
sub @Case @Separator @CASE_L' by @CASE_R;
sub @CASE_L' @Separator @Case by @CASE_R;
} LOOKUP_CALT_1;

lookup LOOKUP_CALT_2 {
# Improve legibility of I and l
@I = [
$[case > 0 and name beginswith \"I\"]
];

@Latin = [
@Uppercase
@Lowercase
];

# Separate in confrontation
sub @I @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_R @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @EXTRA_STEM_LOWERCASE_L @I by @EXTRA_STEM_LOWERCASE_R;

# Separating when close together in confrontation
sub @I @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @Latin @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @Latin @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;
sub @I @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @EXTRA_STEM_LOWERCASE_L' by @EXTRA_STEM_LOWERCASE_R;
sub @EXTRA_STEM_LOWERCASE_L' @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @Latin @I by @EXTRA_STEM_LOWERCASE_R;

} LOOKUP_CALT_2;

lookup LOOKUP_CALT_3 {
# Align ellipsis with Hangeul

@ELLIPSIS_L = [
$[colorIndex == 0 and note contains \"$3_CALT\"]
];

@ELLIPSIS_R = [
$[colorIndex == 1 and note contains \"$3_CALT\"]
];

@Parenleft = [
$[name beginswith \"parenleft\"]
];

@Parenright = [
$[name beginswith \"parenright\"]
];

# Cut ellipsis insides paren

# Cut three more ellipsis glyphs
ignore sub period @ELLIPSIS_L';
ignore sub @ELLIPSIS_L' period @ELLIPSIS_L;
ignore sub @ELLIPSIS_L' @ELLIPSIS_L period @ELLIPSIS_L;
ignore sub period @ELLIPSIS_L @ELLIPSIS_L';
ignore sub period @ELLIPSIS_L @ELLIPSIS_L @ELLIPSIS_L';
ignore sub @ELLIPSIS_L @ELLIPSIS_L' @ELLIPSIS_L' period;
ignore sub @ELLIPSIS_L' @ELLIPSIS_L' @ELLIPSIS_L';
ignore sub @ELLIPSIS_L @ELLIPSIS_L @ELLIPSIS_L @ELLIPSIS_L';

# ...K K... K.......
sub @Hangeul @ELLIPSIS_L' by @ELLIPSIS_R;
sub @Hangeul @ELLIPSIS_R @ELLIPSIS_L' by @ELLIPSIS_R;
sub @ELLIPSIS_L' @Hangeul by @ELLIPSIS_R;
sub @ELLIPSIS_L' @ELLIPSIS_L @Hangeul by @ELLIPSIS_R;

# ...... K ......
sub @ELLIPSIS_L' @Separator @Hangeul by @ELLIPSIS_R;
sub @ELLIPSIS_L' @ELLIPSIS_L @Separator @Hangeul by @ELLIPSIS_R;
sub @Hangeul @Separator @ELLIPSIS_L' by @ELLIPSIS_R;
sub @Hangeul @Separator @ELLIPSIS_R @ELLIPSIS_L' by @ELLIPSIS_R;

# .... .......
sub @ELLIPSIS_L' period @Hangeul by @ELLIPSIS_R;
sub @ELLIPSIS_L' period @Separator @Hangeul by @ELLIPSIS_R;
sub @ELLIPSIS_L' @ELLIPSIS_L period @Hangeul by @ELLIPSIS_R;
sub @ELLIPSIS_L' @ELLIPSIS_L period @Separator @Hangeul by @ELLIPSIS_R;

} LOOKUP_CALT_3;
";
name = LOOKUP_CALT;
},
{
code = "lookup LOOKUP_DLIG_1 {
sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f by f_f;
sub f i by f_i;
sub f l by f_l;
} LOOKUP_DLIG_1;
";
name = LOOKUP_DLIG;
},
{
code = "lookup LOOKUP_LIGA_1 {
# Wanted Logo
sub w a n t e d underscore l o g o by wantedLogo;
} LOOKUP_LIGA_1;";
name = LOOKUP_LIGA;
},
{
code = "lookup LOOKUP_SS05_1 {
# Replace glyphs to align vertical with Hangeul
# Bring case
sub colon by colon.case;
sub questiondown by questiondown.case;
sub periodcentered by periodcentered.case;
sub bullet by bullet.case;
sub hyphenbullet by hyphenbullet.case;
sub slash by slash.case;
sub backslash by backslash.case;
sub triangularbullet by triangularbullet.case;
sub periodcentered.loclCAT by periodcentered.loclCAT.case;
sub hyphen by hyphen.case;
sub endash by endash.case;
sub emdash by emdash.case;
sub threeemdash by threeemdash.case;
sub twoemdash by twoemdash.case;
sub parenleft by parenleft.case;
sub parenright by parenright.case;
sub braceleft by braceleft.case;
sub braceright by braceright.case;
sub bracketleft by bracketleft.case;
sub bracketright by bracketright.case;
sub guillemetleft by guillemetleft.case;
sub guillemetright by guillemetright.case;
sub guilsinglleft by guilsinglleft.case;
sub guilsinglright by guilsinglright.case;
sub at by at.case;
sub plus by plus.case;
sub minus by minus.case;
sub multiply by multiply.case;
sub divide by divide.case;
sub equal by equal.case;
sub greater by greater.case;
sub less by less.case;
sub plusminus by plusminus.case;
sub approxequal by approxequal.case;
sub asciitilde by asciitilde.case;
sub logicalnot by logicalnot.case;
sub whiteBullet by whiteBullet.case;
sub ogonekcomb by ogonekcomb.case;
# End bring
} LOOKUP_SS05_1;

lookup LOOKUP_SS05_2 {
# Align ellipsis with Hangeul

# Cut three more ellipsis glyphs
ignore sub period @ELLIPSIS_L';
ignore sub period @ELLIPSIS_L @ELLIPSIS_L';
ignore sub @ELLIPSIS_L' period @ELLIPSIS_L;
ignore sub @ELLIPSIS_L @ELLIPSIS_L' @ELLIPSIS_L' period;
ignore sub @ELLIPSIS_L' @ELLIPSIS_L period @ELLIPSIS_L;

# .... .......
sub @ELLIPSIS_L' period by @ELLIPSIS_R;
sub @ELLIPSIS_L' @ELLIPSIS_L period by @ELLIPSIS_R;
} LOOKUP_SS05_2;
";
name = LOOKUP_SS05;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature subs;
feature sinf;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature pnum;
feature tnum;
feature case;
feature zero;
feature ss01;
feature ss02;
feature ss03;
feature ss04;
feature ss06;
feature ss10;
feature ss11;
feature ss12;
feature ss13;
feature ss14;
feature ss15;
feature ss16;
feature cv01;
feature cv02;
feature cv03;
feature cv04;
feature cv05;
feature cv06;
feature cv07;
feature cv08;
feature cv09;
feature cv10;
feature cv11;
feature cv12;
feature cv13;
feature cv14;
feature cv15;
feature cv16;
feature cv17;
feature cv18;
feature cv19;
feature cv20;
feature cv21;
feature cv22;
";
tag = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commareversedabovecomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	lookupflag UseMarkFilteringSet @CombiningTopAccents;
	sub i' @CombiningTopAccents by idotless;
	sub j' @CombiningTopAccents by jdotless;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	@Markscomb = [ogonekcomb];
	@MarkscombCase = [ogonekcomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_Other_3 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_3;

lookup ccmp_latn_1 {
	sub fi by f i;
	sub fl by f l;
} ccmp_latn_1;

script latn;
lookup ccmp_latn_1;
";
tag = ccmp;
},
{
automatic = 1;
code = "script latn;
language AZE;
lookup locl_latn_0 {
	sub i by idotaccent;
} locl_latn_0;
language CRT;
lookup locl_latn_0;
language KAZ;
lookup locl_latn_0;
language TAT;
lookup locl_latn_0;
language TRK;
lookup locl_latn_0;

script latn;
language ROM;
lookup locl_latn_1 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;
language MOL;
lookup locl_latn_1;

script latn;
language PLK;
lookup locl_latn_2 {
	sub Cacute by Cacute.loclPLK;
	sub Nacute by Nacute.loclPLK;
	sub Oacute by Oacute.loclPLK;
	sub Sacute by Sacute.loclPLK;
	sub Zacute by Zacute.loclPLK;
	sub aacute by aacute.loclPLK;
	sub cacute by cacute.loclPLK;
	sub nacute by nacute.loclPLK;
	sub oacute by oacute.loclPLK;
	sub sacute by sacute.loclPLK;
	sub zacute by zacute.loclPLK;
	sub acutecomb by acutecomb.loclPLK;
	sub acute by acute.loclPLK;
} locl_latn_2;

script latn;
lookup locl_latn_3 {
	sub bar by bar.locllatn;
	sub brokenbar by brokenbar.locllatn;
} locl_latn_3;

script latn;
language CAT;
lookup locl_latn_4 {
	sub l periodcentered' l by periodcentered.loclCAT;
	sub L periodcentered' L by periodcentered.loclCAT.case;
} locl_latn_4;

script latn;
language NLD;
lookup locl_latn_5 {
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_5;

script hang;
lookup locl_hang_0 {
	sub questiondown by questiondown.loclhang;
	sub periodcentered by periodcentered.loclhang;
	sub bullet by bullet.loclhang;
	sub hyphenbullet by hyphenbullet.loclhang;
	sub slash by slash.loclhang;
	sub backslash by backslash.loclhang;
	sub triangularbullet by triangularbullet.loclhang;
	sub hyphen by hyphen.loclhang;
	sub endash by endash.loclhang;
	sub emdash by emdash.loclhang;
	sub threeemdash by threeemdash.loclhang;
	sub twoemdash by twoemdash.loclhang;
	sub parenleft by parenleft.loclhang;
	sub parenright by parenright.loclhang;
	sub braceleft by braceleft.loclhang;
	sub braceright by braceright.loclhang;
	sub bracketleft by bracketleft.loclhang;
	sub bracketright by bracketright.loclhang;
	sub guillemetleft by guillemetleft.loclhang;
	sub guillemetright by guillemetright.loclhang;
	sub guilsinglleft by guilsinglleft.loclhang;
	sub guilsinglright by guilsinglright.loclhang;
	sub at by at.loclhang;
	sub plus by plus.loclhang;
	sub minus by minus.loclhang;
	sub multiply by multiply.loclhang;
	sub divide by divide.loclhang;
	sub equal by equal.loclhang;
	sub greater by greater.loclhang;
	sub less by less.loclhang;
	sub plusminus by plusminus.loclhang;
	sub approxequal by approxequal.loclhang;
	sub asciitilde by asciitilde.loclhang;
	sub logicalnot by logicalnot.loclhang;
	sub whiteBullet by whiteBullet.loclhang;
} locl_hang_0;
";
tag = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
sub b by b.subs;
sub c by c.subs;
sub d by d.subs;
sub f by f.subs;
sub g by g.subs;
sub q by q.subs;
sub w by w.subs;
sub y by y.subs;
sub z by z.subs;
sub a by a.subs;
sub e by e.subs;
sub i by i.subs;
sub j by j.subs;
sub o by o.subs;
sub r by r.subs;
sub u by u.subs;
sub v by v.subs;
sub x by x.subs;
sub h by h.subs;
sub k by k.subs;
sub l by l.subs;
sub m by m.subs;
sub n by n.subs;
sub p by p.subs;
sub s by s.subs;
sub t by t.subs;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
sub b by b.subs;
sub c by c.subs;
sub d by d.subs;
sub f by f.subs;
sub g by g.subs;
sub q by q.subs;
sub w by w.subs;
sub y by y.subs;
sub z by z.subs;
sub a by a.subs;
sub e by e.subs;
sub i by i.subs;
sub j by j.subs;
sub o by o.subs;
sub r by r.subs;
sub u by u.subs;
sub v by v.subs;
sub x by x.subs;
sub h by h.subs;
sub k by k.subs;
sub l by l.subs;
sub m by m.subs;
sub n by n.subs;
sub p by p.subs;
sub s by s.subs;
sub t by t.subs;
";
tag = sinf;
},
{
automatic = 1;
code = "sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
sub h by h.sups;
sub i by i.sups;
sub j by j.sups;
sub l by l.sups;
sub n by n.sups;
sub r by r.sups;
sub s by s.sups;
sub w by w.sups;
sub x by x.sups;
sub y by y.sups;
sub a by a.sups;
sub b by b.sups;
sub c by c.sups;
sub d by d.sups;
sub e by e.sups;
sub f by f.sups;
sub g by g.sups;
sub k by k.sups;
sub m by m.sups;
sub o by o.sups;
sub p by p.sups;
sub t by t.sups;
sub u by u.sups;
sub v by v.sups;
sub z by z.sups;
sub q by q.sups;
";
tag = sups;
},
{
automatic = 1;
code = "sub a by a.numr;
sub b by b.numr;
sub c by c.numr;
sub d by d.numr;
sub e by e.numr;
sub f by f.numr;
sub g by g.numr;
sub h by h.numr;
sub i by i.numr;
sub j by j.numr;
sub k by k.numr;
sub l by l.numr;
sub m by m.numr;
sub n by n.numr;
sub o by o.numr;
sub p by p.numr;
sub q by q.numr;
sub r by r.numr;
sub s by s.numr;
sub t by t.numr;
sub u by u.numr;
sub v by v.numr;
sub w by w.numr;
sub x by x.numr;
sub y by y.numr;
sub z by z.numr;
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
";
tag = numr;
},
{
automatic = 1;
code = "sub a by a.dnom;
sub b by b.dnom;
sub c by c.dnom;
sub d by d.dnom;
sub e by e.dnom;
sub f by f.dnom;
sub g by g.dnom;
sub h by h.dnom;
sub i by i.dnom;
sub j by j.dnom;
sub k by k.dnom;
sub l by l.dnom;
sub m by m.dnom;
sub n by n.dnom;
sub o by o.dnom;
sub p by p.dnom;
sub q by q.dnom;
sub r by r.dnom;
sub s by s.dnom;
sub t by t.dnom;
sub u by u.dnom;
sub v by v.dnom;
sub w by w.dnom;
sub x by x.dnom;
sub y by y.dnom;
sub z by z.dnom;
sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
";
tag = dnom;
},
{
automatic = 1;
code = "lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
tag = ordn;
},
{
automatic = 1;
code = "sub zero.tf by zero;
sub one.tf by one;
sub two.tf by two;
sub three.tf by three;
sub four.tf by four;
sub five.tf by five;
sub six.tf by six;
sub seven.tf by seven;
sub eight.tf by eight;
sub nine.tf by nine;
";
tag = pnum;
},
{
automatic = 1;
code = "sub zero by zero.tf;
sub one by one.tf;
sub two by two.tf;
sub three by three.tf;
sub four by four.tf;
sub five by five.tf;
sub six by six.tf;
sub seven by seven.tf;
sub eight by eight.tf;
sub nine by nine.tf;
";
tag = tnum;
},
{
automatic = 1;
code = "sub colon by colon.case;
sub questiondown by questiondown.case;
sub periodcentered by periodcentered.case;
sub bullet by bullet.case;
sub hyphenbullet by hyphenbullet.case;
sub slash by slash.case;
sub backslash by backslash.case;
sub triangularbullet by triangularbullet.case;
sub periodcentered.loclCAT by periodcentered.loclCAT.case;
sub hyphen by hyphen.case;
sub endash by endash.case;
sub emdash by emdash.case;
sub threeemdash by threeemdash.case;
sub twoemdash by twoemdash.case;
sub parenleft by parenleft.case;
sub parenright by parenright.case;
sub braceleft by braceleft.case;
sub braceright by braceright.case;
sub bracketleft by bracketleft.case;
sub bracketright by bracketright.case;
sub guillemetleft by guillemetleft.case;
sub guillemetright by guillemetright.case;
sub guilsinglleft by guilsinglleft.case;
sub guilsinglright by guilsinglright.case;
sub at by at.case;
sub plus by plus.case;
sub minus by minus.case;
sub multiply by multiply.case;
sub divide by divide.case;
sub equal by equal.case;
sub greater by greater.case;
sub less by less.case;
sub plusminus by plusminus.case;
sub approxequal by approxequal.case;
sub asciitilde by asciitilde.case;
sub logicalnot by logicalnot.case;
sub whiteBullet by whiteBullet.case;
sub ogonekcomb by ogonekcomb.case;
";
tag = case;
},
{
automatic = 1;
code = "sub zero by zero.zero;
sub zero.box by zero.box.zero;
sub zero.roundBlackBox by zero.roundBlackBox.zero;
sub zero.tf by zero.tf.zero;
sub zero.blackCircled by zero.blackCircled.zero;
sub zero.circled by zero.circled.zero;
sub zero.dnom by zero.dnom.zero;
sub zero.numr by zero.numr.zero;
sub zeroinferior by zeroinferior.zero;
sub zerosuperior by zerosuperior.zero;
";
tag = zero;
},
{
code = "lookup LOOKUP_CALT_1;
lookup LOOKUP_CALT_2;
lookup LOOKUP_CALT_3;
";
tag = calt;
},
{
code = "# Duplicated calt due to the web's inability to support Hangeul characters in calt
lookup LOOKUP_CALT_1;
lookup LOOKUP_CALT_3;
";
tag = clig;
},
{
code = "lookup LOOKUP_DLIG_1;";
tag = dlig;
},
{
code = "lookupflag IgnoreMarks;

lookup LOOKUP_LIGA_1;
";
tag = liga;
},
{
code = "#ifdef VARIABLE

# Fix overlap and swap alternates issue from filled glyphs
@RLIG_L = [
Q.roundBlackBox
Q.blackCircled
Q.box
Q.circled
];

@RLIG_R = [
Q.roundBlackBox.bold
Q.blackCircled.bold
Q.box.bold
Q.circled.bold
];

condition 650 < wght;
sub @RLIG_L by @RLIG_R;

#endif
";
tag = rlig;
},
{
code = "# Automatic Code

@L = [
$[name beginswith 'L' and rightKerningGroup == 'L']
];

@Quote = [
quotedblleft
quotedblright
quoteleft
quoteright
];

@A = [
$[name beginswith 'A' and leftKerningGroup == 'A']
];

@J = [
$[name beginswith 'J' and leftKerningGroup == 'J']
];

pos @L @Quote' 144 (wght:900) 40 @A;
pos @L @Quote' 96 (wght:900) 40 @J;";
tag = kern;
},
{
code = "# Bring cv01 cv02 cv04 cv06 cv07 cv08 cv11 cv12 cv13
sub j by j.cv01;
sub jdotless by jdotless.cv01;
sub jacute by jacute.cv01;
sub jcircumflex by jcircumflex.cv01;
sub j.dnom by j.dnom.cv01;
sub j.numr by j.numr.cv01;
sub j.subs by j.subs.cv01;
sub j.sups by j.sups.cv01;
sub t by t.cv02;
sub tcaron by tcaron.cv02;
sub tcedilla by tcedilla.cv02;
sub tcircumflexbelow by tcircumflexbelow.cv02;
sub tcommaaccent by tcommaaccent.cv02;
sub tdieresis by tdieresis.cv02;
sub tdotbelow by tdotbelow.cv02;
sub tmacronbelow by tmacronbelow.cv02;
sub t.dnom by t.dnom.cv02;
sub t.numr by t.numr.cv02;
sub t.subs by t.subs.cv02;
sub t.sups by t.sups.cv02;
sub u by u.cv04;
sub uacute by uacute.cv04;
sub ubreve by ubreve.cv04;
sub ucaron by ucaron.cv04;
sub ucircumflex by ucircumflex.cv04;
sub udieresis by udieresis.cv04;
sub udotbelow by udotbelow.cv04;
sub ugrave by ugrave.cv04;
sub uhungarumlaut by uhungarumlaut.cv04;
sub umacron by umacron.cv04;
sub uogonek by uogonek.cv04;
sub uring by uring.cv04;
sub utilde by utilde.cv04;
sub u.dnom by u.dnom.cv04;
sub u.numr by u.numr.cv04;
sub u.subs by u.subs.cv04;
sub u.sups by u.sups.cv04;
sub Q by Q.cv06;
sub Q.blackCircled by Q.blackCircled.cv06;
sub Q.box by Q.box.cv06;
sub Q.roundBlackBox by Q.roundBlackBox.cv06;
sub Q.circled by Q.circled.cv06;
sub one by one.cv07;
sub one.box by one.box.cv07;
sub one.blackCircled by one.blackCircled.cv07;
sub one.circled by one.circled.cv07;
sub one.roundBlackBox by one.roundBlackBox.cv07;
sub one.tf by one.tf.cv07;
sub one.dnom by one.dnom.cv07;
sub one.numr by one.numr.cv07;
sub onequarter by onequarter.cv07;
sub oneeighth by oneeighth.cv07;
sub oneinferior by oneinferior.cv07;
sub onesuperior by onesuperior.cv07;
sub two by two.cv08;
sub two.box by two.box.cv08;
sub two.blackCircled by two.blackCircled.cv08;
sub two.circled by two.circled.cv08;
sub two.roundBlackBox by two.roundBlackBox.cv08;
sub two.tf by two.tf.cv08;
sub two.dnom by two.dnom.cv08;
sub two.numr by two.numr.cv08;
sub onehalf by onehalf.cv07.cv08;
sub onehalf.cv07 by onehalf.cv07.cv08;
sub twoinferior by twoinferior.cv08;
sub twosuperior by twosuperior.cv08;
sub six by six.cv11;
sub nine by nine.cv11;
sub six.box by six.box.cv11;
sub nine.box by nine.box.cv11;
sub six.blackCircled by six.blackCircled.cv11;
sub nine.blackCircled by nine.blackCircled.cv11;
sub six.circled by six.circled.cv11;
sub nine.circled by nine.circled.cv11;
sub six.roundBlackBox by six.roundBlackBox.cv11;
sub nine.roundBlackBox by nine.roundBlackBox.cv11;
sub six.tf by six.tf.cv11;
sub nine.tf by nine.tf.cv11;
sub six.dnom by six.dnom.cv11;
sub nine.dnom by nine.dnom.cv11;
sub six.numr by six.numr.cv11;
sub nine.numr by nine.numr.cv11;
sub sixinferior by sixinferior.cv11;
sub nineinferior by nineinferior.cv11;
sub sixsuperior by sixsuperior.cv11;
sub ninesuperior by ninesuperior.cv11;
sub seven by seven.cv12;
sub seven.box by seven.box.cv12;
sub seven.blackCircled by seven.blackCircled.cv12;
sub seven.circled by seven.circled.cv12;
sub seven.roundBlackBox by seven.roundBlackBox.cv12;
sub seven.tf by seven.tf.cv12;
sub seven.dnom by seven.dnom.cv12;
sub seven.numr by seven.numr.cv12;
sub seveneighths by seveneighths.cv12;
sub seveninferior by seveninferior.cv12;
sub sevensuperior by sevensuperior.cv12;
sub question by question.cv13;
sub questiondown by questiondown.cv13;
# End Bring
";
labels = (
{
language = dflt;
value = "Geometric forms";
}
);
tag = ss01;
},
{
code = "# Bring cv07 cv08 cv10 cv12
sub one by one.cv07;
sub one.box by one.box.cv07;
sub one.blackCircled by one.blackCircled.cv07;
sub one.circled by one.circled.cv07;
sub one.roundBlackBox by one.roundBlackBox.cv07;
sub one.tf by one.tf.cv07;
sub one.dnom by one.dnom.cv07;
sub one.numr by one.numr.cv07;
sub oneeighth by oneeighth.cv07;
sub oneinferior by oneinferior.cv07;
sub onesuperior by onesuperior.cv07;
sub two by two.cv08;
sub two.box by two.box.cv08;
sub two.blackCircled by two.blackCircled.cv08;
sub two.circled by two.circled.cv08;
sub two.roundBlackBox by two.roundBlackBox.cv08;
sub two.tf by two.tf.cv08;
sub two.dnom by two.dnom.cv08;
sub two.numr by two.numr.cv08;
sub onehalf by onehalf.cv07.cv08;
sub twoinferior by twoinferior.cv08;
sub twosuperior by twosuperior.cv08;
sub four by four.cv10;
sub four.box by four.box.cv10;
sub four.blackCircled by four.blackCircled.cv10;
sub four.circled by four.circled.cv10;
sub four.roundBlackBox by four.roundBlackBox.cv10;
sub four.tf by four.tf.cv10;
sub four.dnom by four.dnom.cv10;
sub four.numr by four.numr.cv10;
sub onequarter by onequarter.cv07.cv10;
sub threequarters by threequarters.cv10;
sub fourinferior by fourinferior.cv10;
sub foursuperior by foursuperior.cv10;
sub seven by seven.cv12;
sub seven.box by seven.box.cv12;
sub seven.blackCircled by seven.blackCircled.cv12;
sub seven.circled by seven.circled.cv12;
sub seven.roundBlackBox by seven.roundBlackBox.cv12;
sub seven.tf by seven.tf.cv12;
sub seven.dnom by seven.dnom.cv12;
sub seven.numr by seven.numr.cv12;
sub seveneighths by seveneighths.cv12;
sub seveninferior by seveninferior.cv12;
sub sevensuperior by sevensuperior.cv12;
# End Bring
";
labels = (
{
language = dflt;
value = "Common numerics";
}
);
tag = ss02;
},
{
code = "# Bring cv09 cv13 cv14 cv15 cv19 cv20 cv21 cv22
sub three by three.cv09;
sub three.box by three.box.cv09;
sub three.blackCircled by three.blackCircled.cv09;
sub three.circled by three.circled.cv09;
sub three.roundBlackBox by three.roundBlackBox.cv09;
sub three.tf by three.tf.cv09;
sub three.dnom by three.dnom.cv09;
sub three.numr by three.numr.cv09;
sub threequarters by threequarters.cv09;
sub threeeighths by threeeighths.cv09;
sub threeinferior by threeinferior.cv09;
sub threesuperior by threesuperior.cv09;
sub question by question.cv13;
sub questiondown by questiondown.cv13;
sub questiondown.case by questiondown.case.cv13;
sub questiondown.loclhang by questiondown.loclhang.cv13;
sub two by two.cv14;
sub two.box by two.box.cv14;
sub two.blackCircled by two.blackCircled.cv14;
sub two.circled by two.circled.cv14;
sub two.roundBlackBox by two.roundBlackBox.cv14;
sub two.tf by two.tf.cv14;
sub two.dnom by two.dnom.cv14;
sub two.numr by two.numr.cv14;
sub onehalf by onehalf.cv14;
sub onehalf.cv07 by onehalf.cv07.cv14;
sub twoinferior by twoinferior.cv14;
sub twosuperior by twosuperior.cv14;
sub r by r.cv15;
sub racute by racute.cv15;
sub rcaron by rcaron.cv15;
sub rcommaaccent by rcommaaccent.cv15;
sub rdotbelowmacron by rdotbelowmacron.cv15;
sub rmacronbelow by rmacronbelow.cv15;
sub rturned by rturned.cv15;
sub r.dnom by r.dnom.cv15;
sub r.numr by r.numr.cv15;
sub r.subs by r.subs.cv15;
sub r.sups by r.sups.cv15;
sub f by f.cv19;
sub f.dnom by f.dnom.cv19;
sub f.numr by f.numr.cv19;
sub f_f by f_f.cv19;
sub f_f_i by f_f_i.cv19;
sub f_f_l by f_f_l.cv19;
sub f_i by f_i.cv19;
sub f_l by f_l.cv19;
sub fi by fi.cv19;
sub fl by fl.cv19;
sub f.subs by f.subs.cv19;
sub f.sups by f.sups.cv19;
sub g by g.cv20;
sub gbreve by gbreve.cv20;
sub gcaron by gcaron.cv20;
sub gcircumflex by gcircumflex.cv20;
sub gcommaaccent by gcommaaccent.cv20;
sub gdotaccent by gdotaccent.cv20;
sub gmacron by gmacron.cv20;
sub gsingle by gsingle.cv20;
sub g.dnom by g.dnom.cv20;
sub g.numr by g.numr.cv20;
sub g.subs by g.subs.cv20;
sub g.sups by g.sups.cv20;
sub a by a.cv21;
sub aacute by aacute.cv21;
sub abreve by abreve.cv21;
sub abrevedotbelow by abrevedotbelow.cv21;
sub acaron by acaron.cv21;
sub acircumflex by acircumflex.cv21;
sub acircumflexdotbelow by acircumflexdotbelow.cv21;
sub adblgrave by adblgrave.cv21;
sub adieresis by adieresis.cv21;
sub adotaccent by adotaccent.cv21;
sub adotbelow by adotbelow.cv21;
sub agrave by agrave.cv21;
sub amacron by amacron.cv21;
sub aogonek by aogonek.cv21;
sub aring by aring.cv21;
sub atilde by atilde.cv21;
sub aturned by aturned.cv21;
sub aacute.loclPLK by aacute.loclPLK.cv21;
sub a.dnom by a.dnom.cv21;
sub a.numr by a.numr.cv21;
sub a.subs by a.subs.cv21;
sub a.sups by a.sups.cv21;
sub ordfeminine by ordfeminine.cv21;
sub e by e.cv22;
sub eacute by eacute.cv22;
sub ecaron by ecaron.cv22;
sub ecedilla by ecedilla.cv22;
sub ecircumflex by ecircumflex.cv22;
sub ecircumflexdotbelow by ecircumflexdotbelow.cv22;
sub edieresis by edieresis.cv22;
sub edotaccent by edotaccent.cv22;
sub edotbelow by edotbelow.cv22;
sub egrave by egrave.cv22;
sub emacron by emacron.cv22;
sub eogonek by eogonek.cv22;
sub ereversed by ereversed.cv22;
sub etilde by etilde.cv22;
sub eturned by eturned.cv22;
sub schwa by schwa.cv22;
sub e.dnom by e.dnom.cv22;
sub e.numr by e.numr.cv22;
sub e.subs by e.subs.cv22;
sub e.sups by e.sups.cv22;
# End Bring
";
labels = (
{
language = dflt;
value = "Stylistic forms";
}
);
tag = ss03;
},
{
code = "# Copy and paste codes below automatically generated feature
sub b by b.ss04;
sub bdotbelow by bdotbelow.ss04;
sub d by d.ss04;
sub dcaron by dcaron.ss04;
sub dcircumflexbelow by dcircumflexbelow.ss04;
sub dcroat by dcroat.ss04;
sub ddotbelow by ddotbelow.ss04;
sub dmacronbelow by dmacronbelow.ss04;
sub h by h.ss04;
sub hbar by hbar.ss04;
sub hbrevebelow by hbrevebelow.ss04;
sub hcircumflex by hcircumflex.ss04;
sub hdotbelow by hdotbelow.ss04;
sub hmacronbelow by hmacronbelow.ss04;
sub k by k.ss04;
sub kcaron by kcaron.ss04;
sub kcommaaccent by kcommaaccent.ss04;
sub kmacronbelow by kmacronbelow.ss04;
sub l by l.ss04;
sub lacute by lacute.ss04;
sub lcaron by lcaron.ss04;
sub lcircumflexbelow by lcircumflexbelow.ss04;
sub lcommaaccent by lcommaaccent.ss04;
sub ldotbelow by ldotbelow.ss04;
sub ldotbelowmacron by ldotbelowmacron.ss04;
sub lmacronbelow by lmacronbelow.ss04;
sub lslash by lslash.ss04;
";
labels = (
{
language = dflt;
value = "Legible ascender";
}
);
tag = ss04;
},
{
code = "lookup LOOKUP_SS05_1;
lookup LOOKUP_SS05_2;
";
labels = (
{
language = dflt;
value = "Korea localization";
}
);
tag = ss05;
},
{
code = "# Customize sets
@SS06_L = [
];
@SS06_R = [
];

sub @SS06_L by @SS06_R;

# Bring cv03 cv05 cv09 cv11 cv12 cv16 cv17 cv18
sub a by a.cv03;
sub aacute by aacute.cv03;
sub abreve by abreve.cv03;
sub abrevedotbelow by abrevedotbelow.cv03;
sub acaron by acaron.cv03;
sub acircumflex by acircumflex.cv03;
sub acircumflexdotbelow by acircumflexdotbelow.cv03;
sub adblgrave by adblgrave.cv03;
sub adieresis by adieresis.cv03;
sub adotaccent by adotaccent.cv03;
sub adotbelow by adotbelow.cv03;
sub agrave by agrave.cv03;
sub amacron by amacron.cv03;
sub aogonek by aogonek.cv03;
sub aring by aring.cv03;
sub atilde by atilde.cv03;
sub aturned by aturned.cv03;
sub aacute.loclPLK by aacute.loclPLK.cv03;
sub a.dnom by a.dnom.cv03;
sub a.numr by a.numr.cv03;
sub a.subs by a.subs.cv03;
sub a.sups by a.sups.cv03;
sub ordfeminine by ordfeminine.cv03;
sub J by J.cv05;
sub Jacute by Jacute.cv05;
sub Jcircumflex by Jcircumflex.cv05;
sub J.blackCircled by J.blackCircled.cv05;
sub J.box by J.box.cv05;
sub J.roundBlackBox by J.roundBlackBox.cv05;
sub J.circled by J.circled.cv05;
sub three by three.cv09;
sub three.box by three.box.cv09;
sub three.blackCircled by three.blackCircled.cv09;
sub three.circled by three.circled.cv09;
sub three.roundBlackBox by three.roundBlackBox.cv09;
sub three.tf by three.tf.cv09;
sub three.dnom by three.dnom.cv09;
sub three.numr by three.numr.cv09;
sub threequarters by threequarters.cv09;
sub threeeighths by threeeighths.cv09;
sub threeinferior by threeinferior.cv09;
sub threesuperior by threesuperior.cv09;
sub six by six.cv11;
sub nine by nine.cv11;
sub six.box by six.box.cv11;
sub nine.box by nine.box.cv11;
sub six.blackCircled by six.blackCircled.cv11;
sub nine.blackCircled by nine.blackCircled.cv11;
sub six.circled by six.circled.cv11;
sub nine.circled by nine.circled.cv11;
sub six.roundBlackBox by six.roundBlackBox.cv11;
sub nine.roundBlackBox by nine.roundBlackBox.cv11;
sub six.tf by six.tf.cv11;
sub nine.tf by nine.tf.cv11;
sub six.dnom by six.dnom.cv11;
sub nine.dnom by nine.dnom.cv11;
sub six.numr by six.numr.cv11;
sub nine.numr by nine.numr.cv11;
sub sixinferior by sixinferior.cv11;
sub nineinferior by nineinferior.cv11;
sub sixsuperior by sixsuperior.cv11;
sub ninesuperior by ninesuperior.cv11;
sub seven by seven.cv12;
sub seven.box by seven.box.cv12;
sub seven.blackCircled by seven.blackCircled.cv12;
sub seven.circled by seven.circled.cv12;
sub seven.roundBlackBox by seven.roundBlackBox.cv12;
sub seven.tf by seven.tf.cv12;
sub seven.dnom by seven.dnom.cv12;
sub seven.numr by seven.numr.cv12;
sub seveneighths by seveneighths.cv12;
sub seveninferior by seveninferior.cv12;
sub sevensuperior by sevensuperior.cv12;
sub l by l.cv16;
sub lacute by lacute.cv16;
sub lcaron by lcaron.cv16;
sub lcircumflexbelow by lcircumflexbelow.cv16;
sub lcommaaccent by lcommaaccent.cv16;
sub ldotbelow by ldotbelow.cv16;
sub ldotbelowmacron by ldotbelowmacron.cv16;
sub lmacronbelow by lmacronbelow.cv16;
sub lslash by lslash.cv16;
sub l.ss04 by l.ss04.cv16;
sub lacute.ss04 by lacute.ss04.cv16;
sub lcaron.ss04 by lcaron.ss04.cv16;
sub lcircumflexbelow.ss04 by lcircumflexbelow.ss04.cv16;
sub lcommaaccent.ss04 by lcommaaccent.ss04.cv16;
sub ldotbelow.ss04 by ldotbelow.ss04.cv16;
sub ldotbelowmacron.ss04 by ldotbelowmacron.ss04.cv16;
sub lmacronbelow.ss04 by lmacronbelow.ss04.cv16;
sub lslash.ss04 by lslash.ss04.cv16;
sub l.dnom by l.dnom.cv16;
sub l.numr by l.numr.cv16;
sub l.subs by l.subs.cv16;
sub l.sups by l.sups.cv16;
sub one by one.cv17;
sub one.box by one.box.cv17;
sub one.cv07 by one.cv07.cv17;
sub one.blackCircled by one.blackCircled.cv17;
sub one.circled by one.circled.cv17;
sub one.roundBlackBox by one.roundBlackBox.cv17;
sub one.tf by one.tf.cv17;
sub one.box.cv07 by one.box.cv07.cv17;
sub one.blackCircled.cv07 by one.blackCircled.cv07.cv17;
sub one.circled.cv07 by one.circled.cv07.cv17;
sub one.roundBlackBox.cv07 by one.roundBlackBox.cv07.cv17;
sub one.tf.cv07 by one.tf.cv07.cv17;
sub one.dnom by one.dnom.cv17;
sub one.numr by one.numr.cv17;
sub onehalf by onehalf.cv17;
sub onequarter by onequarter.cv17;
sub oneeighth by oneeighth.cv17;
sub one.dnom.cv07 by one.dnom.cv07.cv17;
sub one.numr.cv07 by one.numr.cv07.cv17;
sub onehalf.cv07 by onehalf.cv07.cv17;
sub onequarter.cv07 by onequarter.cv07.cv17;
sub oneeighth.cv07 by oneeighth.cv07.cv17;
sub onehalf.cv08 by onehalf.cv08.cv17;
sub onequarter.cv10 by onequarter.cv10.cv17;
sub onehalf.cv14 by onehalf.cv14.cv17;
sub onehalf.cv07.cv08 by onehalf.cv07.cv08.cv17;
sub onequarter.cv07.cv10 by onequarter.cv07.cv10.cv17;
sub onehalf.cv07.cv14 by onehalf.cv07.cv14.cv17;
sub oneinferior by oneinferior.cv17;
sub onesuperior by onesuperior.cv17;
sub oneinferior.cv07 by oneinferior.cv07.cv17;
sub onesuperior.cv07 by onesuperior.cv07.cv17;
sub I by I.cv18;
sub IJ by IJ.cv18;
sub Iacute by Iacute.cv18;
sub Icaron by Icaron.cv18;
sub Icircumflex by Icircumflex.cv18;
sub Idieresis by Idieresis.cv18;
sub Idotaccent by Idotaccent.cv18;
sub Idotbelow by Idotbelow.cv18;
sub Igrave by Igrave.cv18;
sub Imacron by Imacron.cv18;
sub Iogonek by Iogonek.cv18;
sub Itilde by Itilde.cv18;
# End Bring
";
labels = (
{
language = dflt;
value = "High legibility";
}
);
tag = ss06;
},
{
code = "sub @SYMBOL_SMALL by @SYMBOL_MEDIUM;
sub @SYMBOL_LARGE by @SYMBOL_MEDIUM;
";
labels = (
{
language = dflt;
value = "Medium symbols";
}
);
tag = ss10;
},
{
code = "sub @SYMBOL_LETTER_FILL_SQUARE by @SYMBOL_LETTER_OUTLINE_SQUARE;
sub @SYMBOL_LETTER_FILL_CIRCLE by @SYMBOL_LETTER_OUTLINE_CIRCLE;
sub @SYMBOL_ICON_FILL by @SYMBOL_ICON_OUTLINE;
";
labels = (
{
language = dflt;
value = "Outlined symbols";
}
);
tag = ss11;
},
{
code = "sub @SYMBOL_LETTER_FILL_SQUARE by @SYMBOL_LETTER_FILL_CIRCLE;
sub @SYMBOL_LETTER_OUTLINE_SQUARE by @SYMBOL_LETTER_OUTLINE_CIRCLE;
sub @SYMBOL_ICON_SQUARE by @SYMBOL_ICON_CIRCLE;
";
labels = (
{
language = dflt;
value = "Circle symbols";
}
);
tag = ss12;
},
{
code = "sub @SYMBOL_LETTER_FILL_CIRCLE by @SYMBOL_LETTER_FILL_SQUARE;
sub @SYMBOL_LETTER_OUTLINE_CIRCLE by @SYMBOL_LETTER_OUTLINE_SQUARE;
sub @SYMBOL_ICON_CIRCLE by @SYMBOL_ICON_SQUARE;
";
labels = (
{
language = dflt;
value = "Square symbols";
}
);
tag = ss13;
},
{
code = "sub @SYMBOL_LETTER_OUTLINE_SQUARE by @SYMBOL_LETTER_FILL_SQUARE;
sub @SYMBOL_LETTER_OUTLINE_CIRCLE by @SYMBOL_LETTER_FILL_CIRCLE;
sub @SYMBOL_ICON_OUTLINE by @SYMBOL_ICON_FILL;
";
labels = (
{
language = dflt;
value = "Filled symbols";
}
);
tag = ss14;
},
{
code = "sub @SYMBOL_LARGE by @SYMBOL_SMALL;
sub @SYMBOL_MEDIUM by @SYMBOL_SMALL;";
labels = (
{
language = dflt;
value = "Small symbols";
}
);
tag = ss15;
},
{
code = "sub @SYMBOL_SMALL by @SYMBOL_LARGE;
sub @SYMBOL_MEDIUM by @SYMBOL_LARGE;";
labels = (
{
language = dflt;
value = "Large symbols";
}
);
tag = ss16;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Geometric j\";
}; };

# Copy and paste codes below automatically generated feature
sub j by j.cv01;
sub jdotless by jdotless.cv01;
sub jacute by jacute.cv01;
sub jcircumflex by jcircumflex.cv01;
sub j.dnom by j.dnom.cv01;
sub j.numr by j.numr.cv01;
sub j.subs by j.subs.cv01;
sub j.sups by j.sups.cv01;
";
tag = cv01;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Geometric t\";
}; };

# Copy and paste codes below automatically generated feature
sub t by t.cv02;
sub tcaron by tcaron.cv02;
sub tcedilla by tcedilla.cv02;
sub tcircumflexbelow by tcircumflexbelow.cv02;
sub tcommaaccent by tcommaaccent.cv02;
sub tdieresis by tdieresis.cv02;
sub tdotbelow by tdotbelow.cv02;
sub tmacronbelow by tmacronbelow.cv02;
sub t.dnom by t.dnom.cv02;
sub t.numr by t.numr.cv02;
sub t.subs by t.subs.cv02;
sub t.sups by t.sups.cv02;
";
tag = cv02;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Double-storey a\";
}; };

# Copy and paste codes below automatically generated feature
sub a by a.cv03;
sub aacute by aacute.cv03;
sub abreve by abreve.cv03;
sub abrevedotbelow by abrevedotbelow.cv03;
sub acaron by acaron.cv03;
sub acircumflex by acircumflex.cv03;
sub acircumflexdotbelow by acircumflexdotbelow.cv03;
sub adblgrave by adblgrave.cv03;
sub adieresis by adieresis.cv03;
sub adotaccent by adotaccent.cv03;
sub adotbelow by adotbelow.cv03;
sub agrave by agrave.cv03;
sub amacron by amacron.cv03;
sub aogonek by aogonek.cv03;
sub aring by aring.cv03;
sub atilde by atilde.cv03;
sub aturned by aturned.cv03;
sub aacute.loclPLK by aacute.loclPLK.cv03;
sub a.dnom by a.dnom.cv03;
sub a.numr by a.numr.cv03;
sub a.subs by a.subs.cv03;
sub a.sups by a.sups.cv03;
sub ordfeminine by ordfeminine.cv03;
";
tag = cv03;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Geometric u\";
}; };

# Copy and paste codes below automatically generated feature
sub u by u.cv04;
sub uacute by uacute.cv04;
sub ubreve by ubreve.cv04;
sub ucaron by ucaron.cv04;
sub ucircumflex by ucircumflex.cv04;
sub udieresis by udieresis.cv04;
sub udotbelow by udotbelow.cv04;
sub ugrave by ugrave.cv04;
sub uhungarumlaut by uhungarumlaut.cv04;
sub umacron by umacron.cv04;
sub uogonek by uogonek.cv04;
sub uring by uring.cv04;
sub utilde by utilde.cv04;
sub u.dnom by u.dnom.cv04;
sub u.numr by u.numr.cv04;
sub u.subs by u.subs.cv04;
sub u.sups by u.sups.cv04;
";
tag = cv04;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Legible J\";
}; };

# Copy and paste codes below automatically generated feature
sub J by J.cv05;
sub Jacute by Jacute.cv05;
sub Jcircumflex by Jcircumflex.cv05;
sub J.blackCircled by J.blackCircled.cv05;
sub J.box by J.box.cv05;
sub J.roundBlackBox by J.roundBlackBox.cv05;
sub J.circled by J.circled.cv05;
";
tag = cv05;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Geometric Q\";
}; };

# Copy and paste codes below automatically generated feature
sub Q by Q.cv06;
sub Q.blackCircled by Q.blackCircled.cv06;
sub Q.box by Q.box.cv06;
sub Q.roundBlackBox by Q.roundBlackBox.cv06;
sub Q.blackCircled.bold by Q.blackCircled.bold.cv06;
sub Q.box.bold by Q.box.bold.cv06;
sub Q.circled by Q.circled.cv06;
sub Q.roundBlackBox.bold by Q.roundBlackBox.bold.cv06;
sub Q.circled.bold by Q.circled.bold.cv06;
";
tag = cv06;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Straight 1\";
}; };

# Copy and paste codes below automatically generated feature
sub one by one.cv07;
sub one.box by one.box.cv07;
sub one.blackCircled by one.blackCircled.cv07;
sub one.circled by one.circled.cv07;
sub one.roundBlackBox by one.roundBlackBox.cv07;
sub one.tf by one.tf.cv07;
sub one.dnom by one.dnom.cv07;
sub one.numr by one.numr.cv07;
sub onehalf by onehalf.cv07;
sub onequarter by onequarter.cv07;
sub oneeighth by oneeighth.cv07;
sub oneinferior by oneinferior.cv07;
sub onesuperior by onesuperior.cv07;
";
tag = cv07;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Straight 2\";
}; };

# Copy and paste codes below automatically generated feature
sub two by two.cv08;
sub two.box by two.box.cv08;
sub two.blackCircled by two.blackCircled.cv08;
sub two.circled by two.circled.cv08;
sub two.roundBlackBox by two.roundBlackBox.cv08;
sub two.tf by two.tf.cv08;
sub two.dnom by two.dnom.cv08;
sub two.numr by two.numr.cv08;
sub onehalf by onehalf.cv08;
sub onehalf.cv07 by onehalf.cv07.cv08;
sub twoinferior by twoinferior.cv08;
sub twosuperior by twosuperior.cv08;
";
tag = cv08;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Double-storey 3\";
}; };

# Copy and paste codes below automatically generated feature
sub three by three.cv09;
sub three.box by three.box.cv09;
sub three.blackCircled by three.blackCircled.cv09;
sub three.circled by three.circled.cv09;
sub three.roundBlackBox by three.roundBlackBox.cv09;
sub three.tf by three.tf.cv09;
sub three.dnom by three.dnom.cv09;
sub three.numr by three.numr.cv09;
sub threequarters by threequarters.cv09;
sub threeeighths by threeeighths.cv09;
sub threeinferior by threeinferior.cv09;
sub threesuperior by threesuperior.cv09;
";
tag = cv09;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Closed 4\";
}; };

# Copy and paste codes below automatically generated feature
sub four by four.cv10;
sub four.box by four.box.cv10;
sub four.blackCircled by four.blackCircled.cv10;
sub four.circled by four.circled.cv10;
sub four.roundBlackBox by four.roundBlackBox.cv10;
sub four.tf by four.tf.cv10;
sub four.dnom by four.dnom.cv10;
sub four.numr by four.numr.cv10;
sub onequarter by onequarter.cv10;
sub threequarters by threequarters.cv10;
sub onequarter.cv07 by onequarter.cv07.cv10;
sub threequarters.cv09 by threequarters.cv09.cv10;
sub fourinferior by fourinferior.cv10;
sub foursuperior by foursuperior.cv10;
";
tag = cv10;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Straight 6 9\";
}; };

# Copy and paste codes below automatically generated feature
sub six by six.cv11;
sub nine by nine.cv11;
sub six.box by six.box.cv11;
sub nine.box by nine.box.cv11;
sub six.blackCircled by six.blackCircled.cv11;
sub nine.blackCircled by nine.blackCircled.cv11;
sub six.circled by six.circled.cv11;
sub nine.circled by nine.circled.cv11;
sub six.roundBlackBox by six.roundBlackBox.cv11;
sub nine.roundBlackBox by nine.roundBlackBox.cv11;
sub six.tf by six.tf.cv11;
sub nine.tf by nine.tf.cv11;
sub six.dnom by six.dnom.cv11;
sub nine.dnom by nine.dnom.cv11;
sub six.numr by six.numr.cv11;
sub nine.numr by nine.numr.cv11;
sub sixinferior by sixinferior.cv11;
sub nineinferior by nineinferior.cv11;
sub sixsuperior by sixsuperior.cv11;
sub ninesuperior by ninesuperior.cv11;
";
tag = cv11;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Straight 7\";
}; };

# Copy and paste codes below automatically generated feature
sub seven by seven.cv12;
sub seven.box by seven.box.cv12;
sub seven.blackCircled by seven.blackCircled.cv12;
sub seven.circled by seven.circled.cv12;
sub seven.roundBlackBox by seven.roundBlackBox.cv12;
sub seven.tf by seven.tf.cv12;
sub seven.dnom by seven.dnom.cv12;
sub seven.numr by seven.numr.cv12;
sub seveneighths by seveneighths.cv12;
sub seveninferior by seveninferior.cv12;
sub sevensuperior by sevensuperior.cv12;
";
tag = cv12;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Geometric ?\";
}; };

# Copy and paste codes below automatically generated feature
sub question by question.cv13;
sub questiondown by questiondown.cv13;
sub questiondown.case by questiondown.case.cv13;
sub questiondown.loclhang by questiondown.loclhang.cv13;
";
tag = cv13;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Stylistic 2\";
}; };

# Copy and paste codes below automatically generated feature
sub two by two.cv14;
sub two.box by two.box.cv14;
sub two.blackCircled by two.blackCircled.cv14;
sub two.circled by two.circled.cv14;
sub two.roundBlackBox by two.roundBlackBox.cv14;
sub two.tf by two.tf.cv14;
sub two.dnom by two.dnom.cv14;
sub two.numr by two.numr.cv14;
sub onehalf by onehalf.cv14;
sub onehalf.cv07 by onehalf.cv07.cv14;
sub twoinferior by twoinferior.cv14;
sub twosuperior by twosuperior.cv14;
";
tag = cv14;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Stylistic r\";
}; };

# Copy and paste codes below automatically generated feature
sub r by r.cv15;
sub racute by racute.cv15;
sub rcaron by rcaron.cv15;
sub rcommaaccent by rcommaaccent.cv15;
sub rdotbelowmacron by rdotbelowmacron.cv15;
sub rmacronbelow by rmacronbelow.cv15;
sub rturned by rturned.cv15;
sub r.dnom by r.dnom.cv15;
sub r.numr by r.numr.cv15;
sub r.subs by r.subs.cv15;
sub r.sups by r.sups.cv15;
";
tag = cv15;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Legible l\";
}; };

# Copy and paste codes below automatically generated feature
sub l by l.cv16;
sub lacute by lacute.cv16;
sub lcaron by lcaron.cv16;
sub lcircumflexbelow by lcircumflexbelow.cv16;
sub lcommaaccent by lcommaaccent.cv16;
sub ldotbelow by ldotbelow.cv16;
sub ldotbelowmacron by ldotbelowmacron.cv16;
sub lmacronbelow by lmacronbelow.cv16;
sub lslash by lslash.cv16;
sub l.ss04 by l.ss04.cv16;
sub lacute.ss04 by lacute.ss04.cv16;
sub lcaron.ss04 by lcaron.ss04.cv16;
sub lcircumflexbelow.ss04 by lcircumflexbelow.ss04.cv16;
sub lcommaaccent.ss04 by lcommaaccent.ss04.cv16;
sub ldotbelow.ss04 by ldotbelow.ss04.cv16;
sub ldotbelowmacron.ss04 by ldotbelowmacron.ss04.cv16;
sub lmacronbelow.ss04 by lmacronbelow.ss04.cv16;
sub lslash.ss04 by lslash.ss04.cv16;
sub l.dnom by l.dnom.cv16;
sub l.numr by l.numr.cv16;
sub l.subs by l.subs.cv16;
sub l.sups by l.sups.cv16;
";
tag = cv16;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Legible 1\";
}; };

# Copy and paste codes below automatically generated feature
sub one by one.cv17;
sub one.box by one.box.cv17;
sub one.cv07 by one.cv07.cv17;
sub one.blackCircled by one.blackCircled.cv17;
sub one.circled by one.circled.cv17;
sub one.roundBlackBox by one.roundBlackBox.cv17;
sub one.tf by one.tf.cv17;
sub one.box.cv07 by one.box.cv07.cv17;
sub one.blackCircled.cv07 by one.blackCircled.cv07.cv17;
sub one.circled.cv07 by one.circled.cv07.cv17;
sub one.roundBlackBox.cv07 by one.roundBlackBox.cv07.cv17;
sub one.tf.cv07 by one.tf.cv07.cv17;
sub one.dnom by one.dnom.cv17;
sub one.numr by one.numr.cv17;
sub onehalf by onehalf.cv17;
sub onequarter by onequarter.cv17;
sub oneeighth by oneeighth.cv17;
sub one.dnom.cv07 by one.dnom.cv07.cv17;
sub one.numr.cv07 by one.numr.cv07.cv17;
sub onehalf.cv07 by onehalf.cv07.cv17;
sub onequarter.cv07 by onequarter.cv07.cv17;
sub oneeighth.cv07 by oneeighth.cv07.cv17;
sub onehalf.cv08 by onehalf.cv08.cv17;
sub onequarter.cv10 by onequarter.cv10.cv17;
sub onehalf.cv14 by onehalf.cv14.cv17;
sub onehalf.cv07.cv08 by onehalf.cv07.cv08.cv17;
sub onequarter.cv07.cv10 by onequarter.cv07.cv10.cv17;
sub onehalf.cv07.cv14 by onehalf.cv07.cv14.cv17;
sub oneinferior by oneinferior.cv17;
sub onesuperior by onesuperior.cv17;
sub oneinferior.cv07 by oneinferior.cv07.cv17;
sub onesuperior.cv07 by onesuperior.cv07.cv17;
";
tag = cv17;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Legible I\";
}; };

# Copy and paste codes below automatically generated feature
sub I by I.cv18;
sub IJ by IJ.cv18;
sub Iacute by Iacute.cv18;
sub Icaron by Icaron.cv18;
sub Icircumflex by Icircumflex.cv18;
sub Idieresis by Idieresis.cv18;
sub Idotaccent by Idotaccent.cv18;
sub Idotbelow by Idotbelow.cv18;
sub Igrave by Igrave.cv18;
sub Imacron by Imacron.cv18;
sub Iogonek by Iogonek.cv18;
sub Itilde by Itilde.cv18;
";
tag = cv18;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Stylistic f\";
}; };

# Copy and paste codes below automatically generated feature
sub f by f.cv19;
sub f.dnom by f.dnom.cv19;
sub f.numr by f.numr.cv19;
sub f_f by f_f.cv19;
sub f_f_i by f_f_i.cv19;
sub f_f_l by f_f_l.cv19;
sub f_i by f_i.cv19;
sub f_l by f_l.cv19;
sub fi by fi.cv19;
sub fl by fl.cv19;
sub f.subs by f.subs.cv19;
sub f.sups by f.sups.cv19;
";
tag = cv19;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Stylistic g\";
}; };

# Copy and paste codes below automatically generated feature
sub g by g.cv20;
sub gbreve by gbreve.cv20;
sub gcaron by gcaron.cv20;
sub gcircumflex by gcircumflex.cv20;
sub gcommaaccent by gcommaaccent.cv20;
sub gdotaccent by gdotaccent.cv20;
sub gmacron by gmacron.cv20;
sub gsingle by gsingle.cv20;
sub g.dnom by g.dnom.cv20;
sub g.numr by g.numr.cv20;
sub g.subs by g.subs.cv20;
sub g.sups by g.sups.cv20;
";
tag = cv20;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Stylistic a\";
}; };

# Copy and paste codes below automatically generated feature
sub a by a.cv21;
sub aacute by aacute.cv21;
sub abreve by abreve.cv21;
sub abrevedotbelow by abrevedotbelow.cv21;
sub acaron by acaron.cv21;
sub acircumflex by acircumflex.cv21;
sub acircumflexdotbelow by acircumflexdotbelow.cv21;
sub adblgrave by adblgrave.cv21;
sub adieresis by adieresis.cv21;
sub adotaccent by adotaccent.cv21;
sub adotbelow by adotbelow.cv21;
sub agrave by agrave.cv21;
sub amacron by amacron.cv21;
sub aogonek by aogonek.cv21;
sub aring by aring.cv21;
sub atilde by atilde.cv21;
sub aturned by aturned.cv21;
sub aacute.loclPLK by aacute.loclPLK.cv21;
sub a.dnom by a.dnom.cv21;
sub a.numr by a.numr.cv21;
sub a.subs by a.subs.cv21;
sub a.sups by a.sups.cv21;
sub ordfeminine by ordfeminine.cv21;
";
tag = cv21;
},
{
code = "cvParameters { FeatUILabelNameID { 
	name \"Stylistic e\";
}; };

# Copy and paste codes below automatically generated feature
sub e by e.cv22;
sub eacute by eacute.cv22;
sub ecaron by ecaron.cv22;
sub ecedilla by ecedilla.cv22;
sub ecircumflex by ecircumflex.cv22;
sub ecircumflexdotbelow by ecircumflexdotbelow.cv22;
sub edieresis by edieresis.cv22;
sub edotaccent by edotaccent.cv22;
sub edotbelow by edotbelow.cv22;
sub egrave by egrave.cv22;
sub emacron by emacron.cv22;
sub eogonek by eogonek.cv22;
sub ereversed by ereversed.cv22;
sub etilde by etilde.cv22;
sub eturned by eturned.cv22;
sub schwa by schwa.cv22;
sub e.dnom by e.dnom.cv22;
sub e.numr by e.numr.cv22;
sub e.subs by e.subs.cv22;
sub e.sups by e.sups.cv22;
";
tag = cv22;
}
);
fontMaster = (
{
axesValues = (
400
);
customParameters = (
{
name = "Master Icon Glyph Name";
value = R;
},
{
name = typoAscender;
value = 1950;
},
{
name = hheaAscender;
value = 1950;
},
{
name = winAscent;
value = 1950;
},
{
name = typoDescender;
value = -494;
},
{
name = hheaDescender;
value = -494;
},
{
name = winDescent;
value = 494;
},
{
name = strikeoutPosition;
value = 576;
},
{
name = underlineThickness;
value = 120;
},
{
name = strikeoutSize;
value = 120;
},
{
name = underlinePosition;
value = -320;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaLineGap;
value = 0;
}
);
id = m01;
metricValues = (
{
pos = 1950;
},
{
over = 28;
pos = 1448;
},
{
over = 28;
pos = 1032;
},
{
over = -28;
},
{
over = -28;
pos = -432;
},
{
pos = -494;
},
{
over = -16;
},
{
pos = 760;
},
{
pos = 540;
}
);
name = Regular;
userData = {
GSOffsetHorizontal = -20.5;
GSOffsetKeepCompatible = 1;
GSOffsetVertical = -20.5;
};
},
{
axesValues = (
1000
);
customParameters = (
{
name = "Master Icon Glyph Name";
value = B;
},
{
name = typoAscender;
value = 1950;
},
{
name = hheaAscender;
value = 1950;
},
{
name = winAscent;
value = 1950;
},
{
name = typoDescender;
value = -494;
},
{
name = hheaDescender;
value = -494;
},
{
name = winDescent;
value = 494;
},
{
name = strikeoutPosition;
value = 648;
},
{
name = underlineThickness;
value = 264;
},
{
name = strikeoutSize;
value = 264;
},
{
name = underlinePosition;
value = -256;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaLineGap;
value = 0;
}
);
id = "94F54C43-8AEE-4ED6-B3C2-2A9D33534E61";
metricValues = (
{
pos = 1950;
},
{
over = 28;
pos = 1448;
},
{
over = 28;
pos = 1032;
},
{
over = -28;
},
{
over = -28;
pos = -432;
},
{
pos = -494;
},
{
over = -16;
},
{
pos = 760;
},
{
pos = 540;
}
);
name = ExtraBlack;
userData = {
GSOffsetHorizontal = 106;
GSOffsetVertical = 0;
};
}
);
instances = (
{
axesValues = (
400
);
customParameters = (
{
name = panose;
value = (
2,
11,
5,
4,
0,
0,
0,
0,
0,
0
);
}
);
instanceInterpolations = {
m01 = 1;
};
name = Regular;
},
{
axesValues = (
500
);
customParameters = (
{
name = panose;
value = (
2,
11,
6,
4,
0,
0,
0,
0,
0,
0
);
}
);
instanceInterpolations = {
"94F54C43-8AEE-4ED6-B3C2-2A9D33534E61" = 0.16667;
m01 = 0.83333;
};
name = Medium;
weightClass = 500;
},
{
axesValues = (
600
);
customParameters = (
{
name = panose;
value = (
2,
11,
7,
4,
0,
0,
0,
0,
0,
0
);
}
);
instanceInterpolations = {
"94F54C43-8AEE-4ED6-B3C2-2A9D33534E61" = 0.33333;
m01 = 0.66667;
};
name = SemiBold;
weightClass = 600;
},
{
axesValues = (
700
);
customParameters = (
{
name = panose;
value = (
2,
11,
8,
4,
0,
0,
0,
0,
0,
0
);
}
);
instanceInterpolations = {
"94F54C43-8AEE-4ED6-B3C2-2A9D33534E61" = 0.5;
m01 = 0.5;
};
isBold = 1;
name = Bold;
weightClass = 700;
},
{
axesValues = (
800
);
customParameters = (
{
name = panose;
value = (
2,
11,
9,
4,
0,
0,
0,
0,
0,
0
);
}
);
instanceInterpolations = {
"94F54C43-8AEE-4ED6-B3C2-2A9D33534E61" = 0.66667;
m01 = 0.33333;
};
name = ExtraBold;
weightClass = 800;
},
{
axesValues = (
900
);
customParameters = (
{
name = panose;
value = (
2,
11,
10,
4,
0,
0,
0,
0,
0,
0
);
}
);
instanceInterpolations = {
"94F54C43-8AEE-4ED6-B3C2-2A9D33534E61" = 0.83333;
m01 = 0.16667;
};
name = Black;
weightClass = 900;
},
{
axesValues = (
1000
);
customParameters = (
{
name = panose;
value = (
2,
11,
11,
4,
0,
0,
0,
0,
0,
0
);
}
);
instanceInterpolations = {
"94F54C43-8AEE-4ED6-B3C2-2A9D33534E61" = 1;
};
name = ExtraBlack;
weightClass = 900;
},
{
customParameters = (
{
name = panose;
value = (
2,
11,
0,
4,
0,
0,
0,
0,
0,
0
);
},
{
name = "Variable Font Origin";
value = m01;
},
{
name = "Decompose Glyphs";
value = (
dcroat,
dcroat.ss04,
Q.roundBlackBox,
Q.blackCircled,
Q.circled,
Q.box,
Q.roundBlackBox.bold,
Q.blackCircled.bold
);
}
);
name = Regular;
type = variable;
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -88;
"@MMK_R_T" = -144;
"@MMK_R_U" = -56;
"@MMK_R_V" = -192;
"@MMK_R_Y" = -216;
"@MMK_R_ampersand" = -32;
"@MMK_R_asciicircum" = -176;
"@MMK_R_asterisk" = -176;
"@MMK_R_backslash" = -128;
"@MMK_R_backslash.case" = -176;
"@MMK_R_emdash" = -48;
"@MMK_R_emdash.case" = -80;
"@MMK_R_f" = -96;
"@MMK_R_five" = -16;
"@MMK_R_hyphen" = -72;
"@MMK_R_hyphen.case" = -104;
"@MMK_R_less" = -48;
"@MMK_R_less.case" = -104;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -24;
"@MMK_R_nine.cv11" = -96;
"@MMK_R_o" = -48;
"@MMK_R_one" = -112;
"@MMK_R_parenright" = -64;
"@MMK_R_periodcentered" = -64;
"@MMK_R_question" = -144;
"@MMK_R_quoteleft" = -176;
"@MMK_R_quotesingle" = -144;
"@MMK_R_seven" = -96;
"@MMK_R_six.cv11" = -40;
"@MMK_R_slash.case" = 48;
"@MMK_R_u" = -32;
"@MMK_R_v" = -112;
"@MMK_R_zero.numr" = -256;
"@MMK_R_zero.sups" = -224;
};
"@MMK_L_A.tag" = {
"@MMK_R_O.tag" = -46;
"@MMK_R_T.tag" = -76;
"@MMK_R_U.tag" = -29;
"@MMK_R_V.tag" = -113;
"@MMK_R_Y.tag" = -96;
"@MMK_R_five.tag" = -8;
"@MMK_R_nine.cv11.tag" = -50;
"@MMK_R_nine.tag" = -13;
"@MMK_R_one.tag" = -59;
"@MMK_R_seven.tag" = -50;
"@MMK_R_six.cv11.tag" = -21;
};
"@MMK_L_B" = {
"@MMK_R_A" = -40;
"@MMK_R_V" = -56;
"@MMK_R_X" = -40;
"@MMK_R_Y" = -56;
"@MMK_R_emdash" = 24;
"@MMK_R_f" = -24;
"@MMK_R_parenright" = -32;
"@MMK_R_parenright.case" = -32;
"@MMK_R_period" = -16;
"@MMK_R_questiondown" = -64;
"@MMK_R_quoteleft" = -32;
"@MMK_R_slash" = -80;
"@MMK_R_v" = -16;
"@MMK_R_x" = -16;
"@MMK_R_zero.sups" = -48;
};
"@MMK_L_B.tag" = {
"@MMK_R_A.tag" = -21;
"@MMK_R_V.tag" = -29;
"@MMK_R_X.tag" = -21;
"@MMK_R_Y.tag" = -29;
};
"@MMK_L_C" = {
"@MMK_R_Lslash" = -40;
"@MMK_R_asciicircum" = -56;
"@MMK_R_asterisk" = -56;
"@MMK_R_f" = -24;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -16;
"@MMK_R_questiondown" = -48;
"@MMK_R_slash" = -32;
};
"@MMK_L_E" = {
"@MMK_R_J" = -32;
"@MMK_R_O" = -24;
"@MMK_R_S" = -32;
"@MMK_R_o" = -16;
"@MMK_R_v" = -16;
};
"@MMK_L_E.tag" = {
"@MMK_R_J.tag" = -17;
"@MMK_R_O.tag" = -13;
"@MMK_R_S.tag" = -17;
};
"@MMK_L_F" = {
"@MMK_R_A" = -160;
"@MMK_R_J" = -128;
"@MMK_R_O" = -24;
"@MMK_R_S" = -24;
"@MMK_R_ampersand" = -64;
"@MMK_R_backslash" = 32;
"@MMK_R_g" = -24;
"@MMK_R_hyphen" = -40;
"@MMK_R_hyphen.case" = -16;
"@MMK_R_n" = -32;
"@MMK_R_o" = -48;
"@MMK_R_period" = -160;
"@MMK_R_questiondown" = -216;
"@MMK_R_s" = -48;
"@MMK_R_six.cv11" = -40;
"@MMK_R_slash" = -160;
"@MMK_R_slash.case" = -112;
"@MMK_R_u" = -40;
"@MMK_R_v" = -48;
"@MMK_R_x" = -48;
"@MMK_R_z" = -24;
"@MMK_R_zero.subs" = -184;
};
"@MMK_L_F.tag" = {
"@MMK_R_A.tag" = -84;
"@MMK_R_J.tag" = -67;
"@MMK_R_O.tag" = -13;
"@MMK_R_S.tag" = -13;
"@MMK_R_six.cv11.tag" = -21;
};
"@MMK_L_H" = {
"@MMK_R_jdotless" = 40;
"@MMK_R_slash" = -64;
};
"@MMK_L_I" = {
"@MMK_R_slash" = -48;
};
"@MMK_L_Islash" = {
"@MMK_R_questiondown" = -32;
};
"@MMK_L_J" = {
"@MMK_R_A" = -32;
"@MMK_R_questiondown" = -80;
};
"@MMK_L_J.tag" = {
"@MMK_R_A.tag" = -17;
};
"@MMK_L_L" = {
"@MMK_R_J" = -24;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -104;
"@MMK_R_S" = -48;
"@MMK_R_T" = -280;
"@MMK_R_U" = -72;
"@MMK_R_V" = -232;
"@MMK_R_Y" = -264;
"@MMK_R_asciicircum" = -272;
"@MMK_R_asterisk" = -272;
"@MMK_R_backslash" = -168;
"@MMK_R_backslash.case" = -192;
"@MMK_R_eight" = -32;
"@MMK_R_f" = -152;
"@MMK_R_five" = -80;
"@MMK_R_four" = -72;
"@MMK_R_g" = -48;
"@MMK_R_hyphen" = -80;
"@MMK_R_hyphen.case" = -80;
"@MMK_R_less" = -144;
"@MMK_R_less.case" = -144;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -120;
"@MMK_R_nine.cv11" = -152;
"@MMK_R_numbersign" = -32;
"@MMK_R_o" = -56;
"@MMK_R_one" = -160;
"@MMK_R_parenright" = -64;
"@MMK_R_question" = -168;
"@MMK_R_quoteleft" = -288;
"@MMK_R_quotesingle" = -176;
"@MMK_R_seven" = -176;
"@MMK_R_three" = -40;
"@MMK_R_u" = -64;
"@MMK_R_v" = -144;
"@MMK_R_zero.numr" = -328;
"@MMK_R_zero.sups" = -328;
periodcentered.loclCAT.case = -512;
t.cv02 = -80;
};
"@MMK_L_L.tag" = {
"@MMK_R_J.tag" = -13;
"@MMK_R_O.tag" = -55;
"@MMK_R_S.tag" = -25;
"@MMK_R_T.tag" = -147;
"@MMK_R_U.tag" = -38;
"@MMK_R_V.tag" = -139;
"@MMK_R_Y.tag" = -139;
"@MMK_R_eight.tag" = -17;
"@MMK_R_five.tag" = -42;
"@MMK_R_four.tag" = -38;
"@MMK_R_nine.cv11.tag" = -80;
"@MMK_R_nine.tag" = -63;
"@MMK_R_one.tag" = -84;
"@MMK_R_seven.tag" = -92;
"@MMK_R_three.tag" = -21;
};
"@MMK_L_O" = {
"@MMK_R_A" = -88;
"@MMK_R_J" = -24;
"@MMK_R_T" = -64;
"@MMK_R_V" = -56;
"@MMK_R_X" = -64;
"@MMK_R_Y" = -104;
"@MMK_R_Z" = -24;
"@MMK_R_asciicircum" = -16;
"@MMK_R_asterisk" = -16;
"@MMK_R_backslash.case" = -48;
"@MMK_R_emdash" = 24;
"@MMK_R_emdash.case" = 24;
"@MMK_R_parenright" = -48;
"@MMK_R_parenright.case" = -48;
"@MMK_R_period" = -104;
"@MMK_R_questiondown" = -128;
"@MMK_R_quoteleft" = 0;
"@MMK_R_quotesingle" = -16;
"@MMK_R_seven" = -72;
"@MMK_R_slash" = -80;
"@MMK_R_slash.case" = -48;
"@MMK_R_zero.subs" = -64;
"@MMK_R_zero.sups" = -24;
};
"@MMK_L_O.dnom" = {
"@MMK_R_seven.dnom" = -36;
"@MMK_R_zero.dnom" = -36;
};
"@MMK_L_O.tag" = {
"@MMK_R_A.tag" = -46;
"@MMK_R_J.tag" = -13;
"@MMK_R_T.tag" = -34;
"@MMK_R_V.tag" = -55;
"@MMK_R_X.tag" = -34;
"@MMK_R_Y.tag" = -55;
"@MMK_R_Z.tag" = -13;
"@MMK_R_seven.tag" = -38;
};
"@MMK_L_P" = {
"@MMK_R_A" = -160;
"@MMK_R_J" = -144;
"@MMK_R_T" = -24;
"@MMK_R_V" = -16;
"@MMK_R_X" = -48;
"@MMK_R_Y" = -16;
"@MMK_R_Z" = -16;
"@MMK_R_ampersand" = -80;
"@MMK_R_asciicircum" = -48;
"@MMK_R_asterisk" = -48;
"@MMK_R_emdash" = -64;
"@MMK_R_four" = -80;
"@MMK_R_g" = -32;
"@MMK_R_hyphen" = -88;
"@MMK_R_less" = -48;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -56;
"@MMK_R_parenright" = -32;
"@MMK_R_parenright.case" = -32;
"@MMK_R_period" = -160;
"@MMK_R_questiondown" = -152;
"@MMK_R_s" = -56;
"@MMK_R_slash" = -152;
"@MMK_R_slash.case" = -120;
"@MMK_R_three" = -80;
"@MMK_R_u" = -16;
"@MMK_R_zero.subs" = -264;
};
"@MMK_L_P.tag" = {
"@MMK_R_A.tag" = -84;
"@MMK_R_J.tag" = -76;
"@MMK_R_T.tag" = -13;
"@MMK_R_V.tag" = -8;
"@MMK_R_X.tag" = -25;
"@MMK_R_Y.tag" = -8;
"@MMK_R_Z.tag" = -8;
"@MMK_R_four.tag" = -42;
"@MMK_R_three.tag" = -42;
};
"@MMK_L_Q" = {
"@MMK_R_J" = -32;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -16;
"@MMK_R_S" = -48;
"@MMK_R_T" = -128;
"@MMK_R_U" = -56;
"@MMK_R_V" = -144;
"@MMK_R_Y" = -144;
"@MMK_R_ampersand" = -32;
"@MMK_R_asciicircum" = -72;
"@MMK_R_asterisk" = -72;
"@MMK_R_backslash.case" = -152;
"@MMK_R_eight" = -24;
"@MMK_R_emdash" = -64;
"@MMK_R_emdash.case" = -64;
"@MMK_R_f" = -80;
"@MMK_R_five" = -32;
"@MMK_R_four" = -32;
"@MMK_R_g" = -32;
"@MMK_R_hyphen" = -72;
"@MMK_R_hyphen.case" = -72;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -64;
"@MMK_R_nine.cv11" = -80;
"@MMK_R_o" = -48;
"@MMK_R_one" = -64;
"@MMK_R_parenright" = -80;
"@MMK_R_parenright.case" = -80;
"@MMK_R_periodcentered" = -40;
"@MMK_R_question" = -80;
"@MMK_R_quoteleft" = -80;
"@MMK_R_quotesingle" = -80;
"@MMK_R_s" = -32;
"@MMK_R_seven" = -72;
"@MMK_R_six.cv11" = -16;
"@MMK_R_three" = -32;
"@MMK_R_u" = -64;
"@MMK_R_v" = -80;
"@MMK_R_x" = -24;
"@MMK_R_zero.sups" = -96;
};
"@MMK_L_R" = {
"@MMK_R_H" = 56;
"@MMK_R_J" = -16;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -16;
"@MMK_R_S" = -16;
"@MMK_R_T" = -24;
"@MMK_R_V" = -16;
"@MMK_R_Y" = -16;
"@MMK_R_asciicircum" = -48;
"@MMK_R_asterisk" = -48;
"@MMK_R_eight" = -24;
"@MMK_R_emdash" = -64;
"@MMK_R_five" = -16;
"@MMK_R_four" = -24;
"@MMK_R_hyphen" = -56;
"@MMK_R_less" = -32;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -16;
"@MMK_R_seven" = -48;
"@MMK_R_six.cv11" = -24;
"@MMK_R_three" = -40;
};
"@MMK_L_R.tag" = {
"@MMK_R_H.tag" = 29;
"@MMK_R_J.tag" = -8;
"@MMK_R_O.tag" = -8;
"@MMK_R_S.tag" = -8;
"@MMK_R_T.tag" = -13;
"@MMK_R_V.tag" = -8;
"@MMK_R_Y.tag" = -8;
"@MMK_R_eight.tag" = -13;
"@MMK_R_five.tag" = -8;
"@MMK_R_four.tag" = -13;
"@MMK_R_seven.tag" = -25;
"@MMK_R_six.cv11.tag" = -13;
"@MMK_R_three.tag" = -21;
};
"@MMK_L_S" = {
"@MMK_R_T" = -32;
"@MMK_R_V" = -32;
"@MMK_R_Y" = -32;
"@MMK_R_asciicircum" = -32;
"@MMK_R_asterisk" = -32;
"@MMK_R_colon" = -32;
"@MMK_R_emdash" = 24;
"@MMK_R_emdash.case" = 24;
"@MMK_R_f" = -32;
"@MMK_R_questiondown" = -48;
"@MMK_R_seven" = -16;
"@MMK_R_slash" = -80;
};
"@MMK_L_S.tag" = {
"@MMK_R_T.tag" = -17;
"@MMK_R_V.tag" = -17;
"@MMK_R_Y.tag" = -17;
"@MMK_R_seven.tag" = -8;
};
"@MMK_L_T" = {
"@MMK_R_A" = -144;
"@MMK_R_J" = -184;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -80;
"@MMK_R_S" = -32;
"@MMK_R_ampersand" = -64;
"@MMK_R_asciicircum" = -160;
"@MMK_R_colon" = -152;
"@MMK_R_eight" = -64;
"@MMK_R_emdash" = -192;
"@MMK_R_emdash.case" = -112;
"@MMK_R_f" = -120;
"@MMK_R_four" = -96;
"@MMK_R_g" = -200;
"@MMK_R_hyphen" = -192;
"@MMK_R_hyphen.case" = -192;
"@MMK_R_jdotless" = -216;
"@MMK_R_less" = -128;
"@MMK_R_less.case" = -128;
"@MMK_R_lslash" = -32;
"@MMK_R_n" = -200;
"@MMK_R_nine" = -24;
"@MMK_R_nine.cv11" = -24;
"@MMK_R_o" = -200;
"@MMK_R_period" = -208;
"@MMK_R_periodcentered" = -208;
"@MMK_R_questiondown" = -200;
"@MMK_R_s" = -184;
"@MMK_R_six.cv11" = -72;
"@MMK_R_slash" = -232;
"@MMK_R_slash.case" = -176;
"@MMK_R_u" = -184;
"@MMK_R_v" = -144;
"@MMK_R_x" = -144;
"@MMK_R_z" = -144;
"@MMK_R_zero.dnom" = -304;
"@MMK_R_zero.subs" = -304;
};
"@MMK_L_T.tag" = {
"@MMK_R_A.tag" = -76;
"@MMK_R_J.tag" = -97;
"@MMK_R_O.tag" = -42;
"@MMK_R_S.tag" = -17;
"@MMK_R_eight.tag" = -34;
"@MMK_R_four.tag" = -50;
"@MMK_R_nine.cv11.tag" = -13;
"@MMK_R_nine.tag" = -13;
"@MMK_R_six.cv11.tag" = -38;
};
"@MMK_L_U" = {
"@MMK_R_A" = -56;
"@MMK_R_J" = -24;
"@MMK_R_period" = -56;
"@MMK_R_questiondown" = -88;
"@MMK_R_slash" = -96;
"@MMK_R_zero.subs" = -64;
};
"@MMK_L_U.tag" = {
"@MMK_R_A.tag" = -29;
"@MMK_R_J.tag" = -13;
};
"@MMK_L_V" = {
"@MMK_R_A" = -192;
"@MMK_R_J" = -176;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -56;
"@MMK_R_S" = -48;
"@MMK_R_ampersand" = -88;
"@MMK_R_asciicircum" = -120;
"@MMK_R_backslash" = 64;
"@MMK_R_colon" = -72;
"@MMK_R_colon.case" = -24;
"@MMK_R_eight" = -48;
"@MMK_R_emdash" = -64;
"@MMK_R_emdash.case" = -64;
"@MMK_R_f" = -72;
"@MMK_R_five" = -40;
"@MMK_R_four" = -112;
"@MMK_R_g" = -80;
"@MMK_R_hyphen" = -160;
"@MMK_R_hyphen.case" = -104;
"@MMK_R_jdotless" = -116;
"@MMK_R_less" = -88;
"@MMK_R_less.case" = -88;
"@MMK_R_lslash" = -32;
"@MMK_R_n" = -80;
"@MMK_R_nine" = -16;
"@MMK_R_nine.cv11" = -16;
"@MMK_R_numbersign" = -72;
"@MMK_R_o" = -152;
"@MMK_R_p" = -80;
"@MMK_R_period" = -208;
"@MMK_R_periodcentered" = -144;
"@MMK_R_questiondown" = -288;
"@MMK_R_s" = -88;
"@MMK_R_six.cv11" = -104;
"@MMK_R_slash" = -232;
"@MMK_R_slash.case" = -176;
"@MMK_R_u" = -80;
"@MMK_R_v" = -16;
"@MMK_R_x" = -16;
"@MMK_R_z" = -40;
"@MMK_R_zero.dnom" = -192;
"@MMK_R_zero.subs" = -280;
j.cv01 = 0;
};
"@MMK_L_V.tag" = {
"@MMK_R_A.tag" = -113;
"@MMK_R_J.tag" = -109;
"@MMK_R_O.tag" = -55;
"@MMK_R_S.tag" = -38;
"@MMK_R_eight.tag" = -50;
"@MMK_R_five.tag" = -21;
"@MMK_R_four.tag" = -59;
"@MMK_R_nine.cv11.tag" = -38;
"@MMK_R_nine.tag" = -25;
"@MMK_R_one.tag" = -13;
"@MMK_R_six.cv11.tag" = -71;
"@MMK_R_three.tag" = -13;
"@MMK_R_two.tag" = -13;
};
"@MMK_L_X" = {
"@MMK_R_J" = -32;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -56;
"@MMK_R_ampersand" = -24;
"@MMK_R_asciicircum" = -128;
"@MMK_R_asterisk" = -32;
"@MMK_R_backslash" = 48;
"@MMK_R_colon.case" = -24;
"@MMK_R_eight" = -16;
"@MMK_R_emdash" = -48;
"@MMK_R_emdash.case" = -80;
"@MMK_R_f" = -80;
"@MMK_R_five" = -32;
"@MMK_R_four" = -24;
"@MMK_R_hyphen" = -80;
"@MMK_R_hyphen.case" = -128;
"@MMK_R_less" = -96;
"@MMK_R_less.case" = -96;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -24;
"@MMK_R_nine.cv11" = -24;
"@MMK_R_o" = -48;
"@MMK_R_periodcentered" = -96;
"@MMK_R_question" = -32;
"@MMK_R_quoteleft" = -48;
"@MMK_R_s" = -8;
"@MMK_R_six.cv11" = -72;
"@MMK_R_slash" = -24;
"@MMK_R_u" = -32;
"@MMK_R_v" = -48;
"@MMK_R_zero.numr" = -48;
};
"@MMK_L_X.tag" = {
"@MMK_R_J.tag" = -17;
"@MMK_R_O.tag" = -29;
"@MMK_R_eight.tag" = -8;
"@MMK_R_five.tag" = -17;
"@MMK_R_four.tag" = -13;
"@MMK_R_nine.cv11.tag" = -13;
"@MMK_R_nine.tag" = -13;
"@MMK_R_six.cv11.tag" = -38;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -216;
"@MMK_R_J" = -208;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -104;
"@MMK_R_S" = -72;
"@MMK_R_ampersand" = -88;
"@MMK_R_asciicircum" = -120;
"@MMK_R_backslash" = 64;
"@MMK_R_colon" = -104;
"@MMK_R_colon.case" = -24;
"@MMK_R_eight" = -96;
"@MMK_R_emdash" = -64;
"@MMK_R_emdash.case" = -64;
"@MMK_R_f" = -96;
"@MMK_R_five" = -40;
"@MMK_R_four" = -112;
"@MMK_R_g" = -216;
"@MMK_R_hyphen" = -160;
"@MMK_R_hyphen.case" = -104;
"@MMK_R_jdotless" = -176;
"@MMK_R_less" = -88;
"@MMK_R_less.case" = -88;
"@MMK_R_lslash" = -32;
"@MMK_R_n" = -144;
"@MMK_R_nine" = -48;
"@MMK_R_nine.cv11" = -72;
"@MMK_R_numbersign" = -72;
"@MMK_R_o" = -216;
"@MMK_R_one" = -24;
"@MMK_R_p" = -112;
"@MMK_R_period" = -208;
"@MMK_R_periodcentered" = -208;
"@MMK_R_questiondown" = -288;
"@MMK_R_s" = -144;
"@MMK_R_six.cv11" = -136;
"@MMK_R_slash" = -232;
"@MMK_R_slash.case" = -176;
"@MMK_R_three" = -24;
"@MMK_R_two" = -24;
"@MMK_R_u" = -152;
"@MMK_R_v" = -80;
"@MMK_R_x" = -80;
"@MMK_R_z" = -96;
"@MMK_R_zero.dnom" = -192;
"@MMK_R_zero.subs" = -280;
j.cv01 = 0;
};
"@MMK_L_Y.tag" = {
"@MMK_R_J.tag" = -109;
"@MMK_R_O.tag" = -55;
"@MMK_R_S.tag" = -38;
"@MMK_R_eight.tag" = -50;
"@MMK_R_five.tag" = -21;
"@MMK_R_four.tag" = -59;
"@MMK_R_nine.cv11.tag" = -38;
"@MMK_R_nine.tag" = -25;
"@MMK_R_one.tag" = -13;
"@MMK_R_six.cv11.tag" = -71;
"@MMK_R_three.tag" = -13;
"@MMK_R_two.tag" = -13;
};
"@MMK_L_Z" = {
"@MMK_R_J" = -24;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -24;
"@MMK_R_asciicircum" = -112;
"@MMK_R_asterisk" = -112;
"@MMK_R_f" = -32;
"@MMK_R_four" = -64;
"@MMK_R_less" = -32;
"@MMK_R_less.case" = -32;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -40;
"@MMK_R_s" = -24;
"@MMK_R_six.cv11" = -32;
"@MMK_R_slash" = -72;
"@MMK_R_u" = -24;
"@MMK_R_v" = -16;
};
"@MMK_L_Z.tag" = {
"@MMK_R_J.tag" = -13;
"@MMK_R_O.tag" = -13;
"@MMK_R_four.tag" = -34;
"@MMK_R_six.cv11.tag" = -17;
};
"@MMK_L_a" = {
"@MMK_R_T" = -200;
"@MMK_R_V" = -80;
"@MMK_R_Y" = -144;
"@MMK_R_backslash" = -24;
"@MMK_R_backslash.case" = -56;
"@MMK_R_seven" = -80;
"@MMK_R_slash" = -24;
"@MMK_R_slash.case" = 32;
};
"@MMK_L_ampersand" = {
"@MMK_R_J" = -48;
"@MMK_R_O" = -48;
"@MMK_R_S" = -64;
"@MMK_R_T" = -200;
"@MMK_R_U" = -56;
"@MMK_R_V" = -160;
"@MMK_R_Y" = -160;
"@MMK_R_asciicircum" = -40;
"@MMK_R_asterisk" = -120;
"@MMK_R_backslash" = -56;
"@MMK_R_backslash.case" = -104;
"@MMK_R_colon.case" = -32;
"@MMK_R_eight" = -48;
"@MMK_R_f" = -56;
"@MMK_R_five" = -32;
"@MMK_R_four" = -40;
"@MMK_R_g" = -40;
"@MMK_R_nine" = -64;
"@MMK_R_nine.cv11" = -96;
"@MMK_R_o" = -48;
"@MMK_R_one" = -88;
"@MMK_R_parenright" = -64;
"@MMK_R_parenright.case" = -32;
"@MMK_R_periodcentered" = -40;
"@MMK_R_question" = -136;
"@MMK_R_quotesingle" = -64;
"@MMK_R_seven" = -120;
"@MMK_R_six.cv11" = -32;
"@MMK_R_three" = -72;
"@MMK_R_v" = -48;
"@MMK_R_zero.numr" = -64;
};
"@MMK_L_asciicircum" = {
"@MMK_R_A" = -176;
"@MMK_R_J" = -264;
"@MMK_R_O" = -16;
"@MMK_R_S" = -80;
"@MMK_R_T" = -160;
"@MMK_R_V" = -120;
"@MMK_R_X" = -128;
"@MMK_R_Y" = -120;
"@MMK_R_Z" = -112;
"@MMK_R_ampersand" = -88;
"@MMK_R_asterisk" = -112;
"@MMK_R_eight" = -48;
"@MMK_R_four" = -96;
"@MMK_R_one" = -32;
"@MMK_R_period" = -136;
"@MMK_R_seven" = -112;
"@MMK_R_slash" = -144;
"@MMK_R_slash.case" = -80;
"@MMK_R_three" = -136;
"@MMK_R_two" = -80;
"@MMK_R_v" = -32;
"@MMK_R_x" = -80;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -176;
"@MMK_R_J" = -264;
"@MMK_R_O" = -16;
"@MMK_R_S" = -80;
"@MMK_R_X" = -32;
"@MMK_R_Z" = -112;
"@MMK_R_ampersand" = -120;
"@MMK_R_asciicircum" = -112;
"@MMK_R_eight" = -48;
"@MMK_R_four" = -96;
"@MMK_R_one" = -32;
"@MMK_R_period" = -136;
"@MMK_R_slash" = -144;
"@MMK_R_slash.case" = -80;
"@MMK_R_three" = -136;
"@MMK_R_two" = -80;
"@MMK_R_v" = -32;
"@MMK_R_x" = -80;
asterisk = 0;
};
"@MMK_L_backslash" = {
"@MMK_R_H" = -64;
"@MMK_R_J" = -88;
"@MMK_R_Lslash" = -104;
"@MMK_R_O" = -80;
"@MMK_R_T" = -232;
"@MMK_R_U" = -96;
"@MMK_R_V" = -232;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -232;
"@MMK_R_Z" = -72;
"@MMK_R_asciicircum" = -144;
"@MMK_R_asterisk" = -144;
"@MMK_R_eight" = -40;
"@MMK_R_f" = -96;
"@MMK_R_five" = -32;
"@MMK_R_four" = -48;
"@MMK_R_g" = 80;
"@MMK_R_hyphen.case" = -80;
"@MMK_R_j" = 224;
"@MMK_R_jdotless" = 160;
"@MMK_R_lslash" = -96;
"@MMK_R_nine" = -48;
"@MMK_R_nine.cv11" = -96;
"@MMK_R_numbersign" = -104;
"@MMK_R_o" = -32;
"@MMK_R_one" = -112;
"@MMK_R_question" = -136;
"@MMK_R_questiondown" = 80;
"@MMK_R_quoteleft" = -104;
"@MMK_R_quotesingle" = -128;
"@MMK_R_seven" = -128;
"@MMK_R_three" = -48;
"@MMK_R_underscore" = 160;
"@MMK_R_v" = -128;
};
"@MMK_L_backslash.case" = {
"@MMK_R_A" = 48;
"@MMK_R_O" = -48;
"@MMK_R_T" = -176;
"@MMK_R_V" = -176;
"@MMK_R_Y" = -176;
"@MMK_R_asciicircum" = -80;
"@MMK_R_asterisk" = -80;
"@MMK_R_backslash" = 72;
"@MMK_R_colon" = 56;
"@MMK_R_emdash" = 56;
"@MMK_R_hyphen" = 56;
"@MMK_R_j" = 176;
"@MMK_R_jdotless" = 160;
"@MMK_R_l" = 32;
"@MMK_R_n" = 32;
"@MMK_R_nine.cv11" = -80;
"@MMK_R_p" = 56;
"@MMK_R_period" = 56;
"@MMK_R_periodcentered" = 56;
"@MMK_R_question" = -136;
"@MMK_R_questiondown" = 80;
"@MMK_R_quoteleft" = -96;
"@MMK_R_quotesingle" = -128;
"@MMK_R_seven" = -152;
"@MMK_R_underscore" = 160;
"@MMK_R_v" = -64;
};
"@MMK_L_c" = {
"@MMK_R_S" = -24;
"@MMK_R_T" = -152;
"@MMK_R_V" = -112;
"@MMK_R_X" = -8;
"@MMK_R_Y" = -224;
"@MMK_R_emdash" = -32;
"@MMK_R_f" = -24;
"@MMK_R_hyphen" = -40;
"@MMK_R_parenright" = -16;
"@MMK_R_question" = -24;
"@MMK_R_seven" = -48;
"@MMK_R_zero.numr" = -16;
};
"@MMK_L_c.dnom" = {
"@MMK_R_f.dnom" = -15;
"@MMK_R_zero.dnom" = -15;
};
"@MMK_L_colon" = {
"@MMK_R_S" = -32;
"@MMK_R_T" = -152;
"@MMK_R_V" = -72;
"@MMK_R_Y" = -104;
"@MMK_R_backslash.case" = -48;
"@MMK_R_eight" = -16;
"@MMK_R_g" = -16;
"@MMK_R_jdotless" = -24;
"@MMK_R_o" = -16;
"@MMK_R_seven" = -72;
"@MMK_R_slash.case" = 56;
"@MMK_R_three" = -48;
};
"@MMK_L_colon.case" = {
"@MMK_R_V" = -24;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -24;
};
"@MMK_L_eight" = {
"@MMK_R_T" = -64;
"@MMK_R_V" = -48;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -96;
"@MMK_R_asciicircum" = -48;
"@MMK_R_asterisk" = -48;
"@MMK_R_backslash.case" = -48;
"@MMK_R_colon" = -40;
"@MMK_R_f" = -32;
"@MMK_R_parenright" = -32;
"@MMK_R_parenright.case" = -32;
"@MMK_R_period" = -80;
"@MMK_R_questiondown" = -64;
"@MMK_R_quotesingle" = -32;
"@MMK_R_slash" = -40;
};
"@MMK_L_eight.tag" = {
"@MMK_R_T.tag" = -34;
"@MMK_R_V.tag" = -50;
"@MMK_R_X.tag" = -13;
"@MMK_R_Y.tag" = -50;
};
"@MMK_L_emdash" = {
"@MMK_R_A" = -48;
"@MMK_R_Lslash" = 88;
"@MMK_R_O" = 24;
"@MMK_R_S" = -32;
"@MMK_R_T" = -192;
"@MMK_R_V" = -64;
"@MMK_R_X" = -48;
"@MMK_R_Y" = -64;
"@MMK_R_backslash.case" = -48;
"@MMK_R_g" = 24;
"@MMK_R_lslash" = 80;
"@MMK_R_nine" = -80;
"@MMK_R_nine.cv11" = -64;
"@MMK_R_numbersign" = 104;
"@MMK_R_o" = 24;
"@MMK_R_one" = -80;
"@MMK_R_s" = 24;
"@MMK_R_seven" = -80;
"@MMK_R_six.cv11" = 8;
"@MMK_R_slash.case" = 56;
"@MMK_R_three" = -48;
"@MMK_R_two" = -48;
"@MMK_R_v" = -56;
"@MMK_R_x" = -56;
};
"@MMK_L_emdash.case" = {
"@MMK_R_A" = -80;
"@MMK_R_Lslash" = 88;
"@MMK_R_O" = 24;
"@MMK_R_S" = -32;
"@MMK_R_T" = -112;
"@MMK_R_V" = -64;
"@MMK_R_X" = -80;
"@MMK_R_Y" = -64;
"@MMK_R_g" = 24;
"@MMK_R_lslash" = 80;
"@MMK_R_nine.cv11" = -16;
"@MMK_R_o" = 24;
"@MMK_R_quoteleft" = 32;
"@MMK_R_seven" = -80;
"@MMK_R_six.cv11" = 24;
};
"@MMK_L_f" = {
"@MMK_R_A" = -144;
"@MMK_R_J" = -56;
"@MMK_R_ampersand" = -56;
"@MMK_R_backslash" = 80;
"@MMK_R_emdash" = -56;
"@MMK_R_g" = -40;
"@MMK_R_hyphen" = -64;
"@MMK_R_jdotless" = -32;
"@MMK_R_less" = -24;
"@MMK_R_less.case" = -24;
"@MMK_R_o" = -56;
"@MMK_R_period" = -160;
"@MMK_R_periodcentered" = -80;
"@MMK_R_questiondown" = -128;
"@MMK_R_quoteleft" = 16;
"@MMK_R_s" = -32;
"@MMK_R_slash" = -96;
"@MMK_R_slash.case" = -48;
"@MMK_R_underscore" = -160;
"@MMK_R_zero.subs" = -216;
};
"@MMK_L_f.dnom" = {
"@MMK_R_g.dnom" = -24;
"@MMK_R_o.dnom" = -34;
"@MMK_R_s.dnom" = -20;
"@MMK_R_zero.dnom" = -34;
};
"@MMK_L_five" = {
"@MMK_R_A" = -32;
"@MMK_R_V" = -48;
"@MMK_R_X" = -72;
"@MMK_R_Y" = -48;
"@MMK_R_emdash" = 24;
"@MMK_R_f" = -48;
"@MMK_R_parenright" = -16;
"@MMK_R_parenright.case" = -24;
"@MMK_R_period" = -104;
"@MMK_R_questiondown" = -64;
"@MMK_R_quoteleft" = -16;
"@MMK_R_slash" = -32;
"@MMK_R_v" = -24;
"@MMK_R_x" = -24;
"@MMK_R_zero.numr" = -24;
"@MMK_R_zero.sups" = -32;
};
"@MMK_L_five.tag" = {
"@MMK_R_A.tag" = -17;
"@MMK_R_V.tag" = -25;
"@MMK_R_X.tag" = -38;
"@MMK_R_Y.tag" = -25;
};
"@MMK_L_four" = {
"@MMK_R_Lslash" = -40;
"@MMK_R_V" = -112;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -112;
"@MMK_R_asciicircum" = -88;
"@MMK_R_asterisk" = -88;
"@MMK_R_backslash" = -48;
"@MMK_R_backslash.case" = -96;
"@MMK_R_emdash" = 24;
"@MMK_R_f" = -48;
"@MMK_R_lslash" = -32;
"@MMK_R_parenright" = -56;
"@MMK_R_parenright.case" = -40;
"@MMK_R_quoteleft" = -16;
"@MMK_R_quotesingle" = -88;
"@MMK_R_slash" = -48;
"@MMK_R_v" = -48;
"@MMK_R_x" = -24;
"@MMK_R_zero.numr" = -96;
"@MMK_R_zero.sups" = -128;
};
"@MMK_L_four.tag" = {
"@MMK_R_V.tag" = -59;
"@MMK_R_X.tag" = -13;
"@MMK_R_Y.tag" = -59;
};
"@MMK_L_fraction" = {
"@MMK_R_zero.numr" = 424;
"@MMK_R_zero.sups" = 496;
};
"@MMK_L_g" = {
"@MMK_R_T" = -216;
"@MMK_R_V" = -80;
"@MMK_R_Y" = -144;
"@MMK_R_backslash.case" = -56;
"@MMK_R_j" = 40;
"@MMK_R_jdotless" = 40;
"@MMK_R_seven" = -64;
};
"@MMK_L_g.dnom" = {
"@MMK_R_j.dnom" = 24;
};
"@MMK_L_greater" = {
"@MMK_R_A" = -48;
"@MMK_R_T" = -128;
"@MMK_R_V" = -88;
"@MMK_R_X" = -96;
"@MMK_R_Y" = -88;
"@MMK_R_Z" = -32;
"@MMK_R_f" = -24;
"@MMK_R_seven" = -88;
};
"@MMK_L_greater.case" = {
"@MMK_R_A" = -104;
"@MMK_R_T" = -128;
"@MMK_R_V" = -88;
"@MMK_R_X" = -96;
"@MMK_R_Y" = -88;
"@MMK_R_Z" = -32;
"@MMK_R_f" = -24;
"@MMK_R_seven" = -88;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -72;
"@MMK_R_S" = -72;
"@MMK_R_T" = -192;
"@MMK_R_V" = -160;
"@MMK_R_X" = -80;
"@MMK_R_Y" = -160;
"@MMK_R_backslash.case" = -48;
"@MMK_R_f" = -16;
"@MMK_R_one" = -96;
"@MMK_R_parenright" = -80;
"@MMK_R_question" = -144;
"@MMK_R_questiondown" = -80;
"@MMK_R_seven" = -96;
"@MMK_R_slash.case" = 56;
"@MMK_R_two" = 0;
"@MMK_R_u" = -24;
"@MMK_R_v" = -32;
"@MMK_R_x" = -88;
};
"@MMK_L_hyphen.case" = {
"@MMK_R_A" = -104;
"@MMK_R_J" = -80;
"@MMK_R_S" = -24;
"@MMK_R_T" = -192;
"@MMK_R_V" = -104;
"@MMK_R_X" = -128;
"@MMK_R_Y" = -104;
"@MMK_R_one" = -48;
"@MMK_R_parenright" = -64;
"@MMK_R_parenright.case" = -80;
"@MMK_R_question" = -96;
"@MMK_R_questiondown" = -112;
"@MMK_R_seven" = -96;
"@MMK_R_slash" = -80;
"@MMK_R_u" = -24;
"@MMK_R_x" = -48;
};
"@MMK_L_j" = {
"@MMK_R_j" = 40;
"@MMK_R_jdotless" = 40;
"@MMK_R_slash.case" = 32;
};
"@MMK_L_j.dnom" = {
"@MMK_R_j.dnom" = 24;
};
"@MMK_L_l" = {
"@MMK_R_slash" = -56;
"@MMK_R_slash.case" = 16;
periodcentered.loclCAT = -64;
};
"@MMK_L_l.cv16" = {
"@MMK_R_A" = 56;
"@MMK_R_O" = -40;
"@MMK_R_T" = -72;
"@MMK_R_U" = -40;
"@MMK_R_V" = -72;
"@MMK_R_Y" = -72;
"@MMK_R_asciicircum" = -72;
"@MMK_R_asterisk" = -56;
"@MMK_R_f" = -32;
"@MMK_R_four" = -8;
"@MMK_R_g" = -16;
"@MMK_R_o" = -16;
"@MMK_R_question" = -40;
"@MMK_R_questiondown" = 40;
"@MMK_R_seven" = -40;
"@MMK_R_slash.case" = 48;
"@MMK_R_u" = -16;
"@MMK_R_v" = -56;
periodcentered.loclCAT = -64;
};
"@MMK_L_lslash" = {
"@MMK_R_A" = -32;
"@MMK_R_J" = -32;
"@MMK_R_Lslash" = 40;
"@MMK_R_S" = -32;
"@MMK_R_T" = -32;
"@MMK_R_V" = -32;
"@MMK_R_X" = -32;
"@MMK_R_Y" = -32;
"@MMK_R_Z" = -32;
"@MMK_R_emdash.case" = 80;
"@MMK_R_f" = 32;
"@MMK_R_four" = -32;
"@MMK_R_hyphen" = -32;
"@MMK_R_lslash" = 32;
"@MMK_R_one" = -32;
"@MMK_R_parenright" = -32;
"@MMK_R_parenright.case" = -32;
"@MMK_R_period" = -32;
"@MMK_R_periodcentered" = -32;
"@MMK_R_questiondown" = -40;
"@MMK_R_seven" = -32;
"@MMK_R_slash" = -64;
"@MMK_R_three" = -32;
"@MMK_R_two" = -32;
"@MMK_R_underscore" = -32;
"@MMK_R_zero.dnom" = -32;
"@MMK_R_zero.subs" = -32;
};
"@MMK_L_n" = {
"@MMK_R_T" = -200;
"@MMK_R_V" = -112;
"@MMK_R_Y" = -152;
"@MMK_R_asciicircum" = -32;
"@MMK_R_asterisk" = -32;
"@MMK_R_backslash" = -40;
"@MMK_R_backslash.case" = -112;
"@MMK_R_f" = -48;
"@MMK_R_parenright" = -32;
"@MMK_R_parenright.case" = -16;
"@MMK_R_question" = -64;
"@MMK_R_quoteleft" = -32;
"@MMK_R_quotesingle" = -32;
"@MMK_R_s" = -16;
"@MMK_R_seven" = -80;
"@MMK_R_slash" = -24;
"@MMK_R_v" = -40;
"@MMK_R_zero.numr" = -64;
"@MMK_R_zero.sups" = -112;
};
"@MMK_L_n.dnom" = {
"@MMK_R_f.dnom" = -29;
"@MMK_R_s.dnom" = -10;
"@MMK_R_v.dnom" = -24;
"@MMK_R_zero.dnom" = -29;
};
"@MMK_L_nine.cv11" = {
"@MMK_R_A" = -120;
"@MMK_R_J" = -72;
"@MMK_R_T" = -48;
"@MMK_R_V" = -16;
"@MMK_R_X" = -48;
"@MMK_R_Y" = -72;
"@MMK_R_ampersand" = -48;
"@MMK_R_emdash" = 8;
"@MMK_R_emdash.case" = 24;
"@MMK_R_parenright" = -48;
"@MMK_R_parenright.case" = -48;
"@MMK_R_period" = -144;
"@MMK_R_questiondown" = -136;
"@MMK_R_slash" = -144;
"@MMK_R_slash.case" = -80;
};
"@MMK_L_nine.cv11.tag" = {
"@MMK_R_A.tag" = -63;
"@MMK_R_J.tag" = -38;
"@MMK_R_T.tag" = -25;
"@MMK_R_V.tag" = -38;
"@MMK_R_X.tag" = -25;
"@MMK_R_Y.tag" = -38;
};
"@MMK_L_numbersign" = {
"@MMK_R_A" = -128;
"@MMK_R_J" = -72;
"@MMK_R_hyphen" = -96;
"@MMK_R_period" = -128;
"@MMK_R_periodcentered" = -80;
"@MMK_R_questiondown" = -80;
"@MMK_R_quoteleft" = 104;
"@MMK_R_slash" = -104;
"@MMK_R_underscore" = -248;
};
"@MMK_L_o" = {
"@MMK_R_A" = -48;
"@MMK_R_S" = -24;
"@MMK_R_T" = -200;
"@MMK_R_V" = -152;
"@MMK_R_X" = -48;
"@MMK_R_Y" = -216;
"@MMK_R_Z" = -16;
"@MMK_R_backslash" = -32;
"@MMK_R_backslash.case" = -88;
"@MMK_R_colon" = -16;
"@MMK_R_emdash" = 24;
"@MMK_R_emdash.case" = 24;
"@MMK_R_f" = -48;
"@MMK_R_one" = -96;
"@MMK_R_parenright" = -48;
"@MMK_R_parenright.case" = -24;
"@MMK_R_period" = -56;
"@MMK_R_question" = -80;
"@MMK_R_questiondown" = -56;
"@MMK_R_quoteleft" = -32;
"@MMK_R_quotesingle" = -40;
"@MMK_R_s" = -8;
"@MMK_R_seven" = -112;
"@MMK_R_slash" = -32;
"@MMK_R_three" = -24;
"@MMK_R_v" = -40;
"@MMK_R_x" = -48;
"@MMK_R_z" = -16;
"@MMK_R_zero.numr" = -64;
"@MMK_R_zero.sups" = -136;
};
"@MMK_L_o.dnom" = {
"@MMK_R_f.dnom" = -29;
"@MMK_R_s.dnom" = -5;
"@MMK_R_v.dnom" = -24;
"@MMK_R_x.dnom" = -29;
"@MMK_R_z.dnom" = -10;
"@MMK_R_zero.dnom" = -29;
};
"@MMK_L_one" = {
"@MMK_R_slash" = -24;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -64;
"@MMK_R_J" = -72;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -48;
"@MMK_R_S" = -64;
"@MMK_R_ampersand" = -56;
"@MMK_R_eight" = -32;
"@MMK_R_f" = -8;
"@MMK_R_five" = -32;
"@MMK_R_four" = -72;
"@MMK_R_hyphen" = -80;
"@MMK_R_hyphen.case" = -64;
"@MMK_R_j" = 208;
"@MMK_R_jdotless" = 208;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -24;
"@MMK_R_nine.cv11" = -40;
"@MMK_R_o" = -48;
"@MMK_R_s" = -16;
"@MMK_R_six.cv11" = -48;
"@MMK_R_three" = -24;
"@MMK_R_two" = -32;
"@MMK_R_u" = -24;
"@MMK_R_v" = -16;
"@MMK_R_x" = -32;
};
"@MMK_L_parenleft.case" = {
"@MMK_R_J" = -32;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -48;
"@MMK_R_S" = -32;
"@MMK_R_ampersand" = -32;
"@MMK_R_eight" = -32;
"@MMK_R_f" = -24;
"@MMK_R_five" = -48;
"@MMK_R_four" = -56;
"@MMK_R_hyphen.case" = -80;
"@MMK_R_j" = 160;
"@MMK_R_jdotless" = 160;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -40;
"@MMK_R_nine.cv11" = -24;
"@MMK_R_o" = -24;
"@MMK_R_s" = -32;
"@MMK_R_six.cv11" = -48;
"@MMK_R_three" = -32;
"@MMK_R_u" = -24;
"@MMK_R_v" = -32;
};
"@MMK_L_period" = {
"@MMK_R_J" = -16;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -104;
"@MMK_R_T" = -208;
"@MMK_R_U" = -56;
"@MMK_R_V" = -208;
"@MMK_R_Y" = -208;
"@MMK_R_asciicircum" = -136;
"@MMK_R_asterisk" = -136;
"@MMK_R_backslash" = -152;
"@MMK_R_backslash.case" = -216;
"@MMK_R_eight" = -80;
"@MMK_R_f" = -88;
"@MMK_R_five" = -72;
"@MMK_R_four" = -32;
"@MMK_R_j" = -16;
"@MMK_R_jdotless" = -16;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -64;
"@MMK_R_nine.cv11" = -120;
"@MMK_R_o" = -56;
"@MMK_R_one" = -120;
"@MMK_R_question" = -80;
"@MMK_R_quoteleft" = -128;
"@MMK_R_quotesingle" = -128;
"@MMK_R_seven" = -144;
"@MMK_R_six.cv11" = -104;
"@MMK_R_slash.case" = 56;
"@MMK_R_u" = -64;
"@MMK_R_v" = -160;
t = -136;
};
"@MMK_L_periodcentered" = {
"@MMK_R_A" = -64;
"@MMK_R_T" = -208;
"@MMK_R_V" = -144;
"@MMK_R_X" = -96;
"@MMK_R_Y" = -208;
"@MMK_R_backslash.case" = -48;
"@MMK_R_f" = -32;
"@MMK_R_nine" = -40;
"@MMK_R_one" = -96;
"@MMK_R_question" = -80;
"@MMK_R_questiondown" = -40;
"@MMK_R_seven" = -144;
"@MMK_R_slash.case" = 56;
"@MMK_R_three" = -48;
"@MMK_R_v" = -40;
"@MMK_R_x" = -40;
};
"@MMK_L_q" = {
"@MMK_R_V" = -80;
"@MMK_R_Y" = -112;
"@MMK_R_backslash" = -24;
"@MMK_R_backslash.case" = -56;
"@MMK_R_j" = 96;
"@MMK_R_jdotless" = 96;
"@MMK_R_slash.case" = 56;
};
"@MMK_L_q.dnom" = {
"@MMK_R_j.dnom" = 59;
};
"@MMK_L_question" = {
"@MMK_R_A" = -144;
"@MMK_R_J" = -120;
"@MMK_R_ampersand" = -72;
"@MMK_R_backslash" = 48;
"@MMK_R_g" = -48;
"@MMK_R_hyphen" = -80;
"@MMK_R_hyphen.case" = -32;
"@MMK_R_o" = -48;
"@MMK_R_period" = -80;
"@MMK_R_periodcentered" = -32;
"@MMK_R_questiondown" = -120;
"@MMK_R_s" = -24;
"@MMK_R_slash" = -168;
"@MMK_R_slash.case" = -88;
"@MMK_R_underscore" = -80;
};
"@MMK_L_questiondown" = {
"@MMK_R_Islash" = -32;
"@MMK_R_J" = -48;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -144;
"@MMK_R_T" = -200;
"@MMK_R_U" = -88;
"@MMK_R_V" = -288;
"@MMK_R_Y" = -288;
"@MMK_R_ampersand" = -88;
"@MMK_R_backslash" = -168;
"@MMK_R_backslash.case" = -224;
"@MMK_R_eight" = -64;
"@MMK_R_f" = -136;
"@MMK_R_five" = -64;
"@MMK_R_four" = -80;
"@MMK_R_hyphen" = -144;
"@MMK_R_hyphen.case" = -144;
"@MMK_R_j" = 144;
"@MMK_R_jdotless" = 144;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -64;
"@MMK_R_nine.cv11" = -112;
"@MMK_R_numbersign" = -40;
"@MMK_R_o" = -80;
"@MMK_R_one" = -144;
"@MMK_R_periodcentered" = -80;
"@MMK_R_question" = -120;
"@MMK_R_quoteleft" = -80;
"@MMK_R_quotesingle" = -112;
"@MMK_R_seven" = -160;
"@MMK_R_six.cv11" = -64;
"@MMK_R_slash" = 80;
"@MMK_R_slash.case" = 80;
"@MMK_R_three" = -64;
"@MMK_R_u" = -80;
"@MMK_R_v" = -64;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A" = -288;
"@MMK_R_Islash" = -32;
"@MMK_R_J" = -264;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -80;
"@MMK_R_S" = -80;
"@MMK_R_ampersand" = -72;
"@MMK_R_asciicircum" = -96;
"@MMK_R_backslash" = 56;
"@MMK_R_backslash.case" = 80;
"@MMK_R_colon" = -72;
"@MMK_R_colon.case" = -40;
"@MMK_R_eight" = -56;
"@MMK_R_emdash" = -56;
"@MMK_R_emdash.case" = -56;
"@MMK_R_f" = -32;
"@MMK_R_five" = -40;
"@MMK_R_four" = -144;
"@MMK_R_g" = -104;
"@MMK_R_hyphen" = -56;
"@MMK_R_hyphen.case" = -56;
"@MMK_R_j" = -32;
"@MMK_R_jdotless" = -48;
"@MMK_R_lslash" = -32;
"@MMK_R_n" = -48;
"@MMK_R_nine" = -56;
"@MMK_R_nine.cv11" = -40;
"@MMK_R_numbersign" = -48;
"@MMK_R_o" = -128;
"@MMK_R_one" = -24;
"@MMK_R_p" = -48;
"@MMK_R_parenleft" = -88;
"@MMK_R_parenleft.case" = -56;
"@MMK_R_period" = -208;
"@MMK_R_periodcentered" = -72;
"@MMK_R_questiondown" = -200;
"@MMK_R_s" = -104;
"@MMK_R_six.cv11" = -152;
"@MMK_R_slash" = -184;
"@MMK_R_slash.case" = -168;
"@MMK_R_three" = -48;
"@MMK_R_two" = -48;
"@MMK_R_u" = -48;
"@MMK_R_underscore" = -56;
"@MMK_R_v" = -48;
"@MMK_R_x" = -48;
"@MMK_R_z" = -48;
bracketleft = 0;
bracketleft.case = 0;
};
"@MMK_L_quotesingle" = {
"@MMK_R_A" = -144;
"@MMK_R_J" = -120;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -16;
"@MMK_R_backslash.case" = 56;
"@MMK_R_eight" = -32;
"@MMK_R_four" = -48;
"@MMK_R_g" = -40;
"@MMK_R_lslash" = -32;
"@MMK_R_numbersign" = -80;
"@MMK_R_o" = -40;
"@MMK_R_period" = -128;
"@MMK_R_questiondown" = -112;
"@MMK_R_six.cv11" = -32;
"@MMK_R_slash" = -160;
"@MMK_R_slash.case" = -120;
};
"@MMK_L_r" = {
"@MMK_R_A" = -128;
"@MMK_R_J" = -120;
"@MMK_R_T" = -200;
"@MMK_R_V" = -64;
"@MMK_R_X" = -32;
"@MMK_R_Y" = -104;
"@MMK_R_Z" = -16;
"@MMK_R_ampersand" = -72;
"@MMK_R_emdash" = -48;
"@MMK_R_f" = 16;
"@MMK_R_five" = -24;
"@MMK_R_four" = -32;
"@MMK_R_g" = -16;
"@MMK_R_hyphen" = -80;
"@MMK_R_less" = -32;
"@MMK_R_o" = -56;
"@MMK_R_period" = -208;
"@MMK_R_questiondown" = -80;
"@MMK_R_s" = -32;
"@MMK_R_seven" = -64;
"@MMK_R_six.cv11" = -24;
"@MMK_R_slash" = -104;
"@MMK_R_slash.case" = -56;
"@MMK_R_three" = -80;
"@MMK_R_two" = -48;
"@MMK_R_v" = 24;
"@MMK_R_zero.dnom" = -128;
"@MMK_R_zero.subs" = -192;
};
"@MMK_L_r.dnom" = {
"@MMK_R_f.dnom" = 10;
"@MMK_R_g.dnom" = -10;
"@MMK_R_o.dnom" = -34;
"@MMK_R_s.dnom" = -20;
"@MMK_R_v.dnom" = 15;
"@MMK_R_zero.dnom" = -34;
};
"@MMK_L_s" = {
"@MMK_R_S" = -16;
"@MMK_R_T" = -184;
"@MMK_R_V" = -88;
"@MMK_R_X" = -8;
"@MMK_R_Y" = -144;
"@MMK_R_Z" = -8;
"@MMK_R_emdash" = 24;
"@MMK_R_f" = -32;
"@MMK_R_parenright" = -16;
"@MMK_R_question" = -80;
"@MMK_R_seven" = -72;
"@MMK_R_v" = -24;
"@MMK_R_x" = -24;
"@MMK_R_zero.sups" = -88;
};
"@MMK_L_s.dnom" = {
"@MMK_R_f.dnom" = -20;
"@MMK_R_v.dnom" = -15;
"@MMK_R_x.dnom" = -15;
"@MMK_R_zero.dnom" = -20;
};
"@MMK_L_seven" = {
"@MMK_R_A" = -152;
"@MMK_R_J" = -156;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -40;
"@MMK_R_ampersand" = -48;
"@MMK_R_asciicircum" = -112;
"@MMK_R_backslash" = 32;
"@MMK_R_backslash.case" = 32;
"@MMK_R_colon" = -48;
"@MMK_R_emdash" = -80;
"@MMK_R_emdash.case" = -80;
"@MMK_R_f" = -32;
"@MMK_R_g" = -48;
"@MMK_R_hyphen" = -48;
"@MMK_R_hyphen.case" = -48;
"@MMK_R_less" = -88;
"@MMK_R_less.case" = -88;
"@MMK_R_lslash" = -32;
"@MMK_R_n" = -16;
"@MMK_R_o" = -80;
"@MMK_R_period" = -192;
"@MMK_R_periodcentered" = -88;
"@MMK_R_questiondown" = -160;
"@MMK_R_s" = -48;
"@MMK_R_slash" = -168;
"@MMK_R_slash.case" = -120;
"@MMK_R_z" = -32;
"@MMK_R_zero.dnom" = -256;
"@MMK_R_zero.subs" = -288;
six = 0;
zero = 0;
};
"@MMK_L_seven.dnom" = {
"@MMK_R_O.dnom" = -20;
"@MMK_R_zero.dnom" = -20;
six.dnom = 0;
zero.dnom = 0;
};
"@MMK_L_seven.tag" = {
"@MMK_R_A.tag" = -80;
"@MMK_R_J.tag" = -82;
"@MMK_R_O.tag" = -21;
six.tag = 0;
six.tag.black = 0;
zero.tag = 0;
zero.tag.black = 0;
};
"@MMK_L_six" = {
"@MMK_R_A" = -48;
"@MMK_R_T" = -32;
"@MMK_R_V" = -24;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -24;
"@MMK_R_asciicircum" = -72;
"@MMK_R_asterisk" = -72;
"@MMK_R_f" = -32;
"@MMK_R_parenright" = -24;
"@MMK_R_period" = -56;
"@MMK_R_questiondown" = -64;
"@MMK_R_quoteleft" = -16;
"@MMK_R_slash" = -80;
"@MMK_R_v" = -16;
"@MMK_R_x" = -24;
};
"@MMK_L_six.cv11" = {
"@MMK_R_A" = -40;
"@MMK_R_T" = -96;
"@MMK_R_V" = -160;
"@MMK_R_X" = -72;
"@MMK_R_Y" = -144;
"@MMK_R_Z" = -24;
"@MMK_R_backslash.case" = -80;
"@MMK_R_emdash" = 8;
"@MMK_R_emdash.case" = -16;
"@MMK_R_f" = -48;
"@MMK_R_parenright" = -40;
"@MMK_R_parenright.case" = -24;
"@MMK_R_period" = -104;
"@MMK_R_questiondown" = -64;
"@MMK_R_quoteleft" = -80;
"@MMK_R_quotesingle" = -48;
"@MMK_R_slash" = -64;
"@MMK_R_v" = -48;
"@MMK_R_x" = -24;
};
"@MMK_L_six.cv11.tag" = {
"@MMK_R_A.tag" = -21;
"@MMK_R_T.tag" = -50;
"@MMK_R_V.tag" = -76;
"@MMK_R_X.tag" = -38;
"@MMK_R_Y.tag" = -76;
"@MMK_R_Z.tag" = -13;
};
"@MMK_L_six.tag" = {
"@MMK_R_A.tag" = -25;
"@MMK_R_T.tag" = -17;
"@MMK_R_V.tag" = -13;
"@MMK_R_X.tag" = -13;
"@MMK_R_Y.tag" = -13;
};
"@MMK_L_slash" = {
"@MMK_R_A" = -128;
"@MMK_R_J" = -48;
"@MMK_R_V" = 64;
"@MMK_R_X" = 48;
"@MMK_R_Y" = 64;
"@MMK_R_eight" = -16;
"@MMK_R_four" = -48;
"@MMK_R_g" = -32;
"@MMK_R_nine.cv11" = 24;
"@MMK_R_o" = -32;
"@MMK_R_period" = -152;
"@MMK_R_questiondown" = -168;
"@MMK_R_quoteleft" = 80;
"@MMK_R_quotesingle" = 120;
"@MMK_R_six.cv11" = -64;
"@MMK_R_slash.case" = 72;
"@MMK_R_underscore" = -160;
};
"@MMK_L_slash.case" = {
"@MMK_R_A" = -176;
"@MMK_R_J" = -80;
"@MMK_R_O" = -48;
"@MMK_R_S" = -40;
"@MMK_R_colon" = -48;
"@MMK_R_eight" = -64;
"@MMK_R_emdash" = -48;
"@MMK_R_five" = -40;
"@MMK_R_four" = -80;
"@MMK_R_g" = -96;
"@MMK_R_hyphen" = -48;
"@MMK_R_j" = -32;
"@MMK_R_jdotless" = -48;
"@MMK_R_n" = -56;
"@MMK_R_o" = -88;
"@MMK_R_p" = -56;
"@MMK_R_parenleft" = -40;
"@MMK_R_period" = -216;
"@MMK_R_periodcentered" = -48;
"@MMK_R_questiondown" = -232;
"@MMK_R_quoteleft" = 56;
"@MMK_R_quotesingle" = 72;
"@MMK_R_s" = -40;
"@MMK_R_six.cv11" = -112;
"@MMK_R_three" = -40;
"@MMK_R_two" = -48;
"@MMK_R_u" = -48;
"@MMK_R_underscore" = -240;
"@MMK_R_v" = -40;
"@MMK_R_x" = -40;
"@MMK_R_z" = -56;
};
"@MMK_L_t" = {
"@MMK_R_O" = 0;
"@MMK_R_T" = -120;
"@MMK_R_V" = -88;
"@MMK_R_Y" = -96;
"@MMK_R_ampersand" = -16;
"@MMK_R_o" = -16;
"@MMK_R_seven" = -24;
};
"@MMK_L_t.cv02" = {
"@MMK_R_A" = -112;
"@MMK_R_J" = -80;
"@MMK_R_O" = -24;
"@MMK_R_S" = -32;
"@MMK_R_T" = -144;
"@MMK_R_U" = -24;
"@MMK_R_V" = -72;
"@MMK_R_X" = -88;
"@MMK_R_Y" = -96;
"@MMK_R_Z" = -32;
"@MMK_R_eight" = -24;
"@MMK_R_emdash" = -64;
"@MMK_R_five" = -32;
"@MMK_R_four" = -48;
"@MMK_R_g" = -48;
"@MMK_R_hyphen" = -80;
"@MMK_R_o" = -48;
"@MMK_R_parenright" = -40;
"@MMK_R_period" = -136;
"@MMK_R_periodcentered" = -32;
"@MMK_R_questiondown" = -72;
"@MMK_R_s" = -40;
"@MMK_R_seven" = -80;
"@MMK_R_slash" = -136;
"@MMK_R_slash.case" = -72;
"@MMK_R_three" = -96;
"@MMK_R_two" = -32;
"@MMK_R_underscore" = -160;
"@MMK_R_zero.dnom" = -136;
"@MMK_R_zero.subs" = -144;
};
"@MMK_L_t.cv02.dnom" = {
"@MMK_R_g.dnom" = -29;
"@MMK_R_o.dnom" = -34;
"@MMK_R_s.dnom" = -24;
};
"@MMK_L_t.dnom" = {
"@MMK_R_o.dnom" = -10;
"@MMK_R_zero.dnom" = -10;
};
"@MMK_L_three" = {
"@MMK_R_X" = -16;
"@MMK_R_Y" = -24;
"@MMK_R_asciicircum" = -72;
"@MMK_R_asterisk" = -72;
"@MMK_R_colon" = -40;
"@MMK_R_f" = -24;
"@MMK_R_parenright" = -24;
"@MMK_R_period" = -80;
"@MMK_R_questiondown" = -64;
"@MMK_R_slash" = -64;
"@MMK_R_slash.case" = -32;
};
"@MMK_L_three.tag" = {
"@MMK_R_V.tag" = -13;
"@MMK_R_X.tag" = -8;
"@MMK_R_Y.tag" = -13;
};
"@MMK_L_two" = {
"@MMK_R_J" = -32;
"@MMK_R_Lslash" = -40;
"@MMK_R_V" = -32;
"@MMK_R_Y" = -32;
"@MMK_R_asciicircum" = -80;
"@MMK_R_asterisk" = -80;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -24;
"@MMK_R_parenright" = -32;
};
"@MMK_L_two.tag" = {
"@MMK_R_J.tag" = -17;
"@MMK_R_V.tag" = -17;
"@MMK_R_Y.tag" = -17;
};
"@MMK_L_u.cv04" = {
"@MMK_R_A" = -32;
"@MMK_R_S" = -16;
"@MMK_R_T" = -184;
"@MMK_R_V" = -80;
"@MMK_R_X" = -32;
"@MMK_R_Y" = -152;
"@MMK_R_Z" = -24;
"@MMK_R_backslash.case" = -48;
"@MMK_R_hyphen" = -24;
"@MMK_R_hyphen.case" = -24;
"@MMK_R_period" = -64;
"@MMK_R_questiondown" = -80;
"@MMK_R_seven" = -32;
"@MMK_R_slash" = -32;
"@MMK_R_zero.subs" = -16;
};
"@MMK_L_underscore" = {
"@MMK_R_Lslash" = -40;
"@MMK_R_ampersand" = -48;
"@MMK_R_backslash" = -160;
"@MMK_R_backslash.case" = -240;
"@MMK_R_f" = -104;
"@MMK_R_j" = 232;
"@MMK_R_jdotless" = 224;
"@MMK_R_lslash" = -32;
"@MMK_R_question" = -80;
"@MMK_R_slash" = 160;
"@MMK_R_slash.case" = 160;
};
"@MMK_L_v" = {
"@MMK_R_A" = -112;
"@MMK_R_J" = -72;
"@MMK_R_T" = -144;
"@MMK_R_V" = -16;
"@MMK_R_X" = -48;
"@MMK_R_Y" = -80;
"@MMK_R_Z" = -16;
"@MMK_R_ampersand" = -48;
"@MMK_R_asciicircum" = -32;
"@MMK_R_asterisk" = -32;
"@MMK_R_emdash" = -56;
"@MMK_R_four" = -48;
"@MMK_R_g" = -24;
"@MMK_R_hyphen" = -32;
"@MMK_R_o" = -40;
"@MMK_R_parenright" = -16;
"@MMK_R_parenright.case" = -32;
"@MMK_R_period" = -160;
"@MMK_R_periodcentered" = -40;
"@MMK_R_questiondown" = -64;
"@MMK_R_s" = -8;
"@MMK_R_seven" = -64;
"@MMK_R_six.cv11" = -24;
"@MMK_R_slash" = -128;
"@MMK_R_slash.case" = -64;
"@MMK_R_three" = -32;
"@MMK_R_zero.dnom" = -128;
"@MMK_R_zero.subs" = -128;
};
"@MMK_L_v.dnom" = {
"@MMK_R_g.dnom" = -15;
"@MMK_R_o.dnom" = -24;
"@MMK_R_s.dnom" = -5;
"@MMK_R_zero.dnom" = -24;
};
"@MMK_L_x" = {
"@MMK_R_J" = -40;
"@MMK_R_Lslash" = -40;
"@MMK_R_T" = -144;
"@MMK_R_V" = -16;
"@MMK_R_Y" = -80;
"@MMK_R_ampersand" = -32;
"@MMK_R_asciicircum" = -80;
"@MMK_R_asterisk" = -80;
"@MMK_R_backslash.case" = -40;
"@MMK_R_emdash" = -56;
"@MMK_R_four" = -24;
"@MMK_R_g" = -24;
"@MMK_R_hyphen" = -88;
"@MMK_R_hyphen.case" = -48;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -48;
"@MMK_R_parenright" = -32;
"@MMK_R_periodcentered" = -40;
"@MMK_R_s" = -24;
"@MMK_R_seven" = -16;
"@MMK_R_six.cv11" = -24;
"@MMK_R_slash" = -40;
"@MMK_R_zero.dnom" = -24;
};
"@MMK_L_x.dnom" = {
"@MMK_R_f.dnom" = 0;
"@MMK_R_g.dnom" = -15;
"@MMK_R_o.dnom" = -29;
"@MMK_R_s.dnom" = -15;
"@MMK_R_zero.dnom" = -29;
};
"@MMK_L_z" = {
"@MMK_R_J" = -24;
"@MMK_R_T" = -144;
"@MMK_R_V" = -40;
"@MMK_R_Y" = -96;
"@MMK_R_backslash.case" = -56;
"@MMK_R_o" = -24;
"@MMK_R_seven" = -64;
};
"@MMK_L_z.dnom" = {
"@MMK_R_o.dnom" = -15;
"@MMK_R_zero.dnom" = -15;
};
"@MMK_L_zero.dnom" = {
"@MMK_R_O.dnom" = -20;
"@MMK_R_T" = -304;
"@MMK_R_V" = -192;
"@MMK_R_Y" = -192;
"@MMK_R_f" = -72;
"@MMK_R_f.dnom" = 10;
"@MMK_R_fraction" = 408;
"@MMK_R_g.dnom" = -29;
"@MMK_R_j.dnom" = 59;
"@MMK_R_o.dnom" = -29;
"@MMK_R_one" = -192;
"@MMK_R_s.dnom" = -24;
"@MMK_R_seven" = -208;
"@MMK_R_seven.dnom" = -36;
"@MMK_R_u.dnom" = -10;
"@MMK_R_v" = -128;
"@MMK_R_v.dnom" = 15;
"@MMK_R_x" = -24;
"@MMK_R_x.dnom" = -29;
"@MMK_R_z.dnom" = -10;
"@MMK_R_zero.dnom" = -20;
_part.percentzero = -80;
six.dnom = 0;
zero.dnom = 0;
};
"@MMK_L_zero.numr" = {
"@MMK_R_A" = -256;
"@MMK_R_J" = -312;
"@MMK_R_X" = -48;
"@MMK_R_five" = -24;
"@MMK_R_four" = -96;
"@MMK_R_g" = -64;
"@MMK_R_j" = -32;
"@MMK_R_jdotless" = -32;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -64;
};
"@MMK_L_zero.subs" = {
"@MMK_R_O" = -64;
"@MMK_R_T" = -304;
"@MMK_R_U" = -64;
"@MMK_R_V" = -280;
"@MMK_R_Y" = -280;
"@MMK_R_f" = -96;
"@MMK_R_fraction" = 488;
"@MMK_R_lslash" = -32;
"@MMK_R_one" = -192;
"@MMK_R_seven" = -160;
"@MMK_R_u" = -16;
"@MMK_R_v" = -128;
};
"@MMK_L_zero.sups" = {
"@MMK_R_A" = -224;
"@MMK_R_J" = -312;
"@MMK_R_O" = -24;
"@MMK_R_five" = -32;
"@MMK_R_four" = -152;
"@MMK_R_g" = -128;
"@MMK_R_j" = -32;
"@MMK_R_jdotless" = -32;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -136;
"@MMK_R_s" = -88;
};
asterisk = {
"@MMK_R_asterisk" = 0;
};
braceright = {
"@MMK_R_lslash" = 32;
Lslash = 40;
};
bracketright = {
"@MMK_R_j" = 96;
"@MMK_R_jdotless" = 88;
};
bracketright.case = {
"@MMK_R_j" = 96;
"@MMK_R_jdotless" = 96;
};
j.cv01 = {
"@MMK_R_Y" = 0;
};
nine = {
"@MMK_R_seven" = 0;
};
nine.dnom = {
"@MMK_R_seven.dnom" = 0;
"@MMK_R_zero.dnom" = 0;
};
nine.tag = {
"@MMK_R_seven.tag" = 0;
};
nine.tag.black = {
"@MMK_R_seven.tag" = 0;
};
periodcentered.loclCAT = {
"@MMK_R_l" = -64;
};
zero = {
"@MMK_R_seven" = 0;
};
zero.dnom = {
"@MMK_R_seven.dnom" = 0;
"@MMK_R_zero.dnom" = 0;
};
zero.tag = {
"@MMK_R_seven.tag" = 0;
};
zero.tag.black = {
"@MMK_R_seven.tag" = 0;
};
};
"94F54C43-8AEE-4ED6-B3C2-2A9D33534E61" = {
"@MMK_L_A" = {
"@MMK_R_J" = -24;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -88;
"@MMK_R_T" = -176;
"@MMK_R_U" = -88;
"@MMK_R_V" = -232;
"@MMK_R_Y" = -256;
"@MMK_R_ampersand" = -32;
"@MMK_R_asciicircum" = -200;
"@MMK_R_asterisk" = -200;
"@MMK_R_backslash" = -104;
"@MMK_R_backslash.case" = -144;
"@MMK_R_eight" = -24;
"@MMK_R_emdash" = -48;
"@MMK_R_emdash.case" = -80;
"@MMK_R_f" = -144;
"@MMK_R_five" = -32;
"@MMK_R_hyphen" = -80;
"@MMK_R_hyphen.case" = -128;
"@MMK_R_less" = -112;
"@MMK_R_less.case" = -120;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -32;
"@MMK_R_nine.cv11" = -128;
"@MMK_R_o" = -40;
"@MMK_R_one" = -112;
"@MMK_R_parenright" = -48;
"@MMK_R_periodcentered" = -80;
"@MMK_R_question" = -160;
"@MMK_R_quoteleft" = -200;
"@MMK_R_quotesingle" = -192;
"@MMK_R_seven" = -88;
"@MMK_R_six.cv11" = -72;
"@MMK_R_slash.case" = 16;
"@MMK_R_u" = -32;
"@MMK_R_v" = -152;
"@MMK_R_z" = -8;
"@MMK_R_zero.numr" = -280;
"@MMK_R_zero.sups" = -264;
braceright = 0;
bracketright = 0;
};
"@MMK_L_A.tag" = {
"@MMK_R_J.tag" = -13;
"@MMK_R_O.tag" = -48;
"@MMK_R_T.tag" = -97;
"@MMK_R_U.tag" = -48;
"@MMK_R_V.tag" = -141;
"@MMK_R_Y.tag" = -116;
"@MMK_R_eight.tag" = -13;
"@MMK_R_five.tag" = -18;
"@MMK_R_nine.cv11.tag" = -70;
"@MMK_R_nine.tag" = -18;
"@MMK_R_one.tag" = -62;
"@MMK_R_seven.tag" = -48;
"@MMK_R_six.cv11.tag" = -40;
};
"@MMK_L_B" = {
"@MMK_R_A" = -40;
"@MMK_R_S" = -16;
"@MMK_R_V" = -64;
"@MMK_R_X" = -56;
"@MMK_R_Y" = -64;
"@MMK_R_emdash" = 24;
"@MMK_R_f" = -32;
"@MMK_R_parenright" = -56;
"@MMK_R_parenright.case" = -56;
"@MMK_R_questiondown" = -64;
"@MMK_R_quoteleft" = -16;
"@MMK_R_slash" = -64;
"@MMK_R_v" = -16;
"@MMK_R_x" = -16;
"@MMK_R_zero.sups" = -16;
};
"@MMK_L_B.tag" = {
"@MMK_R_A.tag" = -22;
"@MMK_R_S.tag" = -9;
"@MMK_R_V.tag" = -35;
"@MMK_R_X.tag" = -31;
"@MMK_R_Y.tag" = -32;
};
"@MMK_L_C" = {
"@MMK_R_A" = -40;
"@MMK_R_Lslash" = -40;
"@MMK_R_V" = -32;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -32;
"@MMK_R_asciicircum" = -48;
"@MMK_R_asterisk" = -48;
"@MMK_R_emdash.case" = -32;
"@MMK_R_f" = -24;
"@MMK_R_lslash" = -32;
"@MMK_R_questiondown" = -64;
"@MMK_R_slash" = -32;
};
"@MMK_L_C.tag" = {
"@MMK_R_A.tag" = -22;
"@MMK_R_V.tag" = -18;
"@MMK_R_X.tag" = -13;
"@MMK_R_Y.tag" = -16;
};
"@MMK_L_E" = {
"@MMK_R_J" = -8;
"@MMK_R_O" = -24;
"@MMK_R_S" = -32;
"@MMK_R_o" = -8;
"@MMK_R_v" = -16;
};
"@MMK_L_E.tag" = {
"@MMK_R_J.tag" = -4;
"@MMK_R_O.tag" = -13;
"@MMK_R_S.tag" = -18;
};
"@MMK_L_F" = {
"@MMK_R_A" = -128;
"@MMK_R_J" = -104;
"@MMK_R_O" = -32;
"@MMK_R_S" = -24;
"@MMK_R_ampersand" = -32;
"@MMK_R_backslash" = 24;
"@MMK_R_g" = -16;
"@MMK_R_hyphen" = -16;
"@MMK_R_hyphen.case" = -16;
"@MMK_R_n" = -16;
"@MMK_R_o" = -48;
"@MMK_R_period" = -112;
"@MMK_R_questiondown" = -160;
"@MMK_R_s" = -48;
"@MMK_R_slash" = -152;
"@MMK_R_slash.case" = -104;
"@MMK_R_u" = -40;
"@MMK_R_v" = -48;
"@MMK_R_x" = -48;
"@MMK_R_z" = -24;
"@MMK_R_zero.subs" = -128;
};
"@MMK_L_F.tag" = {
"@MMK_R_A.tag" = -70;
"@MMK_R_J.tag" = -57;
"@MMK_R_O.tag" = -18;
"@MMK_R_S.tag" = -13;
};
"@MMK_L_H" = {
"@MMK_R_jdotless" = 48;
"@MMK_R_slash" = -40;
};
"@MMK_L_I" = {
"@MMK_R_slash" = -80;
};
"@MMK_L_J" = {
"@MMK_R_A" = -56;
"@MMK_R_questiondown" = -96;
};
"@MMK_L_J.tag" = {
"@MMK_R_A.tag" = -31;
};
"@MMK_L_L" = {
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -16;
"@MMK_R_S" = -16;
"@MMK_R_T" = -232;
"@MMK_R_U" = -40;
"@MMK_R_V" = -188;
"@MMK_R_Y" = -220;
"@MMK_R_asciicircum" = -256;
"@MMK_R_asterisk" = -256;
"@MMK_R_backslash" = -144;
"@MMK_R_backslash.case" = -152;
"@MMK_R_f" = -136;
"@MMK_R_hyphen.case" = -56;
"@MMK_R_less.case" = -80;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -80;
"@MMK_R_nine.cv11" = -136;
"@MMK_R_one" = -144;
"@MMK_R_parenright" = -64;
"@MMK_R_question" = -144;
"@MMK_R_quoteleft" = -384;
"@MMK_R_quotesingle" = -160;
"@MMK_R_seven" = -136;
"@MMK_R_u" = -32;
"@MMK_R_v" = -176;
"@MMK_R_zero.numr" = -320;
"@MMK_R_zero.sups" = -320;
periodcentered.loclCAT.case = -536;
t.cv02 = -80;
};
"@MMK_L_L.tag" = {
"@MMK_R_O.tag" = -9;
"@MMK_R_S.tag" = -9;
"@MMK_R_T.tag" = -128;
"@MMK_R_U.tag" = -22;
"@MMK_R_V.tag" = -121;
"@MMK_R_Y.tag" = -110;
"@MMK_R_nine.cv11.tag" = -75;
"@MMK_R_nine.tag" = -44;
"@MMK_R_one.tag" = -79;
"@MMK_R_seven.tag" = -75;
};
"@MMK_L_O" = {
"@MMK_R_A" = -88;
"@MMK_R_S" = -8;
"@MMK_R_T" = -16;
"@MMK_R_V" = -80;
"@MMK_R_X" = -80;
"@MMK_R_Y" = -120;
"@MMK_R_Z" = -8;
"@MMK_R_backslash.case" = -32;
"@MMK_R_emdash" = 24;
"@MMK_R_emdash.case" = 24;
"@MMK_R_parenright" = -48;
"@MMK_R_parenright.case" = -48;
"@MMK_R_period" = -72;
"@MMK_R_questiondown" = -152;
"@MMK_R_quotesingle" = -24;
"@MMK_R_seven" = -40;
"@MMK_R_slash" = -88;
"@MMK_R_slash.case" = -48;
"@MMK_R_zero.subs" = -40;
"@MMK_R_zero.sups" = -24;
};
"@MMK_L_O.dnom" = {
"@MMK_R_seven.dnom" = -22;
"@MMK_R_zero.dnom" = -22;
};
"@MMK_L_O.tag" = {
"@MMK_R_A.tag" = -48;
"@MMK_R_S.tag" = -4;
"@MMK_R_T.tag" = -9;
"@MMK_R_V.tag" = -66;
"@MMK_R_X.tag" = -44;
"@MMK_R_Y.tag" = -60;
"@MMK_R_Z.tag" = -4;
"@MMK_R_seven.tag" = -22;
};
"@MMK_L_P" = {
"@MMK_R_A" = -160;
"@MMK_R_J" = -128;
"@MMK_R_T" = -16;
"@MMK_R_V" = -24;
"@MMK_R_X" = -72;
"@MMK_R_Y" = -24;
"@MMK_R_ampersand" = -16;
"@MMK_R_asciicircum" = -32;
"@MMK_R_asterisk" = -32;
"@MMK_R_f" = 0;
"@MMK_R_four" = -32;
"@MMK_R_hyphen" = -32;
"@MMK_R_o" = -40;
"@MMK_R_parenright" = -40;
"@MMK_R_parenright.case" = -48;
"@MMK_R_period" = -160;
"@MMK_R_questiondown" = -192;
"@MMK_R_slash" = -144;
"@MMK_R_slash.case" = -104;
"@MMK_R_three" = -80;
"@MMK_R_zero.subs" = -192;
};
"@MMK_L_P.tag" = {
"@MMK_R_A.tag" = -88;
"@MMK_R_J.tag" = -70;
"@MMK_R_T.tag" = -9;
"@MMK_R_V.tag" = -13;
"@MMK_R_X.tag" = -40;
"@MMK_R_Y.tag" = -12;
"@MMK_R_four.tag" = -18;
"@MMK_R_three.tag" = -44;
};
"@MMK_L_Q" = {
"@MMK_R_O" = -32;
"@MMK_R_S" = -32;
"@MMK_R_T" = -96;
"@MMK_R_U" = -40;
"@MMK_R_V" = -144;
"@MMK_R_Y" = -144;
"@MMK_R_asciicircum" = -56;
"@MMK_R_asterisk" = -56;
"@MMK_R_backslash.case" = -136;
"@MMK_R_emdash" = -24;
"@MMK_R_emdash.case" = -24;
"@MMK_R_f" = -56;
"@MMK_R_five" = -8;
"@MMK_R_g" = -16;
"@MMK_R_hyphen" = -48;
"@MMK_R_hyphen.case" = -48;
"@MMK_R_nine" = -48;
"@MMK_R_nine.cv11" = -48;
"@MMK_R_one" = -32;
"@MMK_R_parenright" = -56;
"@MMK_R_parenright.case" = -56;
"@MMK_R_periodcentered" = -24;
"@MMK_R_question" = -56;
"@MMK_R_quoteleft" = -56;
"@MMK_R_quotesingle" = -56;
"@MMK_R_seven" = -56;
"@MMK_R_six.cv11" = -32;
"@MMK_R_three" = -16;
"@MMK_R_u" = -48;
"@MMK_R_v" = -72;
"@MMK_R_x" = -16;
"@MMK_R_zero.sups" = -80;
};
"@MMK_L_R" = {
"@MMK_R_H" = 16;
"@MMK_R_J" = -32;
"@MMK_R_S" = -16;
"@MMK_R_T" = -16;
"@MMK_R_V" = -48;
"@MMK_R_Y" = -48;
"@MMK_R_asciicircum" = -32;
"@MMK_R_asterisk" = -32;
"@MMK_R_eight" = -16;
"@MMK_R_emdash" = -40;
"@MMK_R_five" = -24;
"@MMK_R_four" = -48;
"@MMK_R_hyphen" = -48;
"@MMK_R_less.case" = -32;
"@MMK_R_o" = -24;
"@MMK_R_seven" = -64;
"@MMK_R_six.cv11" = -24;
"@MMK_R_three" = -64;
"@MMK_R_u" = -8;
};
"@MMK_L_R.tag" = {
"@MMK_R_H.tag" = 9;
"@MMK_R_J.tag" = -18;
"@MMK_R_S.tag" = -9;
"@MMK_R_T.tag" = -9;
"@MMK_R_V.tag" = -26;
"@MMK_R_Y.tag" = -24;
"@MMK_R_eight.tag" = -9;
"@MMK_R_five.tag" = -13;
"@MMK_R_four.tag" = -26;
"@MMK_R_seven.tag" = -35;
"@MMK_R_six.cv11.tag" = -13;
"@MMK_R_three.tag" = -35;
};
"@MMK_L_S" = {
"@MMK_R_A" = -24;
"@MMK_R_colon" = -24;
"@MMK_R_emdash" = 24;
"@MMK_R_emdash.case" = 24;
"@MMK_R_f" = -32;
"@MMK_R_questiondown" = -64;
"@MMK_R_slash" = -24;
"@MMK_R_v" = -24;
"@MMK_R_x" = -16;
};
"@MMK_L_S.tag" = {
"@MMK_R_A.tag" = -13;
};
"@MMK_L_T" = {
"@MMK_R_A" = -176;
"@MMK_R_J" = -192;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -16;
"@MMK_R_S" = -16;
"@MMK_R_ampersand" = -40;
"@MMK_R_asciicircum" = -96;
"@MMK_R_asterisk" = 0;
"@MMK_R_colon" = -64;
"@MMK_R_eight" = -16;
"@MMK_R_f" = -48;
"@MMK_R_four" = -64;
"@MMK_R_g" = -192;
"@MMK_R_hyphen" = -224;
"@MMK_R_hyphen.case" = -120;
"@MMK_R_jdotless" = -96;
"@MMK_R_less" = -104;
"@MMK_R_less.case" = -104;
"@MMK_R_lslash" = -32;
"@MMK_R_n" = -40;
"@MMK_R_nine" = -16;
"@MMK_R_nine.cv11" = -16;
"@MMK_R_o" = -168;
"@MMK_R_period" = -240;
"@MMK_R_periodcentered" = -240;
"@MMK_R_questiondown" = -168;
"@MMK_R_s" = -112;
"@MMK_R_six.cv11" = -64;
"@MMK_R_slash" = -168;
"@MMK_R_slash.case" = -120;
"@MMK_R_u" = -104;
"@MMK_R_v" = -72;
"@MMK_R_x" = -72;
"@MMK_R_z" = -72;
"@MMK_R_zero.dnom" = -240;
"@MMK_R_zero.subs" = -240;
};
"@MMK_L_T.tag" = {
"@MMK_R_A.tag" = -97;
"@MMK_R_J.tag" = -106;
"@MMK_R_O.tag" = -9;
"@MMK_R_S.tag" = -9;
"@MMK_R_eight.tag" = -9;
"@MMK_R_four.tag" = -35;
"@MMK_R_nine.cv11.tag" = -9;
"@MMK_R_nine.tag" = -9;
"@MMK_R_six.cv11.tag" = -35;
};
"@MMK_L_U" = {
"@MMK_R_A" = -88;
"@MMK_R_J" = -24;
"@MMK_R_period" = -88;
"@MMK_R_questiondown" = -128;
"@MMK_R_slash" = -96;
"@MMK_R_zero.subs" = -40;
};
"@MMK_L_U.tag" = {
"@MMK_R_A.tag" = -48;
"@MMK_R_J.tag" = -13;
};
"@MMK_L_V" = {
"@MMK_R_A" = -232;
"@MMK_R_J" = -200;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -80;
"@MMK_R_S" = -32;
"@MMK_R_ampersand" = -80;
"@MMK_R_asciicircum" = -144;
"@MMK_R_backslash" = 72;
"@MMK_R_colon" = -80;
"@MMK_R_colon.case" = -48;
"@MMK_R_eight" = -32;
"@MMK_R_emdash" = -80;
"@MMK_R_emdash.case" = -80;
"@MMK_R_f" = -72;
"@MMK_R_five" = -48;
"@MMK_R_four" = -128;
"@MMK_R_g" = -96;
"@MMK_R_hyphen" = -144;
"@MMK_R_hyphen.case" = -96;
"@MMK_R_jdotless" = -124;
"@MMK_R_less" = -80;
"@MMK_R_less.case" = -80;
"@MMK_R_lslash" = -32;
"@MMK_R_n" = -88;
"@MMK_R_nine" = -40;
"@MMK_R_nine.cv11" = -48;
"@MMK_R_numbersign" = -88;
"@MMK_R_o" = -168;
"@MMK_R_p" = -88;
"@MMK_R_period" = -240;
"@MMK_R_periodcentered" = -152;
"@MMK_R_questiondown" = -304;
"@MMK_R_s" = -88;
"@MMK_R_six.cv11" = -96;
"@MMK_R_slash" = -224;
"@MMK_R_slash.case" = -168;
"@MMK_R_u" = -96;
"@MMK_R_v" = -32;
"@MMK_R_x" = -32;
"@MMK_R_z" = -80;
"@MMK_R_zero.dnom" = -240;
"@MMK_R_zero.subs" = -312;
j.cv01 = 0;
};
"@MMK_L_V.tag" = {
"@MMK_R_A.tag" = -141;
"@MMK_R_J.tag" = -128;
"@MMK_R_O.tag" = -66;
"@MMK_R_S.tag" = -62;
"@MMK_R_eight.tag" = -44;
"@MMK_R_five.tag" = -26;
"@MMK_R_four.tag" = -79;
"@MMK_R_nine.cv11.tag" = -48;
"@MMK_R_nine.tag" = -40;
"@MMK_R_one.tag" = -18;
"@MMK_R_six.cv11.tag" = -88;
"@MMK_R_three.tag" = -18;
"@MMK_R_two.tag" = -18;
};
"@MMK_L_X" = {
"@MMK_R_J" = -40;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -88;
"@MMK_R_S" = -8;
"@MMK_R_ampersand" = -32;
"@MMK_R_asciicircum" = -144;
"@MMK_R_asterisk" = -40;
"@MMK_R_backslash" = 56;
"@MMK_R_colon.case" = -64;
"@MMK_R_eight" = -40;
"@MMK_R_emdash" = -48;
"@MMK_R_emdash.case" = -80;
"@MMK_R_f" = -104;
"@MMK_R_five" = -32;
"@MMK_R_four" = -32;
"@MMK_R_hyphen" = -72;
"@MMK_R_hyphen.case" = -136;
"@MMK_R_less" = -104;
"@MMK_R_less.case" = -104;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -24;
"@MMK_R_nine.cv11" = -64;
"@MMK_R_o" = -64;
"@MMK_R_periodcentered" = -104;
"@MMK_R_question" = -48;
"@MMK_R_quoteleft" = -88;
"@MMK_R_s" = 16;
"@MMK_R_six.cv11" = -88;
"@MMK_R_slash" = -24;
"@MMK_R_u" = -56;
"@MMK_R_v" = -72;
"@MMK_R_zero.numr" = -64;
};
"@MMK_L_X.tag" = {
"@MMK_R_J.tag" = -22;
"@MMK_R_O.tag" = -48;
"@MMK_R_S.tag" = -4;
"@MMK_R_eight.tag" = -22;
"@MMK_R_five.tag" = -18;
"@MMK_R_four.tag" = -18;
"@MMK_R_nine.cv11.tag" = -35;
"@MMK_R_nine.tag" = -13;
"@MMK_R_six.cv11.tag" = -48;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -256;
"@MMK_R_J" = -232;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -120;
"@MMK_R_S" = -112;
"@MMK_R_ampersand" = -80;
"@MMK_R_asciicircum" = -144;
"@MMK_R_backslash" = 72;
"@MMK_R_colon" = -160;
"@MMK_R_colon.case" = -48;
"@MMK_R_eight" = -80;
"@MMK_R_emdash" = -80;
"@MMK_R_emdash.case" = -80;
"@MMK_R_f" = -120;
"@MMK_R_five" = -48;
"@MMK_R_four" = -144;
"@MMK_R_g" = -248;
"@MMK_R_hyphen" = -144;
"@MMK_R_hyphen.case" = -96;
"@MMK_R_jdotless" = -224;
"@MMK_R_less" = -80;
"@MMK_R_less.case" = -80;
"@MMK_R_lslash" = -32;
"@MMK_R_n" = -192;
"@MMK_R_nine" = -72;
"@MMK_R_nine.cv11" = -88;
"@MMK_R_numbersign" = -88;
"@MMK_R_o" = -248;
"@MMK_R_one" = -32;
"@MMK_R_p" = -160;
"@MMK_R_period" = -264;
"@MMK_R_periodcentered" = -264;
"@MMK_R_question" = -32;
"@MMK_R_questiondown" = -304;
"@MMK_R_s" = -152;
"@MMK_R_six.cv11" = -160;
"@MMK_R_slash" = -224;
"@MMK_R_slash.case" = -168;
"@MMK_R_three" = -32;
"@MMK_R_two" = -32;
"@MMK_R_u" = -176;
"@MMK_R_v" = -120;
"@MMK_R_x" = -120;
"@MMK_R_z" = -160;
"@MMK_R_zero.dnom" = -240;
"@MMK_R_zero.subs" = -312;
j.cv01 = 0;
};
"@MMK_L_Y.tag" = {
"@MMK_R_J.tag" = -116;
"@MMK_R_O.tag" = -60;
"@MMK_R_S.tag" = -56;
"@MMK_R_eight.tag" = -40;
"@MMK_R_five.tag" = -24;
"@MMK_R_four.tag" = -72;
"@MMK_R_nine.cv11.tag" = -44;
"@MMK_R_nine.tag" = -36;
"@MMK_R_one.tag" = -16;
"@MMK_R_six.cv11.tag" = -80;
"@MMK_R_three.tag" = -16;
"@MMK_R_two.tag" = -16;
};
"@MMK_L_Z" = {
"@MMK_R_J" = -24;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -16;
"@MMK_R_asciicircum" = -64;
"@MMK_R_asterisk" = -64;
"@MMK_R_f" = -32;
"@MMK_R_less" = -24;
"@MMK_R_less.case" = -24;
"@MMK_R_lslash" = -32;
"@MMK_R_s" = -24;
"@MMK_R_six.cv11" = -16;
"@MMK_R_u" = -16;
"@MMK_R_v" = -24;
};
"@MMK_L_Z.tag" = {
"@MMK_R_J.tag" = -13;
"@MMK_R_O.tag" = -9;
"@MMK_R_six.cv11.tag" = -9;
};
"@MMK_L_a" = {
"@MMK_R_T" = -128;
"@MMK_R_V" = -88;
"@MMK_R_Y" = -192;
"@MMK_R_backslash" = -24;
"@MMK_R_backslash.case" = -56;
"@MMK_R_seven" = -48;
"@MMK_R_slash" = -24;
"@MMK_R_slash.case" = 32;
};
"@MMK_L_ampersand" = {
"@MMK_R_J" = -48;
"@MMK_R_O" = -48;
"@MMK_R_S" = -48;
"@MMK_R_T" = -208;
"@MMK_R_U" = -72;
"@MMK_R_V" = -200;
"@MMK_R_Y" = -200;
"@MMK_R_asciicircum" = -48;
"@MMK_R_asterisk" = -136;
"@MMK_R_backslash" = -88;
"@MMK_R_backslash.case" = -144;
"@MMK_R_colon.case" = -64;
"@MMK_R_eight" = -96;
"@MMK_R_f" = -40;
"@MMK_R_five" = -40;
"@MMK_R_four" = -32;
"@MMK_R_g" = -40;
"@MMK_R_nine" = -72;
"@MMK_R_nine.cv11" = -48;
"@MMK_R_o" = -72;
"@MMK_R_one" = -72;
"@MMK_R_parenright" = -80;
"@MMK_R_parenright.case" = -48;
"@MMK_R_periodcentered" = -80;
"@MMK_R_question" = -176;
"@MMK_R_quotesingle" = -80;
"@MMK_R_seven" = -128;
"@MMK_R_six.cv11" = -56;
"@MMK_R_three" = -72;
"@MMK_R_u" = -32;
"@MMK_R_v" = -72;
"@MMK_R_zero.dnom" = -40;
"@MMK_R_zero.numr" = -104;
};
"@MMK_L_asciicircum" = {
"@MMK_R_A" = -200;
"@MMK_R_J" = -320;
"@MMK_R_S" = -32;
"@MMK_R_T" = -96;
"@MMK_R_V" = -144;
"@MMK_R_X" = -144;
"@MMK_R_Y" = -144;
"@MMK_R_Z" = -64;
"@MMK_R_ampersand" = -64;
"@MMK_R_asterisk" = -56;
"@MMK_R_eight" = -64;
"@MMK_R_four" = -80;
"@MMK_R_one" = -16;
"@MMK_R_period" = -160;
"@MMK_R_question" = -32;
"@MMK_R_questiondown" = -248;
"@MMK_R_seven" = -96;
"@MMK_R_slash" = -128;
"@MMK_R_slash.case" = -72;
"@MMK_R_three" = -72;
"@MMK_R_two" = -80;
"@MMK_R_v" = -32;
"@MMK_R_x" = -64;
};
"@MMK_L_asterisk" = {
"@MMK_R_A" = -200;
"@MMK_R_J" = -320;
"@MMK_R_S" = -32;
"@MMK_R_X" = -40;
"@MMK_R_Z" = -64;
"@MMK_R_ampersand" = -88;
"@MMK_R_asciicircum" = -56;
"@MMK_R_eight" = -64;
"@MMK_R_four" = -80;
"@MMK_R_one" = -16;
"@MMK_R_period" = -160;
"@MMK_R_question" = -32;
"@MMK_R_questiondown" = -248;
"@MMK_R_slash" = -128;
"@MMK_R_slash.case" = -72;
"@MMK_R_three" = -72;
"@MMK_R_two" = -80;
"@MMK_R_v" = -32;
"@MMK_R_x" = -64;
};
"@MMK_L_backslash" = {
"@MMK_R_H" = -40;
"@MMK_R_J" = -80;
"@MMK_R_Lslash" = -80;
"@MMK_R_O" = -88;
"@MMK_R_T" = -168;
"@MMK_R_U" = -96;
"@MMK_R_V" = -224;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -224;
"@MMK_R_asciicircum" = -128;
"@MMK_R_asterisk" = -128;
"@MMK_R_eight" = -64;
"@MMK_R_f" = -72;
"@MMK_R_five" = -32;
"@MMK_R_four" = -16;
"@MMK_R_g" = 144;
"@MMK_R_hyphen.case" = -80;
"@MMK_R_j" = 200;
"@MMK_R_jdotless" = 208;
"@MMK_R_lslash" = -72;
"@MMK_R_nine" = -56;
"@MMK_R_nine.cv11" = -88;
"@MMK_R_numbersign" = -80;
"@MMK_R_one" = -80;
"@MMK_R_question" = -96;
"@MMK_R_quoteleft" = -120;
"@MMK_R_quotesingle" = -112;
"@MMK_R_seven" = -160;
"@MMK_R_three" = -64;
"@MMK_R_underscore" = 160;
"@MMK_R_v" = -112;
};
"@MMK_L_backslash.case" = {
"@MMK_R_A" = 16;
"@MMK_R_O" = -32;
"@MMK_R_T" = -120;
"@MMK_R_V" = -168;
"@MMK_R_Y" = -168;
"@MMK_R_asciicircum" = -72;
"@MMK_R_asterisk" = -72;
"@MMK_R_backslash" = 64;
"@MMK_R_colon" = 40;
"@MMK_R_emdash" = 40;
"@MMK_R_hyphen" = 40;
"@MMK_R_j" = 232;
"@MMK_R_jdotless" = 232;
"@MMK_R_l" = 32;
"@MMK_R_n" = 32;
"@MMK_R_nine.cv11" = -64;
"@MMK_R_p" = 56;
"@MMK_R_period" = 40;
"@MMK_R_periodcentered" = 40;
"@MMK_R_question" = -88;
"@MMK_R_questiondown" = 80;
"@MMK_R_quoteleft" = -80;
"@MMK_R_quotesingle" = -120;
"@MMK_R_u" = -24;
"@MMK_R_underscore" = 144;
"@MMK_R_v" = -64;
};
"@MMK_L_c" = {
"@MMK_R_A" = -48;
"@MMK_R_S" = -32;
"@MMK_R_T" = -156;
"@MMK_R_V" = -128;
"@MMK_R_X" = -16;
"@MMK_R_Y" = -256;
"@MMK_R_f" = -24;
"@MMK_R_parenright" = -64;
"@MMK_R_question" = -24;
"@MMK_R_seven" = -32;
"@MMK_R_zero.numr" = -32;
};
"@MMK_L_c.dnom" = {
"@MMK_R_f.dnom" = -16;
"@MMK_R_zero.dnom" = -16;
};
"@MMK_L_colon" = {
"@MMK_R_S" = -24;
"@MMK_R_T" = -64;
"@MMK_R_V" = -80;
"@MMK_R_Y" = -160;
"@MMK_R_backslash.case" = -56;
"@MMK_R_seven" = -72;
"@MMK_R_slash.case" = 40;
};
"@MMK_L_colon.case" = {
"@MMK_R_V" = -48;
"@MMK_R_X" = -64;
"@MMK_R_Y" = -48;
};
"@MMK_L_eight" = {
"@MMK_R_A" = -32;
"@MMK_R_T" = -16;
"@MMK_R_V" = -32;
"@MMK_R_X" = -64;
"@MMK_R_Y" = -80;
"@MMK_R_asciicircum" = -64;
"@MMK_R_asterisk" = -64;
"@MMK_R_backslash.case" = -32;
"@MMK_R_f" = -16;
"@MMK_R_parenright" = -32;
"@MMK_R_parenright.case" = -32;
"@MMK_R_questiondown" = -48;
"@MMK_R_slash" = -64;
};
"@MMK_L_eight.tag" = {
"@MMK_R_A.tag" = -18;
"@MMK_R_T.tag" = -9;
"@MMK_R_V.tag" = -44;
"@MMK_R_X.tag" = -35;
"@MMK_R_Y.tag" = -40;
};
"@MMK_L_emdash" = {
"@MMK_R_A" = -48;
"@MMK_R_Lslash" = 88;
"@MMK_R_O" = 24;
"@MMK_R_S" = -48;
"@MMK_R_V" = -80;
"@MMK_R_Y" = -80;
"@MMK_R_backslash.case" = -48;
"@MMK_R_g" = 32;
"@MMK_R_lslash" = 80;
"@MMK_R_nine" = -40;
"@MMK_R_nine.cv11" = -40;
"@MMK_R_numbersign" = 112;
"@MMK_R_o" = 32;
"@MMK_R_s" = 24;
"@MMK_R_seven" = -80;
"@MMK_R_slash.case" = 40;
"@MMK_R_v" = -48;
"@MMK_R_x" = -48;
};
"@MMK_L_emdash.case" = {
"@MMK_R_A" = -80;
"@MMK_R_Lslash" = 88;
"@MMK_R_O" = 24;
"@MMK_R_S" = -24;
"@MMK_R_V" = -80;
"@MMK_R_X" = -80;
"@MMK_R_Y" = -80;
"@MMK_R_g" = 32;
"@MMK_R_lslash" = 80;
"@MMK_R_n" = 16;
"@MMK_R_o" = 32;
"@MMK_R_quoteleft" = 16;
};
"@MMK_L_f" = {
"@MMK_R_A" = -152;
"@MMK_R_J" = -72;
"@MMK_R_ampersand" = -16;
"@MMK_R_backslash" = 80;
"@MMK_R_g" = -24;
"@MMK_R_hyphen" = -40;
"@MMK_R_jdotless" = -24;
"@MMK_R_less" = -24;
"@MMK_R_less.case" = -24;
"@MMK_R_o" = -24;
"@MMK_R_period" = -144;
"@MMK_R_periodcentered" = -32;
"@MMK_R_questiondown" = -96;
"@MMK_R_quoteleft" = 24;
"@MMK_R_slash" = -88;
"@MMK_R_slash.case" = -48;
"@MMK_R_underscore" = -192;
"@MMK_R_zero.subs" = -184;
};
"@MMK_L_f.dnom" = {
"@MMK_R_g.dnom" = -16;
"@MMK_R_o.dnom" = -16;
"@MMK_R_zero.dnom" = -16;
};
"@MMK_L_five" = {
"@MMK_R_A" = -40;
"@MMK_R_V" = -24;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -24;
"@MMK_R_parenright" = -24;
"@MMK_R_parenright.case" = -24;
"@MMK_R_period" = -64;
"@MMK_R_questiondown" = -48;
"@MMK_R_quoteleft" = -16;
"@MMK_R_slash" = -32;
"@MMK_R_v" = -24;
"@MMK_R_x" = -40;
};
"@MMK_L_five.tag" = {
"@MMK_R_A.tag" = -22;
"@MMK_R_V.tag" = -13;
"@MMK_R_X.tag" = -13;
"@MMK_R_Y.tag" = -12;
};
"@MMK_L_four" = {
"@MMK_R_V" = -128;
"@MMK_R_X" = -32;
"@MMK_R_Y" = -144;
"@MMK_R_asciicircum" = -80;
"@MMK_R_asterisk" = -80;
"@MMK_R_backslash" = -16;
"@MMK_R_backslash.case" = -88;
"@MMK_R_emdash" = 32;
"@MMK_R_f" = -48;
"@MMK_R_parenright" = -64;
"@MMK_R_parenright.case" = -32;
"@MMK_R_quoteleft" = -16;
"@MMK_R_quotesingle" = -80;
"@MMK_R_slash" = -16;
"@MMK_R_v" = -56;
"@MMK_R_x" = -40;
"@MMK_R_zero.numr" = -112;
"@MMK_R_zero.sups" = -152;
};
"@MMK_L_four.tag" = {
"@MMK_R_V.tag" = -79;
"@MMK_R_X.tag" = -18;
"@MMK_R_Y.tag" = -72;
};
"@MMK_L_fraction" = {
"@MMK_R_zero.numr" = 416;
"@MMK_R_zero.sups" = 512;
};
"@MMK_L_g" = {
"@MMK_R_T" = -128;
"@MMK_R_V" = -88;
"@MMK_R_Y" = -192;
"@MMK_R_backslash.case" = -56;
"@MMK_R_j" = 56;
"@MMK_R_jdotless" = 56;
"@MMK_R_seven" = -40;
};
"@MMK_L_g.dnom" = {
"@MMK_R_j.dnom" = 38;
};
"@MMK_L_greater" = {
"@MMK_R_A" = -112;
"@MMK_R_T" = -104;
"@MMK_R_V" = -80;
"@MMK_R_X" = -104;
"@MMK_R_Y" = -80;
"@MMK_R_Z" = -24;
"@MMK_R_f" = -24;
"@MMK_R_seven" = -72;
};
"@MMK_L_greater.case" = {
"@MMK_R_A" = -120;
"@MMK_R_T" = -104;
"@MMK_R_V" = -80;
"@MMK_R_X" = -104;
"@MMK_R_Y" = -80;
"@MMK_R_Z" = -24;
"@MMK_R_f" = -24;
"@MMK_R_seven" = -72;
};
"@MMK_L_hyphen" = {
"@MMK_R_A" = -80;
"@MMK_R_S" = -64;
"@MMK_R_T" = -224;
"@MMK_R_V" = -144;
"@MMK_R_X" = -72;
"@MMK_R_Y" = -144;
"@MMK_R_backslash.case" = -48;
"@MMK_R_f" = -32;
"@MMK_R_nine" = -54;
"@MMK_R_one" = -32;
"@MMK_R_parenright" = -80;
"@MMK_R_question" = -184;
"@MMK_R_questiondown" = -112;
"@MMK_R_seven" = -64;
"@MMK_R_slash.case" = 40;
"@MMK_R_three" = -40;
"@MMK_R_u" = -16;
"@MMK_R_v" = -80;
"@MMK_R_x" = -112;
};
"@MMK_L_hyphen.case" = {
"@MMK_R_A" = -128;
"@MMK_R_J" = -64;
"@MMK_R_S" = -16;
"@MMK_R_T" = -120;
"@MMK_R_V" = -96;
"@MMK_R_X" = -136;
"@MMK_R_Y" = -96;
"@MMK_R_jdotless" = -24;
"@MMK_R_parenright" = -80;
"@MMK_R_parenright.case" = -80;
"@MMK_R_question" = -32;
"@MMK_R_questiondown" = -144;
"@MMK_R_seven" = -64;
"@MMK_R_slash" = -80;
"@MMK_R_u" = -16;
"@MMK_R_x" = -48;
};
"@MMK_L_j" = {
"@MMK_R_j" = 56;
"@MMK_R_jdotless" = 56;
"@MMK_R_slash.case" = 32;
};
"@MMK_L_j.dnom" = {
"@MMK_R_j.dnom" = 38;
};
"@MMK_L_l" = {
"@MMK_R_slash" = -40;
"@MMK_R_slash.case" = 16;
periodcentered.loclCAT = -64;
};
"@MMK_L_l.cv16" = {
"@MMK_R_A" = 48;
"@MMK_R_O" = -16;
"@MMK_R_T" = -88;
"@MMK_R_U" = -16;
"@MMK_R_V" = -88;
"@MMK_R_Y" = -88;
"@MMK_R_asciicircum" = -88;
"@MMK_R_asterisk" = -48;
"@MMK_R_emdash" = 40;
"@MMK_R_f" = -56;
"@MMK_R_j" = 64;
"@MMK_R_question" = -40;
"@MMK_R_questiondown" = 40;
"@MMK_R_seven" = -48;
"@MMK_R_slash.case" = 48;
"@MMK_R_v" = -48;
periodcentered.loclCAT = -64;
};
"@MMK_L_lslash" = {
"@MMK_R_A" = -32;
"@MMK_R_J" = -32;
"@MMK_R_Lslash" = 40;
"@MMK_R_T" = -32;
"@MMK_R_V" = -32;
"@MMK_R_X" = -32;
"@MMK_R_Y" = -32;
"@MMK_R_Z" = -32;
"@MMK_R_emdash" = 80;
"@MMK_R_emdash.case" = 80;
"@MMK_R_hyphen" = -32;
"@MMK_R_lslash" = 32;
"@MMK_R_parenright" = -32;
"@MMK_R_parenright.case" = -32;
"@MMK_R_period" = -32;
"@MMK_R_periodcentered" = -32;
"@MMK_R_question" = 32;
"@MMK_R_questiondown" = -40;
"@MMK_R_seven" = -32;
"@MMK_R_slash" = -40;
"@MMK_R_three" = -32;
"@MMK_R_zero.dnom" = -32;
"@MMK_R_zero.subs" = -32;
};
"@MMK_L_n" = {
"@MMK_R_T" = -128;
"@MMK_R_V" = -152;
"@MMK_R_Y" = -240;
"@MMK_R_asciicircum" = -16;
"@MMK_R_asterisk" = -16;
"@MMK_R_backslash" = -40;
"@MMK_R_backslash.case" = -104;
"@MMK_R_f" = -48;
"@MMK_R_parenright" = -40;
"@MMK_R_parenright.case" = -24;
"@MMK_R_question" = -64;
"@MMK_R_quoteleft" = -16;
"@MMK_R_quotesingle" = -40;
"@MMK_R_seven" = -80;
"@MMK_R_slash" = -24;
"@MMK_R_v" = -56;
"@MMK_R_zero.numr" = -64;
"@MMK_R_zero.sups" = -136;
};
"@MMK_L_n.dnom" = {
"@MMK_R_f.dnom" = -32;
"@MMK_R_v.dnom" = -38;
"@MMK_R_zero.dnom" = -32;
};
"@MMK_L_nine.cv11" = {
"@MMK_R_A" = -112;
"@MMK_R_J" = -48;
"@MMK_R_S" = -16;
"@MMK_R_T" = -16;
"@MMK_R_V" = -56;
"@MMK_R_X" = -80;
"@MMK_R_Y" = -104;
"@MMK_R_ampersand" = -48;
"@MMK_R_parenright" = -48;
"@MMK_R_parenright.case" = -40;
"@MMK_R_period" = -104;
"@MMK_R_slash" = -136;
"@MMK_R_slash.case" = -40;
};
"@MMK_L_nine.cv11.tag" = {
"@MMK_R_A.tag" = -62;
"@MMK_R_J.tag" = -26;
"@MMK_R_S.tag" = -9;
"@MMK_R_T.tag" = -9;
"@MMK_R_V.tag" = -57;
"@MMK_R_X.tag" = -44;
"@MMK_R_Y.tag" = -52;
};
"@MMK_L_numbersign" = {
"@MMK_R_A" = -128;
"@MMK_R_J" = -24;
"@MMK_R_hyphen" = -88;
"@MMK_R_period" = -104;
"@MMK_R_periodcentered" = -64;
"@MMK_R_questiondown" = -96;
"@MMK_R_quoteleft" = 96;
"@MMK_R_slash" = -80;
"@MMK_R_underscore" = -240;
};
"@MMK_L_o" = {
"@MMK_R_A" = -40;
"@MMK_R_S" = -32;
"@MMK_R_T" = -168;
"@MMK_R_V" = -168;
"@MMK_R_X" = -64;
"@MMK_R_Y" = -248;
"@MMK_R_backslash" = -24;
"@MMK_R_backslash.case" = -72;
"@MMK_R_emdash" = 32;
"@MMK_R_emdash.case" = 32;
"@MMK_R_f" = -32;
"@MMK_R_parenright" = -48;
"@MMK_R_parenright.case" = -48;
"@MMK_R_period" = -16;
"@MMK_R_question" = -80;
"@MMK_R_questiondown" = -48;
"@MMK_R_quoteleft" = -16;
"@MMK_R_quotesingle" = -56;
"@MMK_R_seven" = -32;
"@MMK_R_slash" = -24;
"@MMK_R_v" = -56;
"@MMK_R_x" = -48;
"@MMK_R_zero.numr" = -64;
"@MMK_R_zero.sups" = -144;
};
"@MMK_L_o.dnom" = {
"@MMK_R_f.dnom" = -21;
"@MMK_R_v.dnom" = -38;
"@MMK_R_x.dnom" = -32;
"@MMK_R_zero.dnom" = -21;
};
"@MMK_L_one" = {
"@MMK_R_slash" = -24;
};
"@MMK_L_parenleft" = {
"@MMK_R_A" = -48;
"@MMK_R_J" = -72;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -48;
"@MMK_R_S" = -80;
"@MMK_R_ampersand" = -80;
"@MMK_R_eight" = -32;
"@MMK_R_f" = -16;
"@MMK_R_five" = -48;
"@MMK_R_four" = -72;
"@MMK_R_hyphen" = -80;
"@MMK_R_hyphen.case" = -80;
"@MMK_R_j" = 184;
"@MMK_R_jdotless" = 184;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -56;
"@MMK_R_nine.cv11" = -40;
"@MMK_R_o" = -48;
"@MMK_R_s" = -48;
"@MMK_R_six.cv11" = -48;
"@MMK_R_three" = -24;
"@MMK_R_two" = -48;
"@MMK_R_u" = -40;
"@MMK_R_v" = -40;
"@MMK_R_x" = -32;
A = 0;
};
"@MMK_L_parenleft.case" = {
"@MMK_R_J" = -24;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -32;
"@MMK_R_S" = -32;
"@MMK_R_ampersand" = -48;
"@MMK_R_eight" = -32;
"@MMK_R_f" = -24;
"@MMK_R_five" = -40;
"@MMK_R_four" = -40;
"@MMK_R_hyphen.case" = -80;
"@MMK_R_j" = 144;
"@MMK_R_jdotless" = 144;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -48;
"@MMK_R_nine.cv11" = -24;
"@MMK_R_o" = -48;
"@MMK_R_s" = -24;
"@MMK_R_six.cv11" = -40;
"@MMK_R_three" = -32;
"@MMK_R_u" = -32;
"@MMK_R_v" = -64;
};
"@MMK_L_period" = {
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -72;
"@MMK_R_T" = -240;
"@MMK_R_U" = -88;
"@MMK_R_V" = -240;
"@MMK_R_Y" = -264;
"@MMK_R_asciicircum" = -160;
"@MMK_R_asterisk" = -160;
"@MMK_R_backslash" = -96;
"@MMK_R_backslash.case" = -160;
"@MMK_R_f" = -128;
"@MMK_R_five" = -48;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -56;
"@MMK_R_nine.cv11" = -96;
"@MMK_R_o" = -16;
"@MMK_R_one" = -136;
"@MMK_R_question" = -160;
"@MMK_R_quoteleft" = -96;
"@MMK_R_quotesingle" = -96;
"@MMK_R_seven" = -104;
"@MMK_R_six.cv11" = -64;
"@MMK_R_slash.case" = 40;
"@MMK_R_u" = -64;
"@MMK_R_v" = -200;
};
"@MMK_L_periodcentered" = {
"@MMK_R_A" = -80;
"@MMK_R_T" = -240;
"@MMK_R_V" = -152;
"@MMK_R_X" = -104;
"@MMK_R_Y" = -264;
"@MMK_R_backslash.case" = -64;
"@MMK_R_f" = -8;
"@MMK_R_nine" = -32;
"@MMK_R_one" = -24;
"@MMK_R_question" = -80;
"@MMK_R_questiondown" = -48;
"@MMK_R_seven" = -104;
"@MMK_R_slash.case" = 40;
"@MMK_R_three" = -16;
"@MMK_R_v" = -56;
"@MMK_R_x" = -48;
};
"@MMK_L_q" = {
"@MMK_R_V" = -88;
"@MMK_R_Y" = -160;
"@MMK_R_backslash" = -24;
"@MMK_R_backslash.case" = -56;
"@MMK_R_j" = 112;
"@MMK_R_jdotless" = 112;
"@MMK_R_slash.case" = 56;
};
"@MMK_L_q.dnom" = {
"@MMK_R_j.dnom" = 75;
};
"@MMK_L_question" = {
"@MMK_R_A" = -160;
"@MMK_R_J" = -168;
"@MMK_R_Y" = -32;
"@MMK_R_ampersand" = -56;
"@MMK_R_asciicircum" = -32;
"@MMK_R_asterisk" = -32;
"@MMK_R_backslash" = 48;
"@MMK_R_g" = -24;
"@MMK_R_hyphen" = -112;
"@MMK_R_hyphen.case" = -24;
"@MMK_R_o" = -24;
"@MMK_R_period" = -160;
"@MMK_R_periodcentered" = -48;
"@MMK_R_questiondown" = -192;
"@MMK_R_slash" = -160;
"@MMK_R_slash.case" = -112;
"@MMK_R_underscore" = -112;
};
"@MMK_L_questiondown" = {
"@MMK_R_Islash" = -32;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -32;
"@MMK_R_T" = -168;
"@MMK_R_U" = -128;
"@MMK_R_V" = -304;
"@MMK_R_Y" = -304;
"@MMK_R_ampersand" = -88;
"@MMK_R_asciicircum" = -320;
"@MMK_R_asterisk" = -320;
"@MMK_R_backslash" = -176;
"@MMK_R_backslash.case" = -240;
"@MMK_R_eight" = -48;
"@MMK_R_f" = -160;
"@MMK_R_five" = -48;
"@MMK_R_four" = -72;
"@MMK_R_hyphen" = -184;
"@MMK_R_hyphen.case" = -184;
"@MMK_R_j" = 168;
"@MMK_R_jdotless" = 168;
"@MMK_R_lslash" = -32;
"@MMK_R_nine" = -32;
"@MMK_R_o" = -48;
"@MMK_R_one" = -112;
"@MMK_R_periodcentered" = -112;
"@MMK_R_question" = -160;
"@MMK_R_quoteleft" = -48;
"@MMK_R_quotesingle" = -112;
"@MMK_R_seven" = -80;
"@MMK_R_six.cv11" = -48;
"@MMK_R_slash.case" = 40;
"@MMK_R_three" = -48;
"@MMK_R_u" = -48;
"@MMK_R_v" = -160;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A" = -312;
"@MMK_R_Islash" = -32;
"@MMK_R_J" = -312;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -104;
"@MMK_R_S" = -104;
"@MMK_R_ampersand" = -64;
"@MMK_R_asciicircum" = -112;
"@MMK_R_backslash" = 56;
"@MMK_R_backslash.case" = 40;
"@MMK_R_colon" = -88;
"@MMK_R_colon.case" = -32;
"@MMK_R_eight" = -40;
"@MMK_R_emdash" = -80;
"@MMK_R_emdash.case" = -80;
"@MMK_R_f" = -40;
"@MMK_R_five" = -64;
"@MMK_R_four" = -144;
"@MMK_R_g" = -128;
"@MMK_R_hyphen" = -80;
"@MMK_R_hyphen.case" = -80;
"@MMK_R_j" = -48;
"@MMK_R_jdotless" = -64;
"@MMK_R_lslash" = -32;
"@MMK_R_n" = -64;
"@MMK_R_nine" = -40;
"@MMK_R_nine.cv11" = -40;
"@MMK_R_numbersign" = -72;
"@MMK_R_o" = -128;
"@MMK_R_one" = -24;
"@MMK_R_p" = -64;
"@MMK_R_parenleft" = -104;
"@MMK_R_parenleft.case" = -64;
"@MMK_R_period" = -240;
"@MMK_R_periodcentered" = -88;
"@MMK_R_questiondown" = -232;
"@MMK_R_s" = -128;
"@MMK_R_six.cv11" = -144;
"@MMK_R_slash" = -200;
"@MMK_R_slash.case" = -136;
"@MMK_R_three" = -48;
"@MMK_R_two" = -48;
"@MMK_R_u" = -64;
"@MMK_R_underscore" = -80;
"@MMK_R_v" = -48;
"@MMK_R_x" = -64;
"@MMK_R_z" = -64;
bracketleft = 0;
};
"@MMK_L_quotesingle" = {
"@MMK_R_A" = -192;
"@MMK_R_J" = -128;
"@MMK_R_Lslash" = -40;
"@MMK_R_O" = -24;
"@MMK_R_backslash.case" = 56;
"@MMK_R_four" = -40;
"@MMK_R_g" = -56;
"@MMK_R_lslash" = -32;
"@MMK_R_numbersign" = -96;
"@MMK_R_o" = -56;
"@MMK_R_period" = -96;
"@MMK_R_questiondown" = -112;
"@MMK_R_six.cv11" = -32;
"@MMK_R_slash" = -136;
"@MMK_R_slash.case" = -112;
};
"@MMK_L_r" = {
"@MMK_R_A" = -120;
"@MMK_R_J" = -120;
"@MMK_R_V" = -64;
"@MMK_R_X" = -32;
"@MMK_R_Y" = -112;
"@MMK_R_Z" = -16;
"@MMK_R_ampersand" = -40;
"@MMK_R_f" = 32;
"@MMK_R_five" = -8;
"@MMK_R_four" = -24;
"@MMK_R_g" = -8;
"@MMK_R_less" = -16;
"@MMK_R_o" = -8;
"@MMK_R_period" = -192;
"@MMK_R_questiondown" = -88;
"@MMK_R_seven" = -40;
"@MMK_R_six.cv11" = -16;
"@MMK_R_slash" = -80;
"@MMK_R_slash.case" = -32;
"@MMK_R_three" = -80;
"@MMK_R_two" = -48;
"@MMK_R_v" = 32;
"@MMK_R_zero.subs" = -176;
};
"@MMK_L_r.dnom" = {
"@MMK_R_f.dnom" = 21;
"@MMK_R_g.dnom" = -5;
"@MMK_R_o.dnom" = -5;
"@MMK_R_v.dnom" = 21;
"@MMK_R_zero.dnom" = -5;
};
"@MMK_L_s" = {
"@MMK_R_A" = -16;
"@MMK_R_S" = -16;
"@MMK_R_T" = -112;
"@MMK_R_V" = -88;
"@MMK_R_X" = -24;
"@MMK_R_Y" = -152;
"@MMK_R_Z" = -8;
"@MMK_R_emdash" = 24;
"@MMK_R_parenright" = -48;
"@MMK_R_s" = 24;
"@MMK_R_seven" = -48;
"@MMK_R_v" = -24;
"@MMK_R_x" = -16;
"@MMK_R_zero.sups" = -80;
};
"@MMK_L_s.dnom" = {
"@MMK_R_s.dnom" = 16;
"@MMK_R_v.dnom" = -16;
"@MMK_R_x.dnom" = -11;
};
"@MMK_L_seven" = {
"@MMK_R_A" = -152;
"@MMK_R_J" = -144;
"@MMK_R_Lslash" = -40;
"@MMK_R_ampersand" = -56;
"@MMK_R_asciicircum" = -72;
"@MMK_R_backslash" = 32;
"@MMK_R_colon" = -56;
"@MMK_R_g" = -32;
"@MMK_R_hyphen" = -24;
"@MMK_R_hyphen.case" = -24;
"@MMK_R_less" = -72;
"@MMK_R_less.case" = -72;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -32;
"@MMK_R_period" = -176;
"@MMK_R_periodcentered" = -64;
"@MMK_R_questiondown" = -184;
"@MMK_R_s" = -48;
"@MMK_R_slash" = -160;
"@MMK_R_slash.case" = -112;
"@MMK_R_z" = -32;
"@MMK_R_zero.dnom" = -200;
"@MMK_R_zero.subs" = -304;
};
"@MMK_L_seven.tag" = {
"@MMK_R_A.tag" = -84;
"@MMK_R_J.tag" = -79;
};
"@MMK_L_six" = {
"@MMK_R_A" = -72;
"@MMK_R_T" = -48;
"@MMK_R_V" = -40;
"@MMK_R_X" = -32;
"@MMK_R_Y" = -40;
"@MMK_R_asciicircum" = -16;
"@MMK_R_asterisk" = -16;
"@MMK_R_f" = -16;
"@MMK_R_parenright" = -32;
"@MMK_R_parenright.case" = -16;
"@MMK_R_period" = -32;
"@MMK_R_questiondown" = -48;
"@MMK_R_quoteleft" = -16;
"@MMK_R_slash" = -64;
"@MMK_R_v" = -40;
"@MMK_R_x" = -48;
};
"@MMK_L_six.cv11" = {
"@MMK_R_A" = -56;
"@MMK_R_T" = -104;
"@MMK_R_V" = -144;
"@MMK_R_X" = -104;
"@MMK_R_Y" = -152;
"@MMK_R_Z" = -16;
"@MMK_R_backslash.case" = -80;
"@MMK_R_f" = -40;
"@MMK_R_parenright" = -40;
"@MMK_R_parenright.case" = -24;
"@MMK_R_period" = -64;
"@MMK_R_questiondown" = -48;
"@MMK_R_quoteleft" = -72;
"@MMK_R_quotesingle" = -48;
"@MMK_R_slash" = -48;
"@MMK_R_slash.case" = -16;
"@MMK_R_v" = -48;
"@MMK_R_x" = -40;
};
"@MMK_L_six.cv11.tag" = {
"@MMK_R_A.tag" = -31;
"@MMK_R_T.tag" = -57;
"@MMK_R_V.tag" = -84;
"@MMK_R_X.tag" = -57;
"@MMK_R_Y.tag" = -76;
"@MMK_R_Z.tag" = -9;
};
"@MMK_L_six.tag" = {
"@MMK_R_A.tag" = -40;
"@MMK_R_T.tag" = -26;
"@MMK_R_V.tag" = -22;
"@MMK_R_X.tag" = -18;
"@MMK_R_Y.tag" = -20;
};
"@MMK_L_slash" = {
"@MMK_R_A" = -104;
"@MMK_R_J" = -32;
"@MMK_R_V" = 72;
"@MMK_R_X" = 56;
"@MMK_R_Y" = 72;
"@MMK_R_eight" = -8;
"@MMK_R_four" = -16;
"@MMK_R_g" = -24;
"@MMK_R_nine.cv11" = 24;
"@MMK_R_o" = -24;
"@MMK_R_period" = -96;
"@MMK_R_questiondown" = -160;
"@MMK_R_quoteleft" = 80;
"@MMK_R_quotesingle" = 112;
"@MMK_R_six.cv11" = -40;
"@MMK_R_slash.case" = 64;
"@MMK_R_underscore" = -160;
};
"@MMK_L_slash.case" = {
"@MMK_R_A" = -144;
"@MMK_R_J" = -80;
"@MMK_R_O" = -48;
"@MMK_R_S" = -40;
"@MMK_R_colon" = -56;
"@MMK_R_eight" = -40;
"@MMK_R_emdash" = -48;
"@MMK_R_five" = -40;
"@MMK_R_four" = -80;
"@MMK_R_g" = -72;
"@MMK_R_hyphen" = -48;
"@MMK_R_j" = -32;
"@MMK_R_jdotless" = -48;
"@MMK_R_n" = -56;
"@MMK_R_o" = -72;
"@MMK_R_p" = -56;
"@MMK_R_period" = -160;
"@MMK_R_periodcentered" = -64;
"@MMK_R_questiondown" = -200;
"@MMK_R_quoteleft" = 40;
"@MMK_R_quotesingle" = 80;
"@MMK_R_s" = -40;
"@MMK_R_six.cv11" = -72;
"@MMK_R_two" = -48;
"@MMK_R_u" = -40;
"@MMK_R_underscore" = -224;
"@MMK_R_x" = -40;
"@MMK_R_z" = -56;
};
"@MMK_L_t" = {
"@MMK_R_T" = -32;
"@MMK_R_V" = -64;
"@MMK_R_Y" = -120;
"@MMK_R_period" = 16;
"@MMK_R_s" = 24;
};
"@MMK_L_t.cv02" = {
"@MMK_R_A" = -112;
"@MMK_R_J" = -72;
"@MMK_R_O" = -16;
"@MMK_R_S" = -24;
"@MMK_R_T" = -16;
"@MMK_R_V" = -72;
"@MMK_R_X" = -64;
"@MMK_R_Y" = -120;
"@MMK_R_Z" = -32;
"@MMK_R_eight" = -8;
"@MMK_R_five" = -16;
"@MMK_R_four" = -8;
"@MMK_R_g" = -48;
"@MMK_R_hyphen" = -48;
"@MMK_R_o" = -16;
"@MMK_R_parenright" = -40;
"@MMK_R_period" = -144;
"@MMK_R_periodcentered" = -8;
"@MMK_R_questiondown" = -80;
"@MMK_R_seven" = -40;
"@MMK_R_slash" = -88;
"@MMK_R_slash.case" = -40;
"@MMK_R_three" = -88;
"@MMK_R_two" = -48;
"@MMK_R_underscore" = -192;
"@MMK_R_zero.dnom" = -64;
"@MMK_R_zero.subs" = -104;
};
"@MMK_L_t.cv02.dnom" = {
"@MMK_R_g.dnom" = -32;
"@MMK_R_o.dnom" = -27;
};
"@MMK_L_t.dnom" = {
"@MMK_R_s.dnom" = 16;
};
"@MMK_L_three" = {
"@MMK_R_A" = -24;
"@MMK_R_X" = -40;
"@MMK_R_Y" = -32;
"@MMK_R_asciicircum" = -16;
"@MMK_R_asterisk" = -16;
"@MMK_R_f" = -32;
"@MMK_R_parenright" = -24;
"@MMK_R_questiondown" = -48;
"@MMK_R_slash" = -56;
};
"@MMK_L_three.tag" = {
"@MMK_R_A.tag" = -13;
"@MMK_R_V.tag" = -18;
"@MMK_R_X.tag" = -22;
"@MMK_R_Y.tag" = -16;
};
"@MMK_L_two" = {
"@MMK_R_V" = -24;
"@MMK_R_Y" = -32;
"@MMK_R_asciicircum" = -64;
"@MMK_R_asterisk" = -64;
"@MMK_R_backslash.case" = -64;
"@MMK_R_parenright" = -56;
};
"@MMK_L_two.tag" = {
"@MMK_R_V.tag" = -18;
"@MMK_R_Y.tag" = -16;
};
"@MMK_L_u.cv04" = {
"@MMK_R_A" = -32;
"@MMK_R_S" = -24;
"@MMK_R_T" = -104;
"@MMK_R_V" = -96;
"@MMK_R_X" = -56;
"@MMK_R_Y" = -176;
"@MMK_R_Z" = -16;
"@MMK_R_backslash.case" = -40;
"@MMK_R_hyphen" = -16;
"@MMK_R_hyphen.case" = -16;
"@MMK_R_period" = -64;
"@MMK_R_questiondown" = -48;
"@MMK_R_seven" = -48;
"@MMK_R_slash" = -24;
"@MMK_R_slash.case" = -24;
"@MMK_R_zero.subs" = -32;
};
"@MMK_L_underscore" = {
"@MMK_R_Lslash" = -40;
"@MMK_R_ampersand" = -72;
"@MMK_R_backslash" = -160;
"@MMK_R_backslash.case" = -224;
"@MMK_R_f" = -184;
"@MMK_R_j" = 224;
"@MMK_R_jdotless" = 224;
"@MMK_R_lslash" = -32;
"@MMK_R_question" = -112;
"@MMK_R_slash" = 160;
"@MMK_R_slash.case" = 144;
};
"@MMK_L_v" = {
"@MMK_R_A" = -152;
"@MMK_R_J" = -96;
"@MMK_R_S" = -24;
"@MMK_R_T" = -72;
"@MMK_R_V" = -32;
"@MMK_R_X" = -72;
"@MMK_R_Y" = -120;
"@MMK_R_Z" = -24;
"@MMK_R_ampersand" = -48;
"@MMK_R_asciicircum" = -32;
"@MMK_R_asterisk" = -32;
"@MMK_R_emdash" = -48;
"@MMK_R_four" = -56;
"@MMK_R_g" = -48;
"@MMK_R_hyphen" = -80;
"@MMK_R_o" = -56;
"@MMK_R_parenright" = -40;
"@MMK_R_parenright.case" = -64;
"@MMK_R_period" = -200;
"@MMK_R_periodcentered" = -56;
"@MMK_R_questiondown" = -160;
"@MMK_R_s" = -40;
"@MMK_R_seven" = -32;
"@MMK_R_six.cv11" = -24;
"@MMK_R_slash" = -112;
"@MMK_R_slash.case" = -64;
"@MMK_R_three" = -40;
"@MMK_R_zero.dnom" = -128;
"@MMK_R_zero.subs" = -184;
};
"@MMK_L_v.dnom" = {
"@MMK_R_g.dnom" = -32;
"@MMK_R_o.dnom" = -38;
"@MMK_R_s.dnom" = -27;
"@MMK_R_zero.dnom" = -38;
};
"@MMK_L_x" = {
"@MMK_R_J" = -56;
"@MMK_R_Lslash" = -40;
"@MMK_R_T" = -72;
"@MMK_R_V" = -32;
"@MMK_R_Y" = -120;
"@MMK_R_asciicircum" = -64;
"@MMK_R_asterisk" = -64;
"@MMK_R_backslash.case" = -40;
"@MMK_R_emdash" = -48;
"@MMK_R_four" = -40;
"@MMK_R_g" = -48;
"@MMK_R_hyphen" = -112;
"@MMK_R_hyphen.case" = -48;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -48;
"@MMK_R_parenright" = -32;
"@MMK_R_periodcentered" = -48;
"@MMK_R_s" = -16;
"@MMK_R_six.cv11" = -40;
"@MMK_R_slash" = -72;
"@MMK_R_zero.dnom" = -80;
};
"@MMK_L_x.dnom" = {
"@MMK_R_f.dnom" = 16;
"@MMK_R_g.dnom" = -32;
"@MMK_R_o.dnom" = -32;
"@MMK_R_s.dnom" = -11;
"@MMK_R_zero.dnom" = -32;
};
"@MMK_L_z" = {
"@MMK_R_A" = -8;
"@MMK_R_T" = -72;
"@MMK_R_V" = -80;
"@MMK_R_Y" = -160;
"@MMK_R_backslash.case" = -56;
"@MMK_R_seven" = -32;
};
"@MMK_L_zero.dnom" = {
"@MMK_R_T" = -240;
"@MMK_R_V" = -240;
"@MMK_R_Y" = -240;
"@MMK_R_f" = -64;
"@MMK_R_f.dnom" = 21;
"@MMK_R_fraction" = 392;
"@MMK_R_g.dnom" = -32;
"@MMK_R_j.dnom" = 75;
"@MMK_R_nine" = -40;
"@MMK_R_o.dnom" = -11;
"@MMK_R_seven" = -160;
"@MMK_R_seven.dnom" = -22;
"@MMK_R_v" = -128;
"@MMK_R_v.dnom" = 21;
"@MMK_R_x" = -80;
"@MMK_R_x.dnom" = -32;
"@MMK_R_zero.dnom" = -22;
_part.percentzero = -64;
};
"@MMK_L_zero.numr" = {
"@MMK_R_A" = -280;
"@MMK_R_J" = -320;
"@MMK_R_X" = -64;
"@MMK_R_four" = -112;
"@MMK_R_g" = -64;
"@MMK_R_j" = -24;
"@MMK_R_jdotless" = -24;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -64;
};
"@MMK_L_zero.subs" = {
"@MMK_R_O" = -40;
"@MMK_R_T" = -240;
"@MMK_R_U" = -40;
"@MMK_R_V" = -312;
"@MMK_R_Y" = -312;
"@MMK_R_f" = -72;
"@MMK_R_fraction" = 504;
"@MMK_R_lslash" = -32;
"@MMK_R_one" = -184;
"@MMK_R_seven" = -160;
"@MMK_R_u" = -32;
"@MMK_R_v" = -184;
};
"@MMK_L_zero.sups" = {
"@MMK_R_A" = -264;
"@MMK_R_J" = -320;
"@MMK_R_O" = -24;
"@MMK_R_five" = -24;
"@MMK_R_four" = -96;
"@MMK_R_g" = -136;
"@MMK_R_j" = -24;
"@MMK_R_jdotless" = -24;
"@MMK_R_lslash" = -32;
"@MMK_R_o" = -128;
"@MMK_R_s" = -80;
};
braceleft = {
"@MMK_R_A" = 0;
};
braceright = {
"@MMK_R_lslash" = 32;
Lslash = 40;
};
bracketright = {
"@MMK_R_j" = 56;
"@MMK_R_jdotless" = 56;
};
bracketright.case = {
"@MMK_R_j" = 56;
"@MMK_R_jdotless" = 56;
};
j.cv01 = {
"@MMK_R_V" = 0;
"@MMK_R_Y" = 0;
};
nine = {
"@MMK_R_seven" = 0;
};
nine.dnom = {
"@MMK_R_seven.dnom" = 0;
"@MMK_R_zero.dnom" = 0;
};
nine.tag = {
"@MMK_R_seven.tag" = 0;
};
nine.tag.black = {
"@MMK_R_seven.tag" = 0;
};
periodcentered.loclCAT = {
"@MMK_R_l" = -64;
};
periodcentered.loclCAT.case = {
"@MMK_R_H" = -16;
};
zero = {
"@MMK_R_seven" = 0;
};
zero.dnom = {
"@MMK_R_seven.dnom" = 0;
"@MMK_R_zero.dnom" = 0;
};
zero.tag = {
"@MMK_R_seven.tag" = 0;
};
zero.tag.black = {
"@MMK_R_seven.tag" = 0;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
name = Bottom;
},
{
type = "italic angle";
},
{
name = "Cap Center";
},
{
name = "Low Center";
}
);
note = "About:
- Geometric with a heart, Humanist with a soul

Metric:
- x-height: 0.7125
- Cap overshoot: Cap height * (0.0375 / 2) + 1 = 28
- Low overshoot: x-height * ((0.0375 + 0.0125) / 2) + 1 = 28

Thickness:
- Thin: 44
- Regular: 176
- Heavy: 416

Family tree:
- Avenir + Twentieth Century + San Francisco

Insight:
- Erbar Grotesk(1926)는 특징이 없고 읽기 쉬우며, 순수한 타이포그래피를 지향했다.
- Futura(1928)은 기하학적 조형 원리를 바탕으로 견고하면서도 읽기 쉬운 타이포그래피를 지향했다.
- Twentieth Century(1959)는 Futura를 견제하고자 만든 대체 글꼴이다.
- Avenir(1988)은 20세기 초 건조한 지오메트릭 산세리프 형태에서 휴머니스트 스타일을 결합한 자연스러운 타이포그래피를 지향했다.
- Circular(2013)는 그동안의 지오메트릭 산세리프 형태를 바탕으로 자연스럽고 노련한 타이포그래피를 지향했다.

Reference:
- Avenir
- San Francisco
- Circular
- Twentieth Century";
properties = (
{
key = designers;
values = (
{
language = dflt;
value = "Kil Hyung-jin, Kang Hanbin";
}
);
},
{
key = manufacturers;
values = (
{
language = dflt;
value = "Wanted Lab, Inc.";
}
);
},
{
key = manufacturerURL;
value = "https://wantedlab.com";
},
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright © 2023 Wanted Lab, Inc.";
}
);
},
{
key = licenses;
values = (
{
language = dflt;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
}
);
},
{
key = trademarks;
values = (
{
language = dflt;
value = "Wanted Sans is a trademark of Wanted Lab, Inc.
Wanted Logo is a trademark of Wanted Lab, Inc.";
}
);
},
{
key = vendorID;
value = WNTD;
},
{
key = licenseURL;
value = "https://scripts.sil.org/OFL";
}
);
settings = {
gridLength = 8;
gridSubDivision = 4;
keyboardIncrementBig = 4;
};
unitsPerEm = 2048;
userData = {
GSDimensionPlugin.Dimensions = {
"94F54C43-8AEE-4ED6-B3C2-2A9D33534E61" = {
HH = "392";
HV = "416";
OH = "392";
OV = "416";
nV = "400";
oH = "360";
oV = "376";
tH = "304";
};
m01 = {
HH = "164";
HV = "176";
OH = "168";
OV = "180";
nV = "168";
oH = "160";
oV = "172";
tH = "140";
};
};
};
versionMajor = 1;
versionMinor = 0;
}
